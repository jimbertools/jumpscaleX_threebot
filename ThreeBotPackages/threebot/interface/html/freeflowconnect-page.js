((typeof self !== 'undefined' ? self : this)["webpackJsonp"] = (typeof self !== 'undefined' ? self : this)["webpackJsonp"] || []).push([["freeflowconnect-page"],{

/***/ "./node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js?!./src/views/freeflowconnect/freeflowconnect.js?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader??ref--13-0!./src/views/freeflowconnect/freeflowconnect.js?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var _plugins_janus_videoroom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plugins/janus.videoroom */ \"./src/plugins/janus.videoroom.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'freeflowconnect',\n  components: {},\n  props: [],\n  data () {\n    return {\n      message: null,\n      expanded: false,\n      showCreateRoomDialog: false,\n      roomName: null,\n      userName: null,\n      janus: null,\n      muted: false,\n      published: false\n    }\n  },\n  computed: {\n    ...Object(vuex__WEBPACK_IMPORTED_MODULE_0__[\"mapGetters\"])(['currentRoom']),\n    roomNameFromRoute () {\n      return this.$route.params.roomName\n    },\n    getUsers () {\n      let myUser = this.currentRoom.users.filter((userName) => userName === this.userName)\n      let otherUsers = this.currentRoom.users.filter((userName) => userName !== this.userName)\n      return myUser.concat(otherUsers)\n    }\n  },\n  mounted () {\n    this.roomName = this.roomNameFromRoute\n\n    if (this.userName === null || this.userName === undefined) {\n      this.showCreateRoomDialog = true\n      return\n    }\n\n    if (this.roomNameFromRoute !== undefined) {\n      // join the room\n      this.setCurrentRoom(this.roomNameFromRoute)\n      this.$socket.emit('joinRoom', { room: this.roomNameFromRoute, user: this.userName })\n\n      this.janus = new _plugins_janus_videoroom__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.roomName)\n      console.log(this.janus)\n    } else {\n      // don't join the room\n    }\n  },\n  methods: {\n    ...Object(vuex__WEBPACK_IMPORTED_MODULE_0__[\"mapActions\"])(['setCurrentRoom', 'getCurrentRoom']),\n\n    confirmRoomName () {\n      this.showCreateRoomDialog = false\n      console.log('Helloooooo: ' + this.roomName)\n      this.createRoom()\n    },\n\n    createRoom (events) {\n      if (this.roomName !== null) {\n        if (this.roomNameFromRoute === null || this.roomNameFromRoute === undefined) {\n          this.roomName = this.roomName + '-' + Math.random().toString(36).substring(2, 15).toUpperCase()\n\n          this.$router.push({\n            name: 'connectWithRoom', params: { roomName: this.roomName }\n          })\n        } else {\n          this.roomName = this.roomNameFromRoute\n        }\n\n        this.setCurrentRoom(this.roomName)\n        this.$socket.emit('joinRoom', { room: this.roomName, user: this.userName })\n\n        this.janus = new _plugins_janus_videoroom__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.roomName)\n        console.log(this.janus)\n      }\n    },\n    leave: function () {\n      console.log('We are going to attempt to disconnect.')\n      this.janus.disconnect()\n    },\n    join: function () {\n      console.log('We are going to attempt to connect.')\n      this.janus.connect(this.roomName)\n    },\n    showUsers: function () {\n      console.log('showUsers in room ', this.roomName)\n      this.janus.showUsers(this.roomName)\n    },\n    toggleMute: function () {\n      console.log('Toggling microphone')\n\n      var isMuted = this.janus.toggleMute()\n      this.muted = isMuted\n    },\n    unpublish: function () {\n      console.log('Unpublishing feed')\n      this.janus.unpublishOwnFeed()\n      this.published = !this.published\n    },\n    publish: function () {\n      console.log('Publishing feed')\n      this.janus.publishOwnFeed(true)\n      this.published = !this.published\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZ1ZS9jbGktcGx1Z2luLWVzbGludC9ub2RlX21vZHVsZXMvZXNsaW50LWxvYWRlci9pbmRleC5qcz8hLi9zcmMvdmlld3MvZnJlZWZsb3djb25uZWN0L2ZyZWVmbG93Y29ubmVjdC5qcz92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvZnJlZWZsb3djb25uZWN0L2ZyZWVmbG93Y29ubmVjdC5qcz8wOGVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4J1xuaW1wb3J0IEphbnVzV3JhcHBlciBmcm9tICcuLi8uLi9wbHVnaW5zL2phbnVzLnZpZGVvcm9vbSdcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiAnZnJlZWZsb3djb25uZWN0JyxcbiAgY29tcG9uZW50czoge30sXG4gIHByb3BzOiBbXSxcbiAgZGF0YSAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG1lc3NhZ2U6IG51bGwsXG4gICAgICBleHBhbmRlZDogZmFsc2UsXG4gICAgICBzaG93Q3JlYXRlUm9vbURpYWxvZzogZmFsc2UsXG4gICAgICByb29tTmFtZTogbnVsbCxcbiAgICAgIHVzZXJOYW1lOiBudWxsLFxuICAgICAgamFudXM6IG51bGwsXG4gICAgICBtdXRlZDogZmFsc2UsXG4gICAgICBwdWJsaXNoZWQ6IGZhbHNlXG4gICAgfVxuICB9LFxuICBjb21wdXRlZDoge1xuICAgIC4uLm1hcEdldHRlcnMoWydjdXJyZW50Um9vbSddKSxcbiAgICByb29tTmFtZUZyb21Sb3V0ZSAoKSB7XG4gICAgICByZXR1cm4gdGhpcy4kcm91dGUucGFyYW1zLnJvb21OYW1lXG4gICAgfSxcbiAgICBnZXRVc2VycyAoKSB7XG4gICAgICBsZXQgbXlVc2VyID0gdGhpcy5jdXJyZW50Um9vbS51c2Vycy5maWx0ZXIoKHVzZXJOYW1lKSA9PiB1c2VyTmFtZSA9PT0gdGhpcy51c2VyTmFtZSlcbiAgICAgIGxldCBvdGhlclVzZXJzID0gdGhpcy5jdXJyZW50Um9vbS51c2Vycy5maWx0ZXIoKHVzZXJOYW1lKSA9PiB1c2VyTmFtZSAhPT0gdGhpcy51c2VyTmFtZSlcbiAgICAgIHJldHVybiBteVVzZXIuY29uY2F0KG90aGVyVXNlcnMpXG4gICAgfVxuICB9LFxuICBtb3VudGVkICgpIHtcbiAgICB0aGlzLnJvb21OYW1lID0gdGhpcy5yb29tTmFtZUZyb21Sb3V0ZVxuXG4gICAgaWYgKHRoaXMudXNlck5hbWUgPT09IG51bGwgfHwgdGhpcy51c2VyTmFtZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnNob3dDcmVhdGVSb29tRGlhbG9nID0gdHJ1ZVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHRoaXMucm9vbU5hbWVGcm9tUm91dGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gam9pbiB0aGUgcm9vbVxuICAgICAgdGhpcy5zZXRDdXJyZW50Um9vbSh0aGlzLnJvb21OYW1lRnJvbVJvdXRlKVxuICAgICAgdGhpcy4kc29ja2V0LmVtaXQoJ2pvaW5Sb29tJywgeyByb29tOiB0aGlzLnJvb21OYW1lRnJvbVJvdXRlLCB1c2VyOiB0aGlzLnVzZXJOYW1lIH0pXG5cbiAgICAgIHRoaXMuamFudXMgPSBuZXcgSmFudXNXcmFwcGVyKHRoaXMucm9vbU5hbWUpXG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmphbnVzKVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBkb24ndCBqb2luIHRoZSByb29tXG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgLi4ubWFwQWN0aW9ucyhbJ3NldEN1cnJlbnRSb29tJywgJ2dldEN1cnJlbnRSb29tJ10pLFxuXG4gICAgY29uZmlybVJvb21OYW1lICgpIHtcbiAgICAgIHRoaXMuc2hvd0NyZWF0ZVJvb21EaWFsb2cgPSBmYWxzZVxuICAgICAgY29uc29sZS5sb2coJ0hlbGxvb29vb286ICcgKyB0aGlzLnJvb21OYW1lKVxuICAgICAgdGhpcy5jcmVhdGVSb29tKClcbiAgICB9LFxuXG4gICAgY3JlYXRlUm9vbSAoZXZlbnRzKSB7XG4gICAgICBpZiAodGhpcy5yb29tTmFtZSAhPT0gbnVsbCkge1xuICAgICAgICBpZiAodGhpcy5yb29tTmFtZUZyb21Sb3V0ZSA9PT0gbnVsbCB8fCB0aGlzLnJvb21OYW1lRnJvbVJvdXRlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB0aGlzLnJvb21OYW1lID0gdGhpcy5yb29tTmFtZSArICctJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygyLCAxNSkudG9VcHBlckNhc2UoKVxuXG4gICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goe1xuICAgICAgICAgICAgbmFtZTogJ2Nvbm5lY3RXaXRoUm9vbScsIHBhcmFtczogeyByb29tTmFtZTogdGhpcy5yb29tTmFtZSB9XG4gICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnJvb21OYW1lID0gdGhpcy5yb29tTmFtZUZyb21Sb3V0ZVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXRDdXJyZW50Um9vbSh0aGlzLnJvb21OYW1lKVxuICAgICAgICB0aGlzLiRzb2NrZXQuZW1pdCgnam9pblJvb20nLCB7IHJvb206IHRoaXMucm9vbU5hbWUsIHVzZXI6IHRoaXMudXNlck5hbWUgfSlcblxuICAgICAgICB0aGlzLmphbnVzID0gbmV3IEphbnVzV3JhcHBlcih0aGlzLnJvb21OYW1lKVxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmphbnVzKVxuICAgICAgfVxuICAgIH0sXG4gICAgbGVhdmU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdXZSBhcmUgZ29pbmcgdG8gYXR0ZW1wdCB0byBkaXNjb25uZWN0LicpXG4gICAgICB0aGlzLmphbnVzLmRpc2Nvbm5lY3QoKVxuICAgIH0sXG4gICAgam9pbjogZnVuY3Rpb24gKCkge1xuICAgICAgY29uc29sZS5sb2coJ1dlIGFyZSBnb2luZyB0byBhdHRlbXB0IHRvIGNvbm5lY3QuJylcbiAgICAgIHRoaXMuamFudXMuY29ubmVjdCh0aGlzLnJvb21OYW1lKVxuICAgIH0sXG4gICAgc2hvd1VzZXJzOiBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zb2xlLmxvZygnc2hvd1VzZXJzIGluIHJvb20gJywgdGhpcy5yb29tTmFtZSlcbiAgICAgIHRoaXMuamFudXMuc2hvd1VzZXJzKHRoaXMucm9vbU5hbWUpXG4gICAgfSxcbiAgICB0b2dnbGVNdXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zb2xlLmxvZygnVG9nZ2xpbmcgbWljcm9waG9uZScpXG5cbiAgICAgIHZhciBpc011dGVkID0gdGhpcy5qYW51cy50b2dnbGVNdXRlKClcbiAgICAgIHRoaXMubXV0ZWQgPSBpc011dGVkXG4gICAgfSxcbiAgICB1bnB1Ymxpc2g6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdVbnB1Ymxpc2hpbmcgZmVlZCcpXG4gICAgICB0aGlzLmphbnVzLnVucHVibGlzaE93bkZlZWQoKVxuICAgICAgdGhpcy5wdWJsaXNoZWQgPSAhdGhpcy5wdWJsaXNoZWRcbiAgICB9LFxuICAgIHB1Ymxpc2g6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdQdWJsaXNoaW5nIGZlZWQnKVxuICAgICAgdGhpcy5qYW51cy5wdWJsaXNoT3duRmVlZCh0cnVlKVxuICAgICAgdGhpcy5wdWJsaXNoZWQgPSAhdGhpcy5wdWJsaXNoZWRcbiAgICB9XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js?!./src/views/freeflowconnect/freeflowconnect.js?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"7b93bd1d-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true&":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"7b93bd1d-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"section\",\n    { staticClass: \"freeflowconnect\" },\n    [\n      _c(\n        \"v-row\",\n        [\n          _vm.currentRoom\n            ? _c(\n                \"v-flex\",\n                { staticClass: \"py-2 px-4\" },\n                [\n                  _c(\n                    \"v-card\",\n                    [\n                      _c(\n                        \"v-card-title\",\n                        { staticClass: \"primary white--text py-2\" },\n                        [\n                          _c(\n                            \"v-row\",\n                            { staticClass: \"px-2\", attrs: { align: \"center\" } },\n                            [\n                              _c(\"v-avatar\", {\n                                staticClass: \"mr-3\",\n                                attrs: {\n                                  size: \"8\",\n                                  color: \"secondary darken-2 \"\n                                }\n                              }),\n                              _c(\"span\", { staticClass: \"text-uppercase\" }, [\n                                _vm._v(\n                                  \"\\n              \" +\n                                    _vm._s(_vm.currentRoom.name) +\n                                    \"\\n            \"\n                                )\n                              ]),\n                              _c(\"v-spacer\"),\n                              _c(\n                                \"v-btn\",\n                                {\n                                  attrs: { dark: \"\", small: \"\", icon: \"\" },\n                                  on: {\n                                    click: function($event) {\n                                      _vm.expanded = !_vm.expanded\n                                    }\n                                  }\n                                },\n                                [\n                                  !_vm.expanded\n                                    ? _c(\"v-icon\", { attrs: { small: \"\" } }, [\n                                        _vm._v(\"fas fa-expand\")\n                                      ])\n                                    : _c(\"v-icon\", { attrs: { small: \"\" } }, [\n                                        _vm._v(\"fas fa-compress\")\n                                      ])\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"v-card-text\",\n                        { staticClass: \"py-2\" },\n                        [\n                          _c(\n                            \"v-row\",\n                            { attrs: { wrap: \"\" } },\n                            _vm._l(_vm.getUsers, function(user, index) {\n                              return _c(\n                                \"v-flex\",\n                                {\n                                  key: index,\n                                  staticClass: \"pa-1\",\n                                  attrs: { \"d-flex\": \"\", md4: \"\" }\n                                },\n                                [\n                                  _c(\n                                    \"v-card\",\n                                    { staticStyle: { width: \"100%\" } },\n                                    [\n                                      _c(\n                                        \"v-card-title\",\n                                        { staticClass: \"primary white--text\" },\n                                        [\n                                          index == 0\n                                            ? _c(\"span\", [\n                                                _c(\"strong\", [\n                                                  _vm._v(_vm._s(user))\n                                                ])\n                                              ])\n                                            : _c(\"span\", [\n                                                _vm._v(_vm._s(user))\n                                              ]),\n                                          _c(\"v-spacer\"),\n                                          index == 0\n                                            ? _c(\n                                                \"div\",\n                                                [\n                                                  !_vm.published\n                                                    ? _c(\n                                                        \"v-btn\",\n                                                        {\n                                                          attrs: {\n                                                            dark: \"\",\n                                                            small: \"\",\n                                                            icon: \"\"\n                                                          },\n                                                          on: {\n                                                            click: _vm.unpublish\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\n                                                            \"v-icon\",\n                                                            {\n                                                              attrs: {\n                                                                small: \"\"\n                                                              }\n                                                            },\n                                                            [\n                                                              _vm._v(\n                                                                \"fas fa-video\"\n                                                              )\n                                                            ]\n                                                          )\n                                                        ],\n                                                        1\n                                                      )\n                                                    : _c(\n                                                        \"v-btn\",\n                                                        {\n                                                          attrs: {\n                                                            dark: \"\",\n                                                            small: \"\",\n                                                            icon: \"\"\n                                                          },\n                                                          on: {\n                                                            click: _vm.publish\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\n                                                            \"v-icon\",\n                                                            {\n                                                              attrs: {\n                                                                small: \"\"\n                                                              }\n                                                            },\n                                                            [\n                                                              _vm._v(\n                                                                \"fas fa-video-slash\"\n                                                              )\n                                                            ]\n                                                          )\n                                                        ],\n                                                        1\n                                                      ),\n                                                  !_vm.muted\n                                                    ? _c(\n                                                        \"v-btn\",\n                                                        {\n                                                          attrs: {\n                                                            dark: \"\",\n                                                            small: \"\",\n                                                            icon: \"\"\n                                                          },\n                                                          on: {\n                                                            click:\n                                                              _vm.toggleMute\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\n                                                            \"v-icon\",\n                                                            {\n                                                              attrs: {\n                                                                small: \"\"\n                                                              }\n                                                            },\n                                                            [\n                                                              _vm._v(\n                                                                \"fas fa-microphone\"\n                                                              )\n                                                            ]\n                                                          )\n                                                        ],\n                                                        1\n                                                      )\n                                                    : _c(\n                                                        \"v-btn\",\n                                                        {\n                                                          attrs: {\n                                                            dark: \"\",\n                                                            small: \"\",\n                                                            icon: \"\"\n                                                          },\n                                                          on: {\n                                                            click:\n                                                              _vm.toggleMute\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\n                                                            \"v-icon\",\n                                                            {\n                                                              attrs: {\n                                                                small: \"\"\n                                                              }\n                                                            },\n                                                            [\n                                                              _vm._v(\n                                                                \"fas fa-microphone-slash\"\n                                                              )\n                                                            ]\n                                                          )\n                                                        ],\n                                                        1\n                                                      )\n                                                ],\n                                                1\n                                              )\n                                            : _vm._e()\n                                        ],\n                                        1\n                                      ),\n                                      _c(\n                                        \"v-card-text\",\n                                        { staticClass: \"pa-0 ma-0\" },\n                                        [\n                                          _c(\"video\", {\n                                            staticStyle: {\n                                              display: \"flex\",\n                                              width: \"100%\",\n                                              \"border-radius\":\n                                                \"0px 0px 10px 10px\"\n                                            },\n                                            attrs: {\n                                              id: \"feed\" + index,\n                                              controls: \"controls\",\n                                              autoplay: \"autoplay\"\n                                            }\n                                          })\n                                        ]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              )\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"v-dialog\",\n        {\n          attrs: { \"max-width\": \"600px\" },\n          model: {\n            value: _vm.showCreateRoomDialog,\n            callback: function($$v) {\n              _vm.showCreateRoomDialog = $$v\n            },\n            expression: \"showCreateRoomDialog\"\n          }\n        },\n        [\n          _c(\n            \"v-card\",\n            [\n              _c(\n                \"v-toolbar\",\n                {\n                  staticClass: \"mb-3 text-uppercase\",\n                  attrs: { color: \"primary\", dark: \"\" }\n                },\n                [\n                  _c(\"v-card-title\", [\n                    _vm._v(\"Please fill in the following information\")\n                  ]),\n                  _c(\"v-spacer\"),\n                  _c(\n                    \"v-btn\",\n                    {\n                      staticClass: \"mr-0\",\n                      attrs: { icon: \"\" },\n                      on: {\n                        click: function($event) {\n                          _vm.showCreateRoomDialog = false\n                        }\n                      }\n                    },\n                    [_c(\"v-icon\", [_vm._v(\"fas fa-times\")])],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"v-card-text\",\n                [\n                  _c(\"p\", [_vm._v(\"What's your name?\")]),\n                  _c(\"v-text-field\", {\n                    attrs: { id: \"nameField\", label: \"Name *\", autofocus: \"\" },\n                    on: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.confirmRoomName($event)\n                      }\n                    },\n                    model: {\n                      value: _vm.userName,\n                      callback: function($$v) {\n                        _vm.userName = $$v\n                      },\n                      expression: \"userName\"\n                    }\n                  }),\n                  _c(\"p\", [\n                    _vm._v(\"Which room name would you like to create?\")\n                  ]),\n                  _c(\"v-text-field\", {\n                    attrs: { id: \"roomNameField\", label: \"Room name *\" },\n                    on: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.confirmRoomName($event)\n                      }\n                    },\n                    model: {\n                      value: _vm.roomName,\n                      callback: function($$v) {\n                        _vm.roomName = $$v\n                      },\n                      expression: \"roomName\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-card-actions\",\n                [\n                  _c(\"div\", { staticClass: \"flex-grow-1\" }),\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: { text: \"\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.confirmRoomName()\n                        }\n                      }\n                    },\n                    [_vm._v(\"Ok\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"7b93bd1d-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true&\n");

/***/ }),

/***/ "./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--8-oneOf-1-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--8-oneOf-1-2!./node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPyEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8hLi9zcmMvdmlld3MvZnJlZWZsb3djb25uZWN0L2ZyZWVmbG93Y29ubmVjdC5zY3NzP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9OTgzY2JlMmUmc2NvcGVkPXRydWUmbGFuZz1zY3NzJi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy92aWV3cy9mcmVlZmxvd2Nvbm5lY3QvZnJlZWZsb3djb25uZWN0LnNjc3M/YTFiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&\n");

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js?!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-style-loader??ref--8-oneOf-1-0!./node_modules/css-loader??ref--8-oneOf-1-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--8-oneOf-1-2!./node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss& ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(/*! !../../../node_modules/css-loader??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss& */ \"./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(/*! ../../../node_modules/vue-style-loader/lib/addStylesClient.js */ \"./node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"03a339e4\", content, false, {\"sourceMap\":false,\"shadowMode\":false});\n// Hot Module Replacement\nif(true) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(/*! !../../../node_modules/css-loader??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss& */ \"./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&\", function() {\n     var newContent = __webpack_require__(/*! !../../../node_modules/css-loader??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss& */ \"./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&\");\n     if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcz8hLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPyEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8hLi9zcmMvdmlld3MvZnJlZWZsb3djb25uZWN0L2ZyZWVmbG93Y29ubmVjdC5zY3NzP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9OTgzY2JlMmUmc2NvcGVkPXRydWUmbGFuZz1zY3NzJi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy92aWV3cy9mcmVlZmxvd2Nvbm5lY3QvZnJlZWZsb3djb25uZWN0LnNjc3M/MWFlYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTgtb25lT2YtMS0zIS4vZnJlZWZsb3djb25uZWN0LnNjc3M/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD05ODNjYmUyZSZzY29wZWQ9dHJ1ZSZsYW5nPXNjc3MmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjAzYTMzOWU0XCIsIGNvbnRlbnQsIGZhbHNlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZSxcInNoYWRvd01vZGVcIjpmYWxzZX0pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuIC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG4gaWYoIWNvbnRlbnQubG9jYWxzKSB7XG4gICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOC1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTgtb25lT2YtMS0zIS4vZnJlZWZsb3djb25uZWN0LnNjc3M/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD05ODNjYmUyZSZzY29wZWQ9dHJ1ZSZsYW5nPXNjc3MmXCIsIGZ1bmN0aW9uKCkge1xuICAgICB2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS04LW9uZU9mLTEtMyEuL2ZyZWVmbG93Y29ubmVjdC5zY3NzP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9OTgzY2JlMmUmc2NvcGVkPXRydWUmbGFuZz1zY3NzJlwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vue-style-loader/index.js?!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&\n");

/***/ }),

/***/ "./src/plugins/janus.js":
/*!******************************!*\
  !*** ./src/plugins/janus.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var webrtc_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webrtc-adapter */ \"./node_modules/webrtc-adapter/src/js/adapter_core.js\");\n/* eslint-disable */\n/*\n\tThe MIT License (MIT)\n\n\tCopyright (c) 2016 Meetecho\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the \"Software\"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\tOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\tTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\tOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\tARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\tOTHER DEALINGS IN THE SOFTWARE.\n */\n\n\n// List of sessions\nJanus.sessions = {};\n\nJanus.isExtensionEnabled = function() {\n\tif(navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n\t\t// No need for the extension, getDisplayMedia is supported\n\t\treturn true;\n\t}\n\tif(window.navigator.userAgent.match('Chrome')) {\n\t\tvar chromever = parseInt(window.navigator.userAgent.match(/Chrome\\/(.*) /)[1], 10);\n\t\tvar maxver = 33;\n\t\tif(window.navigator.userAgent.match('Linux'))\n\t\t\tmaxver = 35;\t// \"known\" crash in chrome 34 and 35 on linux\n\t\tif(chromever >= 26 && chromever <= maxver) {\n\t\t\t// Older versions of Chrome don't support this extension-based approach, so lie\n\t\t\treturn true;\n\t\t}\n\t\treturn Janus.extension.isInstalled();\n\t} else {\n\t\t// Firefox of others, no need for the extension (but this doesn't mean it will work)\n\t\treturn true;\n\t}\n};\n\nvar defaultExtension = {\n\t// Screensharing Chrome Extension ID\n\textensionId: 'hapfgfdkleiggjjpfpenajgdnfckjpaj',\n\tisInstalled: function() { return document.querySelector('#janus-extension-installed') !== null; },\n\tgetScreen: function (callback) {\n\t\tvar pending = window.setTimeout(function () {\n\t\t\tvar error = new Error('NavigatorUserMediaError');\n\t\t\terror.name = 'The required Chrome extension is not installed: click <a href=\"#\">here</a> to install it. (NOTE: this will need you to refresh the page)';\n\t\t\treturn callback(error);\n\t\t}, 1000);\n\t\tthis.cache[pending] = callback;\n\t\twindow.postMessage({ type: 'janusGetScreen', id: pending }, '*');\n\t},\n\tinit: function () {\n\t\tvar cache = {};\n\t\tthis.cache = cache;\n\t\t// Wait for events from the Chrome Extension\n\t\twindow.addEventListener('message', function (event) {\n\t\t\tif(event.origin != window.location.origin)\n\t\t\t\treturn;\n\t\t\tif(event.data.type == 'janusGotScreen' && cache[event.data.id]) {\n\t\t\t\tvar callback = cache[event.data.id];\n\t\t\t\tdelete cache[event.data.id];\n\n\t\t\t\tif (event.data.sourceId === '') {\n\t\t\t\t\t// user canceled\n\t\t\t\t\tvar error = new Error('NavigatorUserMediaError');\n\t\t\t\t\terror.name = 'You cancelled the request for permission, giving up...';\n\t\t\t\t\tcallback(error);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(null, event.data.sourceId);\n\t\t\t\t}\n\t\t\t} else if (event.data.type == 'janusGetScreenPending') {\n\t\t\t\tconsole.log('clearing ', event.data.id);\n\t\t\t\twindow.clearTimeout(event.data.id);\n\t\t\t}\n\t\t});\n\t}\n};\n\nJanus.useDefaultDependencies = function (deps) {\n\tvar f = (deps && deps.fetch) || fetch;\n\tvar p = (deps && deps.Promise) || Promise;\n\tvar socketCls = (deps && deps.WebSocket) || WebSocket;\n\n\treturn {\n\t\tnewWebSocket: function(server, proto) { return new socketCls(server, proto); },\n\t\textension: (deps && deps.extension) || defaultExtension,\n\t\tisArray: function(arr) { return Array.isArray(arr); },\n\t\twebRTCAdapter: (deps && deps.adapter) || webrtc_adapter__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n\t\thttpAPICall: function(url, options) {\n\t\t\tvar fetchOptions = {\n\t\t\t\tmethod: options.verb,\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json, text/plain, */*'\n\t\t\t\t},\n\t\t\t\tcache: 'no-cache'\n\t\t\t};\n\t\t\tif(options.verb === \"POST\") {\n\t\t\t\tfetchOptions.headers['Content-Type'] = 'application/json';\n\t\t\t}\n\t\t\tif(options.withCredentials !== undefined) {\n\t\t\t\tfetchOptions.credentials = options.withCredentials === true ? 'include' : (options.withCredentials ? options.withCredentials : 'omit');\n\t\t\t}\n\t\t\tif(options.body !== undefined) {\n\t\t\t\tfetchOptions.body = JSON.stringify(options.body);\n\t\t\t}\n\n\t\t\tvar fetching = f(url, fetchOptions).catch(function(error) {\n\t\t\t\treturn p.reject({message: 'Probably a network error, is the server down?', error: error});\n\t\t\t});\n\n\t\t\t/*\n\t\t\t * fetch() does not natively support timeouts.\n\t\t\t * Work around this by starting a timeout manually, and racing it agains the fetch() to see which thing resolves first.\n\t\t\t */\n\n\t\t\tif(options.timeout !== undefined) {\n\t\t\t\tvar timeout = new p(function(resolve, reject) {\n\t\t\t\t\tvar timerId = setTimeout(function() {\n\t\t\t\t\t\tclearTimeout(timerId);\n\t\t\t\t\t\treturn reject({message: 'Request timed out', timeout: options.timeout});\n\t\t\t\t\t}, options.timeout);\n\t\t\t\t});\n\t\t\t\tfetching = p.race([fetching,timeout]);\n\t\t\t}\n\n\t\t\tfetching.then(function(response) {\n\t\t\t\tif(response.ok) {\n\t\t\t\t\tif(typeof(options.success) === typeof(Janus.noop)) {\n\t\t\t\t\t\treturn response.json().then(function(parsed) {\n\t\t\t\t\t\t\toptions.success(parsed);\n\t\t\t\t\t\t}).catch(function(error) {\n\t\t\t\t\t\t\treturn p.reject({message: 'Failed to parse response body', error: error, response: response});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn p.reject({message: 'API call failed', response: response});\n\t\t\t\t}\n\t\t\t}).catch(function(error) {\n\t\t\t\tif(typeof(options.error) === typeof(Janus.noop)) {\n\t\t\t\t\toptions.error(error.message || '<< internal error >>', error);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn fetching;\n\t\t}\n\t}\n};\n\nJanus.useOldDependencies = function (deps) {\n\tvar jq = (deps && deps.jQuery) || jQuery;\n\tvar socketCls = (deps && deps.WebSocket) || WebSocket;\n\treturn {\n\t\tnewWebSocket: function(server, proto) { return new socketCls(server, proto); },\n\t\tisArray: function(arr) { return jq.isArray(arr); },\n\t\textension: (deps && deps.extension) || defaultExtension,\n\t\twebRTCAdapter: (deps && deps.adapter) || webrtc_adapter__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n\t\thttpAPICall: function(url, options) {\n\t\t\tvar payload = options.body !== undefined ? {\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tdata: JSON.stringify(options.body)\n\t\t\t} : {};\n\t\t\tvar credentials = options.withCredentials !== undefined ? {xhrFields: {withCredentials: options.withCredentials}} : {};\n\n\t\t\treturn jq.ajax(jq.extend(payload, credentials, {\n\t\t\t\turl: url,\n\t\t\t\ttype: options.verb,\n\t\t\t\tcache: false,\n\t\t\t\tdataType: 'json',\n\t\t\t\tasync: options.async,\n\t\t\t\ttimeout: options.timeout,\n\t\t\t\tsuccess: function(result) {\n\t\t\t\t\tif(typeof(options.success) === typeof(Janus.noop)) {\n\t\t\t\t\t\toptions.success(result);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function(xhr, status, err) {\n\t\t\t\t\tif(typeof(options.error) === typeof(Janus.noop)) {\n\t\t\t\t\t\toptions.error(status, err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t},\n\t};\n};\n\nJanus.noop = function() {};\n\nJanus.dataChanDefaultLabel = \"JanusDataChannel\";\n\n// Note: in the future we may want to change this, e.g., as was\n// attempted in https://github.com/meetecho/janus-gateway/issues/1670\nJanus.endOfCandidates = null;\n\n// Initialization\nJanus.init = function(options) {\n\toptions = options || {};\n\toptions.callback = (typeof options.callback == \"function\") ? options.callback : Janus.noop;\n\tif(Janus.initDone === true) {\n\t\t// Already initialized\n\t\toptions.callback();\n\t} else {\n\t\tif(typeof console == \"undefined\" || typeof console.log == \"undefined\")\n\t\t\tconsole = { log: function() {} };\n\t\t// Console logging (all debugging disabled by default)\n\t\tJanus.trace = Janus.noop;\n\t\tJanus.debug = Janus.noop;\n\t\tJanus.vdebug = Janus.noop;\n\t\tJanus.log = Janus.noop;\n\t\tJanus.warn = Janus.noop;\n\t\tJanus.error = Janus.noop;\n\t\tif(options.debug === true || options.debug === \"all\") {\n\t\t\t// Enable all debugging levels\n\t\t\tJanus.trace = console.trace.bind(console);\n\t\t\tJanus.debug = console.debug.bind(console);\n\t\t\tJanus.vdebug = console.debug.bind(console);\n\t\t\tJanus.log = console.log.bind(console);\n\t\t\tJanus.warn = console.warn.bind(console);\n\t\t\tJanus.error = console.error.bind(console);\n\t\t} else if(Array.isArray(options.debug)) {\n\t\t\tfor(var i in options.debug) {\n\t\t\t\tvar d = options.debug[i];\n\t\t\t\tswitch(d) {\n\t\t\t\t\tcase \"trace\":\n\t\t\t\t\t\tJanus.trace = console.trace.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"debug\":\n\t\t\t\t\t\tJanus.debug = console.debug.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"vdebug\":\n\t\t\t\t\t\tJanus.vdebug = console.debug.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"log\":\n\t\t\t\t\t\tJanus.log = console.log.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"warn\":\n\t\t\t\t\t\tJanus.warn = console.warn.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"error\":\n\t\t\t\t\t\tJanus.error = console.error.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error(\"Unknown debugging option '\" + d + \"' (supported: 'trace', 'debug', 'vdebug', 'log', warn', 'error')\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tJanus.log(\"Initializing library\");\n\n\t\tvar usedDependencies = options.dependencies || Janus.useDefaultDependencies();\n\t\tJanus.isArray = usedDependencies.isArray;\n\t\tJanus.webRTCAdapter = usedDependencies.webRTCAdapter;\n\t\tJanus.httpAPICall = usedDependencies.httpAPICall;\n\t\tJanus.newWebSocket = usedDependencies.newWebSocket;\n\t\tJanus.extension = usedDependencies.extension;\n\t\tJanus.extension.init();\n\n\t\t// Helper method to enumerate devices\n\t\tJanus.listDevices = function(callback, config) {\n\t\t\tcallback = (typeof callback == \"function\") ? callback : Janus.noop;\n\t\t\tif (config == null) config = { audio: true, video: true };\n\t\t\tif(Janus.isGetUserMediaAvailable()) {\n\t\t\t\tnavigator.mediaDevices.getUserMedia(config)\n\t\t\t\t.then(function(stream) {\n\t\t\t\t\tnavigator.mediaDevices.enumerateDevices().then(function(devices) {\n\t\t\t\t\t\tJanus.debug(devices);\n\t\t\t\t\t\tcallback(devices);\n\t\t\t\t\t\t// Get rid of the now useless stream\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar tracks = stream.getTracks();\n\t\t\t\t\t\t\tfor(var i in tracks) {\n\t\t\t\t\t\t\t\tvar mst = tracks[i];\n\t\t\t\t\t\t\t\tif(mst !== null && mst !== undefined)\n\t\t\t\t\t\t\t\t\tmst.stop();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch(e) {}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(function(err) {\n\t\t\t\t\tJanus.error(err);\n\t\t\t\t\tcallback([]);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tJanus.warn(\"navigator.mediaDevices unavailable\");\n\t\t\t\tcallback([]);\n\t\t\t}\n\t\t}\n\t\t// Helper methods to attach/reattach a stream to a video element (previously part of adapter.js)\n\t\tJanus.attachMediaStream = function(element, stream) {\n\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'chrome') {\n\t\t\t\tvar chromever = Janus.webRTCAdapter.browserDetails.version;\n\t\t\t\tif(chromever >= 52) {\n\t\t\t\t\telement.srcObject = stream;\n\t\t\t\t} else if(typeof element.src !== 'undefined') {\n\t\t\t\t\telement.src = URL.createObjectURL(stream);\n\t\t\t\t} else {\n\t\t\t\t\tJanus.error(\"Error attaching stream to element\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telement.srcObject = stream;\n\t\t\t}\n\t\t};\n\t\tJanus.reattachMediaStream = function(to, from) {\n\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'chrome') {\n\t\t\t\tvar chromever = Janus.webRTCAdapter.browserDetails.version;\n\t\t\t\tif(chromever >= 52) {\n\t\t\t\t\tto.srcObject = from.srcObject;\n\t\t\t\t} else if(typeof to.src !== 'undefined') {\n\t\t\t\t\tto.src = from.src;\n\t\t\t\t} else {\n\t\t\t\t\tJanus.error(\"Error reattaching stream to element\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tto.srcObject = from.srcObject;\n\t\t\t}\n\t\t};\n\t\t// Detect tab close: make sure we don't loose existing onbeforeunload handlers\n\t\t// (note: for iOS we need to subscribe to a different event, 'pagehide', see\n\t\t// https://gist.github.com/thehunmonkgroup/6bee8941a49b86be31a787fe8f4b8cfe)\n\t\tvar iOS = ['iPad', 'iPhone', 'iPod'].indexOf(navigator.platform) >= 0;\n\t\tvar eventName = iOS ? 'pagehide' : 'beforeunload';\n\t\tvar oldOBF = window[\"on\" + eventName];\n\t\twindow.addEventListener(eventName, function(event) {\n\t\t\tJanus.log(\"Closing window\");\n\t\t\tfor(var s in Janus.sessions) {\n\t\t\t\tif(Janus.sessions[s] !== null && Janus.sessions[s] !== undefined &&\n\t\t\t\t\t\tJanus.sessions[s].destroyOnUnload) {\n\t\t\t\t\tJanus.log(\"Destroying session \" + s);\n\t\t\t\t\tJanus.sessions[s].destroy({asyncRequest: false, notifyDestroyed: false});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(oldOBF && typeof oldOBF == \"function\")\n\t\t\t\toldOBF();\n\t\t});\n\t\t// If this is a Safari Technology Preview, check if VP8 is supported\n\t\tJanus.safariVp8 = false;\n\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'safari' &&\n\t\t\t\tJanus.webRTCAdapter.browserDetails.version >= 605) {\n\t\t\t// Let's see if RTCRtpSender.getCapabilities() is there\n\t\t\tif(RTCRtpSender && RTCRtpSender.getCapabilities && RTCRtpSender.getCapabilities(\"video\") &&\n\t\t\t\t\tRTCRtpSender.getCapabilities(\"video\").codecs && RTCRtpSender.getCapabilities(\"video\").codecs.length) {\n\t\t\t\tfor(var i in RTCRtpSender.getCapabilities(\"video\").codecs) {\n\t\t\t\t\tvar codec = RTCRtpSender.getCapabilities(\"video\").codecs[i];\n\t\t\t\t\tif(codec && codec.mimeType && codec.mimeType.toLowerCase() === \"video/vp8\") {\n\t\t\t\t\t\tJanus.safariVp8 = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(Janus.safariVp8) {\n\t\t\t\t\tJanus.log(\"This version of Safari supports VP8\");\n\t\t\t\t} else {\n\t\t\t\t\tJanus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" +\n\t\t\t\t\t\t\"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We do it in a very ugly way, as there's no alternative...\n\t\t\t\t// We create a PeerConnection to see if VP8 is in an offer\n\t\t\t\tvar testpc = new RTCPeerConnection({}, {});\n\t\t\t\ttestpc.createOffer({offerToReceiveVideo: true}).then(function(offer) {\n\t\t\t\t\tJanus.safariVp8 = offer.sdp.indexOf(\"VP8\") !== -1;\n\t\t\t\t\tif(Janus.safariVp8) {\n\t\t\t\t\t\tJanus.log(\"This version of Safari supports VP8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" +\n\t\t\t\t\t\t\t\"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n\t\t\t\t\t}\n\t\t\t\t\ttestpc.close();\n\t\t\t\t\ttestpc = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// Check if this browser supports Unified Plan and transceivers\n\t\t// Based on https://codepen.io/anon/pen/ZqLwWV?editors=0010\n\t\tJanus.unifiedPlan = false;\n\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'firefox' &&\n\t\t\t\tJanus.webRTCAdapter.browserDetails.version >= 59) {\n\t\t\t// Firefox definitely does, starting from version 59\n\t\t\tJanus.unifiedPlan = true;\n\t\t} else if(Janus.webRTCAdapter.browserDetails.browser === 'chrome' &&\n\t\t\t\tJanus.webRTCAdapter.browserDetails.version < 72) {\n\t\t\t// Chrome does, but it's only usable from version 72 on\n\t\t\tJanus.unifiedPlan = false;\n\t\t} else if(!('currentDirection' in RTCRtpTransceiver.prototype)) {\n\t\t\t// Safari supports addTransceiver() but not Unified Plan when\n\t\t\t// currentDirection is not defined (see codepen above)\n\t\t\tJanus.unifiedPlan = false;\n\t\t} else {\n\t\t\t// Check if addTransceiver() throws an exception\n\t\t\tconst tempPc = new RTCPeerConnection();\n\t\t\ttry {\n\t\t\t\ttempPc.addTransceiver('audio');\n\t\t\t\tJanus.unifiedPlan = true;\n\t\t\t} catch (e) {}\n\t\t\ttempPc.close();\n\t\t}\n\t\tJanus.initDone = true;\n\t\toptions.callback();\n\t}\n};\n\n// Helper method to check whether WebRTC is supported by this browser\nJanus.isWebrtcSupported = function() {\n\treturn window.RTCPeerConnection !== undefined && window.RTCPeerConnection !== null;\n};\n// Helper method to check whether devices can be accessed by this browser (e.g., not possible via plain HTTP)\nJanus.isGetUserMediaAvailable = function() {\n\treturn navigator.mediaDevices !== undefined && navigator.mediaDevices !== null &&\n\t\tnavigator.mediaDevices.getUserMedia !== undefined && navigator.mediaDevices.getUserMedia !== null;\n};\n\n// Helper method to create random identifiers (e.g., transaction)\nJanus.randomString = function(len) {\n\tvar charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tvar randomString = '';\n\tfor (var i = 0; i < len; i++) {\n\t\tvar randomPoz = Math.floor(Math.random() * charSet.length);\n\t\trandomString += charSet.substring(randomPoz,randomPoz+1);\n\t}\n\treturn randomString;\n}\n\n\nfunction Janus(gatewayCallbacks) {\n\tif(Janus.initDone === undefined) {\n\t\tgatewayCallbacks.error(\"Library not initialized\");\n\t\treturn {};\n\t}\n\tif(!Janus.isWebrtcSupported()) {\n\t\tgatewayCallbacks.error(\"WebRTC not supported by this browser\");\n\t\treturn {};\n\t}\n\tJanus.log(\"Library initialized: \" + Janus.initDone);\n\tgatewayCallbacks = gatewayCallbacks || {};\n\tgatewayCallbacks.success = (typeof gatewayCallbacks.success == \"function\") ? gatewayCallbacks.success : Janus.noop;\n\tgatewayCallbacks.error = (typeof gatewayCallbacks.error == \"function\") ? gatewayCallbacks.error : Janus.noop;\n\tgatewayCallbacks.destroyed = (typeof gatewayCallbacks.destroyed == \"function\") ? gatewayCallbacks.destroyed : Janus.noop;\n\tif(gatewayCallbacks.server === null || gatewayCallbacks.server === undefined) {\n\t\tgatewayCallbacks.error(\"Invalid server url\");\n\t\treturn {};\n\t}\n\tvar websockets = false;\n\tvar ws = null;\n\tvar wsHandlers = {};\n\tvar wsKeepaliveTimeoutId = null;\n\n\tvar servers = null, serversIndex = 0;\n\tvar server = gatewayCallbacks.server;\n\tif(Janus.isArray(server)) {\n\t\tJanus.log(\"Multiple servers provided (\" + server.length + \"), will use the first that works\");\n\t\tserver = null;\n\t\tservers = gatewayCallbacks.server;\n\t\tJanus.debug(servers);\n\t} else {\n\t\tif(server.indexOf(\"ws\") === 0) {\n\t\t\twebsockets = true;\n\t\t\tJanus.log(\"Using WebSockets to contact Janus: \" + server);\n\t\t} else {\n\t\t\twebsockets = false;\n\t\t\tJanus.log(\"Using REST API to contact Janus: \" + server);\n\t\t}\n\t}\n\tvar iceServers = gatewayCallbacks.iceServers;\n\tif(iceServers === undefined || iceServers === null)\n\t\ticeServers = [{urls: \"stun:stun.l.google.com:19302\"}];\n\tvar iceTransportPolicy = gatewayCallbacks.iceTransportPolicy;\n\tvar bundlePolicy = gatewayCallbacks.bundlePolicy;\n\t// Whether IPv6 candidates should be gathered\n\tvar ipv6Support = gatewayCallbacks.ipv6;\n\tif(ipv6Support === undefined || ipv6Support === null)\n\t\tipv6Support = false;\n\t// Whether we should enable the withCredentials flag for XHR requests\n\tvar withCredentials = false;\n\tif(gatewayCallbacks.withCredentials !== undefined && gatewayCallbacks.withCredentials !== null)\n\t\twithCredentials = gatewayCallbacks.withCredentials === true;\n\t// Optional max events\n\tvar maxev = 10;\n\tif(gatewayCallbacks.max_poll_events !== undefined && gatewayCallbacks.max_poll_events !== null)\n\t\tmaxev = gatewayCallbacks.max_poll_events;\n\tif(maxev < 1)\n\t\tmaxev = 1;\n\t// Token to use (only if the token based authentication mechanism is enabled)\n\tvar token = null;\n\tif(gatewayCallbacks.token !== undefined && gatewayCallbacks.token !== null)\n\t\ttoken = gatewayCallbacks.token;\n\t// API secret to use (only if the shared API secret is enabled)\n\tvar apisecret = null;\n\tif(gatewayCallbacks.apisecret !== undefined && gatewayCallbacks.apisecret !== null)\n\t\tapisecret = gatewayCallbacks.apisecret;\n\t// Whether we should destroy this session when onbeforeunload is called\n\tthis.destroyOnUnload = true;\n\tif(gatewayCallbacks.destroyOnUnload !== undefined && gatewayCallbacks.destroyOnUnload !== null)\n\t\tthis.destroyOnUnload = (gatewayCallbacks.destroyOnUnload === true);\n\t// Some timeout-related values\n\tvar keepAlivePeriod = 25000;\n\tif(gatewayCallbacks.keepAlivePeriod !== undefined && gatewayCallbacks.keepAlivePeriod !== null)\n\t\tkeepAlivePeriod = gatewayCallbacks.keepAlivePeriod;\n\tif(isNaN(keepAlivePeriod))\n\t\tkeepAlivePeriod = 25000;\n\tvar longPollTimeout = 60000;\n\tif(gatewayCallbacks.longPollTimeout !== undefined && gatewayCallbacks.longPollTimeout !== null)\n\t\tlongPollTimeout = gatewayCallbacks.longPollTimeout;\n\tif(isNaN(longPollTimeout))\n\t\tlongPollTimeout = 60000;\n\n\tvar connected = false;\n\tvar sessionId = null;\n\tvar pluginHandles = {};\n\tvar that = this;\n\tvar retries = 0;\n\tvar transactions = {};\n\tcreateSession(gatewayCallbacks);\n\n\t// Public methods\n\tthis.getServer = function() { return server; };\n\tthis.isConnected = function() { return connected; };\n\tthis.reconnect = function(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks[\"reconnect\"] = true;\n\t\tcreateSession(callbacks);\n\t};\n\tthis.getSessionId = function() { return sessionId; };\n\tthis.destroy = function(callbacks) { destroySession(callbacks); };\n\tthis.attach = function(callbacks) { createHandle(callbacks); };\n\n\tfunction eventHandler() {\n\t\tif(sessionId == null)\n\t\t\treturn;\n\t\tJanus.debug('Long poll...');\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar longpoll = server + \"/\" + sessionId + \"?rid=\" + new Date().getTime();\n\t\tif(maxev !== undefined && maxev !== null)\n\t\t\tlongpoll = longpoll + \"&maxev=\" + maxev;\n\t\tif(token !== null && token !== undefined)\n\t\t\tlongpoll = longpoll + \"&token=\" + encodeURIComponent(token);\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\tlongpoll = longpoll + \"&apisecret=\" + encodeURIComponent(apisecret);\n\t\tJanus.httpAPICall(longpoll, {\n\t\t\tverb: 'GET',\n\t\t\twithCredentials: withCredentials,\n\t\t\tsuccess: handleEvent,\n\t\t\ttimeout: longPollTimeout,\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\n\t\t\t\tretries++;\n\t\t\t\tif(retries > 3) {\n\t\t\t\t\t// Did we just lose the server? :-(\n\t\t\t\t\tconnected = false;\n\t\t\t\t\tgatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teventHandler();\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private event handler: this will trigger plugin callbacks, if set\n\tfunction handleEvent(json, skipTimeout) {\n\t\tretries = 0;\n\t\tif(!websockets && sessionId !== undefined && sessionId !== null && skipTimeout !== true)\n\t\t\teventHandler();\n\t\tif(!websockets && Janus.isArray(json)) {\n\t\t\t// We got an array: it means we passed a maxev > 1, iterate on all objects\n\t\t\tfor(var i=0; i<json.length; i++) {\n\t\t\t\thandleEvent(json[i], true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif(json[\"janus\"] === \"keepalive\") {\n\t\t\t// Nothing happened\n\t\t\tJanus.vdebug(\"Got a keepalive on session \" + sessionId);\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"ack\") {\n\t\t\t// Just an ack, we can probably ignore\n\t\t\tJanus.debug(\"Got an ack on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif(transaction !== null && transaction !== undefined) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif(reportSuccess !== null && reportSuccess !== undefined) {\n\t\t\t\t\treportSuccess(json);\n\t\t\t\t}\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"success\") {\n\t\t\t// Success!\n\t\t\tJanus.debug(\"Got a success on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif(transaction !== null && transaction !== undefined) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif(reportSuccess !== null && reportSuccess !== undefined) {\n\t\t\t\t\treportSuccess(json);\n\t\t\t\t}\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"trickle\") {\n\t\t\t// We got a trickle candidate from Janus\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar candidate = json[\"candidate\"];\n\t\t\tJanus.debug(\"Got a trickled candidate on session \" + sessionId);\n\t\t\tJanus.debug(candidate);\n\t\t\tvar config = pluginHandle.webrtcStuff;\n\t\t\tif(config.pc && config.remoteSdp) {\n\t\t\t\t// Add candidate right now\n\t\t\t\tJanus.debug(\"Adding remote candidate:\", candidate);\n\t\t\t\tif(!candidate || candidate.completed === true) {\n\t\t\t\t\t// end-of-candidates\n\t\t\t\t\tconfig.pc.addIceCandidate(Janus.endOfCandidates);\n\t\t\t\t} else {\n\t\t\t\t\t// New candidate\n\t\t\t\t\tconfig.pc.addIceCandidate(candidate);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We didn't do setRemoteDescription (trickle got here before the offer?)\n\t\t\t\tJanus.debug(\"We didn't do setRemoteDescription (trickle got here before the offer?), caching candidate\");\n\t\t\t\tif(!config.candidates)\n\t\t\t\t\tconfig.candidates = [];\n\t\t\t\tconfig.candidates.push(candidate);\n\t\t\t\tJanus.debug(config.candidates);\n\t\t\t}\n\t\t} else if(json[\"janus\"] === \"webrtcup\") {\n\t\t\t// The PeerConnection with the server is up! Notify this\n\t\t\tJanus.debug(\"Got a webrtcup event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.webrtcState(true);\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"hangup\") {\n\t\t\t// A plugin asked the core to hangup a PeerConnection on one of our handles\n\t\t\tJanus.debug(\"Got a hangup event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.webrtcState(false, json[\"reason\"]);\n\t\t\tpluginHandle.hangup();\n\t\t} else if(json[\"janus\"] === \"detached\") {\n\t\t\t// A plugin asked the core to detach one of our handles\n\t\t\tJanus.debug(\"Got a detached event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\t// Don't warn here because destroyHandle causes this situation.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.detached = true;\n\t\t\tpluginHandle.ondetached();\n\t\t\tpluginHandle.detach();\n\t\t} else if(json[\"janus\"] === \"media\") {\n\t\t\t// Media started/stopped flowing\n\t\t\tJanus.debug(\"Got a media event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.mediaState(json[\"type\"], json[\"receiving\"]);\n\t\t} else if(json[\"janus\"] === \"slowlink\") {\n\t\t\tJanus.debug(\"Got a slowlink event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\t// Trouble uplink or downlink\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.slowLink(json[\"uplink\"], json[\"lost\"]);\n\t\t} else if(json[\"janus\"] === \"error\") {\n\t\t\t// Oops, something wrong happened\n\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif(transaction !== null && transaction !== undefined) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif(reportSuccess !== null && reportSuccess !== undefined) {\n\t\t\t\t\treportSuccess(json);\n\t\t\t\t}\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(json[\"janus\"] === \"event\") {\n\t\t\tJanus.debug(\"Got a plugin event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif(sender === undefined || sender === null) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar plugindata = json[\"plugindata\"];\n\t\t\tif(plugindata === undefined || plugindata === null) {\n\t\t\t\tJanus.warn(\"Missing plugindata...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tJanus.debug(\"  -- Event is coming from \" + sender + \" (\" + plugindata[\"plugin\"] + \")\");\n\t\t\tvar data = plugindata[\"data\"];\n\t\t\tJanus.debug(data);\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif(pluginHandle === undefined || pluginHandle === null) {\n\t\t\t\tJanus.warn(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar jsep = json[\"jsep\"];\n\t\t\tif(jsep !== undefined && jsep !== null) {\n\t\t\t\tJanus.debug(\"Handling SDP as well...\");\n\t\t\t\tJanus.debug(jsep);\n\t\t\t}\n\t\t\tvar callback = pluginHandle.onmessage;\n\t\t\tif(callback !== null && callback !== undefined) {\n\t\t\t\tJanus.debug(\"Notifying application...\");\n\t\t\t\t// Send to callback specified when attaching plugin handle\n\t\t\t\tcallback(data, jsep);\n\t\t\t} else {\n\t\t\t\t// Send to generic callback (?)\n\t\t\t\tJanus.debug(\"No provided notification callback\");\n\t\t\t}\n\t\t} else if(json[\"janus\"] === \"timeout\") {\n\t\t\tJanus.error(\"Timeout on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tif (websockets) {\n\t\t\t\tws.close(3504, \"Gateway timeout\");\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\tJanus.warn(\"Unknown message/event  '\" + json[\"janus\"] + \"' on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t}\n\t}\n\n\t// Private helper to send keep-alive messages on WebSockets\n\tfunction keepAlive() {\n\t\tif(server === null || !websockets || !connected)\n\t\t\treturn;\n\t\twsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n\t\tvar request = { \"janus\": \"keepalive\", \"session_id\": sessionId, \"transaction\": Janus.randomString(12) };\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tws.send(JSON.stringify(request));\n\t}\n\n\t// Private method to create a session\n\tfunction createSession(callbacks) {\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"create\", \"transaction\": transaction };\n\t\tif(callbacks[\"reconnect\"]) {\n\t\t\t// We're reconnecting, claim the session\n\t\t\tconnected = false;\n\t\t\trequest[\"janus\"] = \"claim\";\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\t// If we were using websockets, ignore the old connection\n\t\t\tif(ws) {\n\t\t\t\tws.onopen = null;\n\t\t\t\tws.onerror = null;\n\t\t\t\tws.onclose = null;\n\t\t\t\tif(wsKeepaliveTimeoutId) {\n\t\t\t\t\tclearTimeout(wsKeepaliveTimeoutId);\n\t\t\t\t\twsKeepaliveTimeoutId = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(server === null && Janus.isArray(servers)) {\n\t\t\t// We still need to find a working server from the list we were given\n\t\t\tserver = servers[serversIndex];\n\t\t\tif(server.indexOf(\"ws\") === 0) {\n\t\t\t\twebsockets = true;\n\t\t\t\tJanus.log(\"Server #\" + (serversIndex+1) + \": trying WebSockets to contact Janus (\" + server + \")\");\n\t\t\t} else {\n\t\t\t\twebsockets = false;\n\t\t\t\tJanus.log(\"Server #\" + (serversIndex+1) + \": trying REST API to contact Janus (\" + server + \")\");\n\t\t\t}\n\t\t}\n\t\tif(websockets) {\n\t\t\tws = Janus.newWebSocket(server, 'janus-protocol');\n\t\t\twsHandlers = {\n\t\t\t\t'error': function() {\n\t\t\t\t\tJanus.error(\"Error connecting to the Janus WebSockets server... \" + server);\n\t\t\t\t\tif (Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n\t\t\t\t\t\tserversIndex++;\n\t\t\t\t\t\tif (serversIndex == servers.length) {\n\t\t\t\t\t\t\t// We tried all the servers the user gave us and they all failed\n\t\t\t\t\t\t\tcallbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Let's try the next server\n\t\t\t\t\t\tserver = null;\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tcreateSession(callbacks);\n\t\t\t\t\t\t}, 200);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallbacks.error(\"Error connecting to the Janus WebSockets server: Is the server down?\");\n\t\t\t\t},\n\n\t\t\t\t'open': function() {\n\t\t\t\t\t// We need to be notified about the success\n\t\t\t\t\ttransactions[transaction] = function(json) {\n\t\t\t\t\t\tJanus.debug(json);\n\t\t\t\t\t\tif (json[\"janus\"] !== \"success\") {\n\t\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\t\tcallbacks.error(json[\"error\"].reason);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\tsessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\t\t\t\t\t\tif(callbacks[\"reconnect\"]) {\n\t\t\t\t\t\t\tJanus.log(\"Claimed session: \" + sessionId);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tJanus.log(\"Created session: \" + sessionId);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.sessions[sessionId] = that;\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t};\n\t\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t\t},\n\n\t\t\t\t'message': function(event) {\n\t\t\t\t\thandleEvent(JSON.parse(event.data));\n\t\t\t\t},\n\n\t\t\t\t'close': function() {\n\t\t\t\t\tif (server === null || !connected) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconnected = false;\n\t\t\t\t\t// FIXME What if this is called when the page is closed?\n\t\t\t\t\tgatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor(var eventName in wsHandlers) {\n\t\t\t\tws.addEventListener(eventName, wsHandlers[eventName]);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconnected = true;\n\t\t\t\tsessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\t\t\t\tif(callbacks[\"reconnect\"]) {\n\t\t\t\t\tJanus.log(\"Claimed session: \" + sessionId);\n\t\t\t\t} else {\n\t\t\t\t\tJanus.log(\"Created session: \" + sessionId);\n\t\t\t\t}\n\t\t\t\tJanus.sessions[sessionId] = that;\n\t\t\t\teventHandler();\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tif(Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n\t\t\t\t\tserversIndex++;\n\t\t\t\t\tif(serversIndex == servers.length) {\n\t\t\t\t\t\t// We tried all the servers the user gave us and they all failed\n\t\t\t\t\t\tcallbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Let's try the next server\n\t\t\t\t\tserver = null;\n\t\t\t\t\tsetTimeout(function() { createSession(callbacks); }, 200);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(errorThrown === \"\")\n\t\t\t\t\tcallbacks.error(textStatus + \": Is the server down?\");\n\t\t\t\telse\n\t\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to destroy a session\n\tfunction destroySession(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\t// FIXME This method triggers a success even when we fail\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tvar asyncRequest = true;\n\t\tif(callbacks.asyncRequest !== undefined && callbacks.asyncRequest !== null)\n\t\t\tasyncRequest = (callbacks.asyncRequest === true);\n\t\tvar notifyDestroyed = true;\n\t\tif(callbacks.notifyDestroyed !== undefined && callbacks.notifyDestroyed !== null)\n\t\t\tnotifyDestroyed = (callbacks.notifyDestroyed === true);\n\t\tvar cleanupHandles = false;\n\t\tif(callbacks.cleanupHandles !== undefined && callbacks.cleanupHandles !== null)\n\t\t\tcleanupHandles = (callbacks.cleanupHandles === true);\n\t\tJanus.log(\"Destroying session \" + sessionId + \" (async=\" + asyncRequest + \")\");\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif(sessionId === undefined || sessionId === null) {\n\t\t\tJanus.warn(\"No session to destroy\");\n\t\t\tcallbacks.success();\n\t\t\tif(notifyDestroyed)\n\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\treturn;\n\t\t}\n\t\tif(cleanupHandles) {\n\t\t\tfor(var handleId in pluginHandles)\n\t\t\t\tdestroyHandle(handleId, { noRequest: true });\n\t\t}\n\t\t// No need to destroy all handles first, Janus will do that itself\n\t\tvar request = { \"janus\": \"destroy\", \"transaction\": Janus.randomString(12) };\n\t\tif(token !== null && token !== undefined)\n\t\t\trequest[\"token\"] = token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\n\t\t\tvar unbindWebSocket = function() {\n\t\t\t\tfor(var eventName in wsHandlers) {\n\t\t\t\t\tws.removeEventListener(eventName, wsHandlers[eventName]);\n\t\t\t\t}\n\t\t\t\tws.removeEventListener('message', onUnbindMessage);\n\t\t\t\tws.removeEventListener('error', onUnbindError);\n\t\t\t\tif(wsKeepaliveTimeoutId) {\n\t\t\t\t\tclearTimeout(wsKeepaliveTimeoutId);\n\t\t\t\t}\n\t\t\t\tws.close();\n\t\t\t};\n\n\t\t\tvar onUnbindMessage = function(event){\n\t\t\t\tvar data = JSON.parse(event.data);\n\t\t\t\tif(data.session_id == request.session_id && data.transaction == request.transaction) {\n\t\t\t\t\tunbindWebSocket();\n\t\t\t\t\tcallbacks.success();\n\t\t\t\t\tif(notifyDestroyed)\n\t\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar onUnbindError = function(event) {\n\t\t\t\tunbindWebSocket();\n\t\t\t\tcallbacks.error(\"Failed to destroy the server: Is the server down?\");\n\t\t\t\tif(notifyDestroyed)\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t};\n\n\t\t\tws.addEventListener('message', onUnbindMessage);\n\t\t\tws.addEventListener('error', onUnbindError);\n\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId, {\n\t\t\tverb: 'POST',\n\t\t\tasync: asyncRequest,\t// Sometimes we need false here, or destroying in onbeforeunload won't work\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.log(\"Destroyed session:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tsessionId = null;\n\t\t\t\tconnected = false;\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tcallbacks.success();\n\t\t\t\tif(notifyDestroyed)\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\t// Reset everything anyway\n\t\t\t\tsessionId = null;\n\t\t\t\tconnected = false;\n\t\t\t\tcallbacks.success();\n\t\t\t\tif(notifyDestroyed)\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to create a plugin handle\n\tfunction createHandle(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks.consentDialog = (typeof callbacks.consentDialog == \"function\") ? callbacks.consentDialog : Janus.noop;\n\t\tcallbacks.iceState = (typeof callbacks.iceState == \"function\") ? callbacks.iceState : Janus.noop;\n\t\tcallbacks.mediaState = (typeof callbacks.mediaState == \"function\") ? callbacks.mediaState : Janus.noop;\n\t\tcallbacks.webrtcState = (typeof callbacks.webrtcState == \"function\") ? callbacks.webrtcState : Janus.noop;\n\t\tcallbacks.slowLink = (typeof callbacks.slowLink == \"function\") ? callbacks.slowLink : Janus.noop;\n\t\tcallbacks.onmessage = (typeof callbacks.onmessage == \"function\") ? callbacks.onmessage : Janus.noop;\n\t\tcallbacks.onlocalstream = (typeof callbacks.onlocalstream == \"function\") ? callbacks.onlocalstream : Janus.noop;\n\t\tcallbacks.onremotestream = (typeof callbacks.onremotestream == \"function\") ? callbacks.onremotestream : Janus.noop;\n\t\tcallbacks.ondata = (typeof callbacks.ondata == \"function\") ? callbacks.ondata : Janus.noop;\n\t\tcallbacks.ondataopen = (typeof callbacks.ondataopen == \"function\") ? callbacks.ondataopen : Janus.noop;\n\t\tcallbacks.oncleanup = (typeof callbacks.oncleanup == \"function\") ? callbacks.oncleanup : Janus.noop;\n\t\tcallbacks.ondetached = (typeof callbacks.ondetached == \"function\") ? callbacks.ondetached : Janus.noop;\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar plugin = callbacks.plugin;\n\t\tif(plugin === undefined || plugin === null) {\n\t\t\tJanus.error(\"Invalid plugin\");\n\t\t\tcallbacks.error(\"Invalid plugin\");\n\t\t\treturn;\n\t\t}\n\t\tvar opaqueId = callbacks.opaqueId;\n\t\tvar handleToken = callbacks.token ? callbacks.token : token;\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"attach\", \"plugin\": plugin, \"opaque_id\": opaqueId, \"transaction\": transaction };\n\t\tif(handleToken !== null && handleToken !== undefined)\n\t\t\trequest[\"token\"] = handleToken;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(websockets) {\n\t\t\ttransactions[transaction] = function(json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar handleId = json.data[\"id\"];\n\t\t\t\tJanus.log(\"Created handle: \" + handleId);\n\t\t\t\tvar pluginHandle =\n\t\t\t\t\t{\n\t\t\t\t\t\tsession : that,\n\t\t\t\t\t\tplugin : plugin,\n\t\t\t\t\t\tid : handleId,\n\t\t\t\t\t\ttoken : handleToken,\n\t\t\t\t\t\tdetached : false,\n\t\t\t\t\t\twebrtcStuff : {\n\t\t\t\t\t\t\tstarted : false,\n\t\t\t\t\t\t\tmyStream : null,\n\t\t\t\t\t\t\tstreamExternal : false,\n\t\t\t\t\t\t\tremoteStream : null,\n\t\t\t\t\t\t\tmySdp : null,\n\t\t\t\t\t\t\tmediaConstraints : null,\n\t\t\t\t\t\t\tpc : null,\n\t\t\t\t\t\t\tdataChannel : {},\n\t\t\t\t\t\t\tdtmfSender : null,\n\t\t\t\t\t\t\ttrickle : true,\n\t\t\t\t\t\t\ticeDone : false,\n\t\t\t\t\t\t\tvolume : {\n\t\t\t\t\t\t\t\tvalue : null,\n\t\t\t\t\t\t\t\ttimer : null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbitrate : {\n\t\t\t\t\t\t\t\tvalue : null,\n\t\t\t\t\t\t\t\tbsnow : null,\n\t\t\t\t\t\t\t\tbsbefore : null,\n\t\t\t\t\t\t\t\ttsnow : null,\n\t\t\t\t\t\t\t\ttsbefore : null,\n\t\t\t\t\t\t\t\ttimer : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetId : function() { return handleId; },\n\t\t\t\t\t\tgetPlugin : function() { return plugin; },\n\t\t\t\t\t\tgetVolume : function() { return getVolume(handleId, true); },\n\t\t\t\t\t\tgetRemoteVolume : function() { return getVolume(handleId, true); },\n\t\t\t\t\t\tgetLocalVolume : function() { return getVolume(handleId, false); },\n\t\t\t\t\t\tisAudioMuted : function() { return isMuted(handleId, false); },\n\t\t\t\t\t\tmuteAudio : function() { return mute(handleId, false, true); },\n\t\t\t\t\t\tunmuteAudio : function() { return mute(handleId, false, false); },\n\t\t\t\t\t\tisVideoMuted : function() { return isMuted(handleId, true); },\n\t\t\t\t\t\tmuteVideo : function() { return mute(handleId, true, true); },\n\t\t\t\t\t\tunmuteVideo : function() { return mute(handleId, true, false); },\n\t\t\t\t\t\tgetBitrate : function() { return getBitrate(handleId); },\n\t\t\t\t\t\tsend : function(callbacks) { sendMessage(handleId, callbacks); },\n\t\t\t\t\t\tdata : function(callbacks) { sendData(handleId, callbacks); },\n\t\t\t\t\t\tdtmf : function(callbacks) { sendDtmf(handleId, callbacks); },\n\t\t\t\t\t\tconsentDialog : callbacks.consentDialog,\n\t\t\t\t\t\ticeState : callbacks.iceState,\n\t\t\t\t\t\tmediaState : callbacks.mediaState,\n\t\t\t\t\t\twebrtcState : callbacks.webrtcState,\n\t\t\t\t\t\tslowLink : callbacks.slowLink,\n\t\t\t\t\t\tonmessage : callbacks.onmessage,\n\t\t\t\t\t\tcreateOffer : function(callbacks) { prepareWebrtc(handleId, true, callbacks); },\n\t\t\t\t\t\tcreateAnswer : function(callbacks) { prepareWebrtc(handleId, false, callbacks); },\n\t\t\t\t\t\thandleRemoteJsep : function(callbacks) { prepareWebrtcPeer(handleId, callbacks); },\n\t\t\t\t\t\tonlocalstream : callbacks.onlocalstream,\n\t\t\t\t\t\tonremotestream : callbacks.onremotestream,\n\t\t\t\t\t\tondata : callbacks.ondata,\n\t\t\t\t\t\tondataopen : callbacks.ondataopen,\n\t\t\t\t\t\toncleanup : callbacks.oncleanup,\n\t\t\t\t\t\tondetached : callbacks.ondetached,\n\t\t\t\t\t\thangup : function(sendRequest) { cleanupWebrtc(handleId, sendRequest === true); },\n\t\t\t\t\t\tdetach : function(callbacks) { destroyHandle(handleId, callbacks); }\n\t\t\t\t\t}\n\t\t\t\tpluginHandles[handleId] = pluginHandle;\n\t\t\t\tcallbacks.success(pluginHandle);\n\t\t\t};\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar handleId = json.data[\"id\"];\n\t\t\t\tJanus.log(\"Created handle: \" + handleId);\n\t\t\t\tvar pluginHandle =\n\t\t\t\t\t{\n\t\t\t\t\t\tsession : that,\n\t\t\t\t\t\tplugin : plugin,\n\t\t\t\t\t\tid : handleId,\n\t\t\t\t\t\ttoken : handleToken,\n\t\t\t\t\t\tdetached : false,\n\t\t\t\t\t\twebrtcStuff : {\n\t\t\t\t\t\t\tstarted : false,\n\t\t\t\t\t\t\tmyStream : null,\n\t\t\t\t\t\t\tstreamExternal : false,\n\t\t\t\t\t\t\tremoteStream : null,\n\t\t\t\t\t\t\tmySdp : null,\n\t\t\t\t\t\t\tmediaConstraints : null,\n\t\t\t\t\t\t\tpc : null,\n\t\t\t\t\t\t\tdataChannel : {},\n\t\t\t\t\t\t\tdtmfSender : null,\n\t\t\t\t\t\t\ttrickle : true,\n\t\t\t\t\t\t\ticeDone : false,\n\t\t\t\t\t\t\tvolume : {\n\t\t\t\t\t\t\t\tvalue : null,\n\t\t\t\t\t\t\t\ttimer : null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbitrate : {\n\t\t\t\t\t\t\t\tvalue : null,\n\t\t\t\t\t\t\t\tbsnow : null,\n\t\t\t\t\t\t\t\tbsbefore : null,\n\t\t\t\t\t\t\t\ttsnow : null,\n\t\t\t\t\t\t\t\ttsbefore : null,\n\t\t\t\t\t\t\t\ttimer : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetId : function() { return handleId; },\n\t\t\t\t\t\tgetPlugin : function() { return plugin; },\n\t\t\t\t\t\tgetVolume : function() { return getVolume(handleId, true); },\n\t\t\t\t\t\tgetRemoteVolume : function() { return getVolume(handleId, true); },\n\t\t\t\t\t\tgetLocalVolume : function() { return getVolume(handleId, false); },\n\t\t\t\t\t\tisAudioMuted : function() { return isMuted(handleId, false); },\n\t\t\t\t\t\tmuteAudio : function() { return mute(handleId, false, true); },\n\t\t\t\t\t\tunmuteAudio : function() { return mute(handleId, false, false); },\n\t\t\t\t\t\tisVideoMuted : function() { return isMuted(handleId, true); },\n\t\t\t\t\t\tmuteVideo : function() { return mute(handleId, true, true); },\n\t\t\t\t\t\tunmuteVideo : function() { return mute(handleId, true, false); },\n\t\t\t\t\t\tgetBitrate : function() { return getBitrate(handleId); },\n\t\t\t\t\t\tsend : function(callbacks) { sendMessage(handleId, callbacks); },\n\t\t\t\t\t\tdata : function(callbacks) { sendData(handleId, callbacks); },\n\t\t\t\t\t\tdtmf : function(callbacks) { sendDtmf(handleId, callbacks); },\n\t\t\t\t\t\tconsentDialog : callbacks.consentDialog,\n\t\t\t\t\t\ticeState : callbacks.iceState,\n\t\t\t\t\t\tmediaState : callbacks.mediaState,\n\t\t\t\t\t\twebrtcState : callbacks.webrtcState,\n\t\t\t\t\t\tslowLink : callbacks.slowLink,\n\t\t\t\t\t\tonmessage : callbacks.onmessage,\n\t\t\t\t\t\tcreateOffer : function(callbacks) { prepareWebrtc(handleId, true, callbacks); },\n\t\t\t\t\t\tcreateAnswer : function(callbacks) { prepareWebrtc(handleId, false, callbacks); },\n\t\t\t\t\t\thandleRemoteJsep : function(callbacks) { prepareWebrtcPeer(handleId, callbacks); },\n\t\t\t\t\t\tonlocalstream : callbacks.onlocalstream,\n\t\t\t\t\t\tonremotestream : callbacks.onremotestream,\n\t\t\t\t\t\tondata : callbacks.ondata,\n\t\t\t\t\t\tondataopen : callbacks.ondataopen,\n\t\t\t\t\t\toncleanup : callbacks.oncleanup,\n\t\t\t\t\t\tondetached : callbacks.ondetached,\n\t\t\t\t\t\thangup : function(sendRequest) { cleanupWebrtc(handleId, sendRequest === true); },\n\t\t\t\t\t\tdetach : function(callbacks) { destroyHandle(handleId, callbacks); }\n\t\t\t\t\t}\n\t\t\t\tpluginHandles[handleId] = pluginHandle;\n\t\t\t\tcallbacks.success(pluginHandle);\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to send a message\n\tfunction sendMessage(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar message = callbacks.message;\n\t\tvar jsep = callbacks.jsep;\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"message\", \"body\": message, \"transaction\": transaction };\n\t\tif(pluginHandle.token !== null && pluginHandle.token !== undefined)\n\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(jsep !== null && jsep !== undefined)\n\t\t\trequest.jsep = jsep;\n\t\tJanus.debug(\"Sending message to plugin (handle=\" + handleId + \"):\");\n\t\tJanus.debug(request);\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\ttransactions[transaction] = function(json) {\n\t\t\t\tJanus.debug(\"Message sent!\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] === \"success\") {\n\t\t\t\t\t// We got a success, must have been a synchronous transaction\n\t\t\t\t\tvar plugindata = json[\"plugindata\"];\n\t\t\t\t\tif(plugindata === undefined || plugindata === null) {\n\t\t\t\t\t\tJanus.warn(\"Request succeeded, but missing plugindata...\");\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n\t\t\t\t\tvar data = plugindata[\"data\"];\n\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\tcallbacks.success(data);\n\t\t\t\t\treturn;\n\t\t\t\t} else if(json[\"janus\"] !== \"ack\") {\n\t\t\t\t\t// Not a success and not an ack, must be an error\n\t\t\t\t\tif(json[\"error\"] !== undefined && json[\"error\"] !== null) {\n\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\tcallbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.error(\"Unknown error\");\t// FIXME\n\t\t\t\t\t\tcallbacks.error(\"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If we got here, the plugin decided to handle the request asynchronously\n\t\t\t\tcallbacks.success();\n\t\t\t};\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.debug(\"Message sent!\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] === \"success\") {\n\t\t\t\t\t// We got a success, must have been a synchronous transaction\n\t\t\t\t\tvar plugindata = json[\"plugindata\"];\n\t\t\t\t\tif(plugindata === undefined || plugindata === null) {\n\t\t\t\t\t\tJanus.warn(\"Request succeeded, but missing plugindata...\");\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n\t\t\t\t\tvar data = plugindata[\"data\"];\n\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\tcallbacks.success(data);\n\t\t\t\t\treturn;\n\t\t\t\t} else if(json[\"janus\"] !== \"ack\") {\n\t\t\t\t\t// Not a success and not an ack, must be an error\n\t\t\t\t\tif(json[\"error\"] !== undefined && json[\"error\"] !== null) {\n\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\tcallbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.error(\"Unknown error\");\t// FIXME\n\t\t\t\t\t\tcallbacks.error(\"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If we got here, the plugin decided to handle the request asynchronously\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to send a trickle candidate\n\tfunction sendTrickleCandidate(handleId, candidate) {\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar request = { \"janus\": \"trickle\", \"candidate\": candidate, \"transaction\": Janus.randomString(12) };\n\t\tif(pluginHandle.token !== null && pluginHandle.token !== undefined)\n\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tJanus.vdebug(\"Sending trickle candidate (handle=\" + handleId + \"):\");\n\t\tJanus.vdebug(request);\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.vdebug(\"Candidate sent!\");\n\t\t\t\tJanus.vdebug(json);\n\t\t\t\tif(json[\"janus\"] !== \"ack\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to create a data channel\n\tfunction createDataChannel(handleId, dclabel, incoming, pendingText) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar onDataChannelMessage = function(event) {\n\t\t\tJanus.log('Received message on data channel:', event);\n\t\t\tvar label = event.target.label;\n\t\t\tpluginHandle.ondata(event.data, label);\n\t\t}\n\t\tvar onDataChannelStateChange = function(event) {\n\t\t\tJanus.log('Received state change on data channel:', event);\n\t\t\tvar label = event.target.label;\n\t\t\tvar dcState = config.dataChannel[label] ? config.dataChannel[label].readyState : \"null\";\n\t\t\tJanus.log('State change on <' + label + '> data channel: ' + dcState);\n\t\t\tif(dcState === 'open') {\n\t\t\t\t// Any pending messages to send?\n\t\t\t\tif(config.dataChannel[label].pending && config.dataChannel[label].pending.length > 0) {\n\t\t\t\t\tJanus.log(\"Sending pending messages on <\" + label + \">:\", config.dataChannel[label].pending.length);\n\t\t\t\t\tfor(var i in config.dataChannel[label].pending) {\n\t\t\t\t\t\tvar text = config.dataChannel[label].pending[i];\n\t\t\t\t\t\tJanus.log(\"Sending string on data channel <\" + label + \">: \" + text);\n\t\t\t\t\t\tconfig.dataChannel[label].send(text);\n\t\t\t\t\t}\n\t\t\t\t\tconfig.dataChannel[label].pending = [];\n\t\t\t\t}\n\t\t\t\t// Notify the open data channel\n\t\t\t\tpluginHandle.ondataopen(label);\n\t\t\t}\n\t\t}\n\t\tvar onDataChannelError = function(error) {\n\t\t\tJanus.error('Got error on data channel:', error);\n\t\t\t// TODO\n\t\t}\n\t\tif(!incoming) {\n\t\t\t// FIXME Add options (ordered, maxRetransmits, etc.)\n\t\t\tconfig.dataChannel[dclabel] = config.pc.createDataChannel(dclabel, {ordered:false});\n\t\t} else {\n\t\t\t// The channel was created by Janus\n\t\t\tconfig.dataChannel[dclabel] = incoming;\n\t\t}\n\t\tconfig.dataChannel[dclabel].onmessage = onDataChannelMessage;\n\t\tconfig.dataChannel[dclabel].onopen = onDataChannelStateChange;\n\t\tconfig.dataChannel[dclabel].onclose = onDataChannelStateChange;\n\t\tconfig.dataChannel[dclabel].onerror = onDataChannelError;\n\t\tconfig.dataChannel[dclabel].pending = [];\n\t\tif(pendingText)\n\t\t\tconfig.dataChannel[dclabel].pending.push(pendingText);\n\t}\n\n\t// Private method to send a data channel message\n\tfunction sendData(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar text = callbacks.text;\n\t\tif(text === null || text === undefined) {\n\t\t\tJanus.warn(\"Invalid text\");\n\t\t\tcallbacks.error(\"Invalid text\");\n\t\t\treturn;\n\t\t}\n\t\tvar label = callbacks.label ? callbacks.label : Janus.dataChanDefaultLabel;\n\t\tif(!config.dataChannel[label]) {\n\t\t\t// Create new data channel and wait for it to open\n\t\t\tcreateDataChannel(handleId, label, false, text);\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif(config.dataChannel[label].readyState !== \"open\") {\n\t\t\tconfig.dataChannel[label].pending.push(text);\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tJanus.log(\"Sending string on data channel <\" + label + \">: \" + text);\n\t\tconfig.dataChannel[label].send(text);\n\t\tcallbacks.success();\n\t}\n\n\t// Private method to send a DTMF tone\n\tfunction sendDtmf(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config.dtmfSender === null || config.dtmfSender === undefined) {\n\t\t\t// Create the DTMF sender the proper way, if possible\n\t\t\tif(config.pc !== undefined && config.pc !== null) {\n\t\t\t\tvar senders = config.pc.getSenders();\n\t\t\t\tvar audioSender = senders.find(function(sender) {\n\t\t\t\t\treturn sender.track && sender.track.kind === 'audio';\n\t\t\t\t});\n\t\t\t\tif(!audioSender) {\n\t\t\t\t\tJanus.warn(\"Invalid DTMF configuration (no audio track)\");\n\t\t\t\t\tcallbacks.error(\"Invalid DTMF configuration (no audio track)\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconfig.dtmfSender = audioSender.dtmf;\n\t\t\t\tif(config.dtmfSender) {\n\t\t\t\t\tJanus.log(\"Created DTMF Sender\");\n\t\t\t\t\tconfig.dtmfSender.ontonechange = function(tone) { Janus.debug(\"Sent DTMF tone: \" + tone.tone); };\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(config.dtmfSender === null || config.dtmfSender === undefined) {\n\t\t\t\tJanus.warn(\"Invalid DTMF configuration\");\n\t\t\t\tcallbacks.error(\"Invalid DTMF configuration\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tvar dtmf = callbacks.dtmf;\n\t\tif(dtmf === null || dtmf === undefined) {\n\t\t\tJanus.warn(\"Invalid DTMF parameters\");\n\t\t\tcallbacks.error(\"Invalid DTMF parameters\");\n\t\t\treturn;\n\t\t}\n\t\tvar tones = dtmf.tones;\n\t\tif(tones === null || tones === undefined) {\n\t\t\tJanus.warn(\"Invalid DTMF string\");\n\t\t\tcallbacks.error(\"Invalid DTMF string\");\n\t\t\treturn;\n\t\t}\n\t\tvar duration = dtmf.duration;\n\t\tif(duration === null || duration === undefined)\n\t\t\tduration = 500;\t// We choose 500ms as the default duration for a tone\n\t\tvar gap = dtmf.gap;\n\t\tif(gap === null || gap === undefined)\n\t\t\tgap = 50;\t// We choose 50ms as the default gap between tones\n\t\tJanus.debug(\"Sending DTMF string \" + tones + \" (duration \" + duration + \"ms, gap \" + gap + \"ms)\");\n\t\tconfig.dtmfSender.insertDTMF(tones, duration, gap);\n\t\tcallbacks.success();\n\t}\n\n\t// Private method to destroy a plugin handle\n\tfunction destroyHandle(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar asyncRequest = true;\n\t\tif(callbacks.asyncRequest !== undefined && callbacks.asyncRequest !== null)\n\t\t\tasyncRequest = (callbacks.asyncRequest === true);\n\t\tvar noRequest = true;\n\t\tif(callbacks.noRequest !== undefined && callbacks.noRequest !== null)\n\t\t\tnoRequest = (callbacks.noRequest === true);\n\t\tJanus.log(\"Destroying handle \" + handleId + \" (async=\" + asyncRequest + \")\");\n\t\tcleanupWebrtc(handleId);\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined || pluginHandle.detached) {\n\t\t\t// Plugin was already detached by Janus, calling detach again will return a handle not found error, so just exit here\n\t\t\tdelete pluginHandles[handleId];\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif(noRequest) {\n\t\t\t// We're only removing the handle locally\n\t\t\tdelete pluginHandles[handleId];\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif(!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar request = { \"janus\": \"detach\", \"transaction\": Janus.randomString(12) };\n\t\tif(pluginHandle.token !== null && pluginHandle.token !== undefined)\n\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif(websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\tdelete pluginHandles[handleId];\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\tasync: asyncRequest,\t// Sometimes we need false here, or destroying in onbeforeunload won't work\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function(json) {\n\t\t\t\tJanus.log(\"Destroyed handle:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif(json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tdelete pluginHandles[handleId];\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function(textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\t// We cleanup anyway\n\t\t\t\tdelete pluginHandles[handleId];\n\t\t\t\tcallbacks.success();\n\t\t\t}\n\t\t});\n\t}\n\n\t// WebRTC stuff\n\tfunction streamsDone(handleId, jsep, media, callbacks, stream) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tJanus.debug(\"streamsDone:\", stream);\n\t\tif(stream) {\n\t\t\tJanus.debug(\"  -- Audio tracks:\", stream.getAudioTracks());\n\t\t\tJanus.debug(\"  -- Video tracks:\", stream.getVideoTracks());\n\t\t}\n\t\t// We're now capturing the new stream: check if we're updating or if it's a new thing\n\t\tvar addTracks = false;\n\t\tif(!config.myStream || !media.update || config.streamExternal) {\n\t\t\tconfig.myStream = stream;\n\t\t\taddTracks = true;\n\t\t} else {\n\t\t\t// We only need to update the existing stream\n\t\t\tif(((!media.update && isAudioSendEnabled(media)) || (media.update && (media.addAudio || media.replaceAudio))) &&\n\t\t\t\t\tstream.getAudioTracks() && stream.getAudioTracks().length) {\n\t\t\t\tconfig.myStream.addTrack(stream.getAudioTracks()[0]);\n\t\t\t\tif(Janus.unifiedPlan) {\n\t\t\t\t\t// Use Transceivers\n\t\t\t\t\tJanus.log((media.replaceAudio ? \"Replacing\" : \"Adding\") + \" audio track:\", stream.getAudioTracks()[0]);\n\t\t\t\t\tvar audioTransceiver = null;\n\t\t\t\t\tvar transceivers = config.pc.getTransceivers();\n\t\t\t\t\tif(transceivers && transceivers.length > 0) {\n\t\t\t\t\t\tfor(var i in transceivers) {\n\t\t\t\t\t\t\tvar t = transceivers[i];\n\t\t\t\t\t\t\tif((t.sender && t.sender.track && t.sender.track.kind === \"audio\") ||\n\t\t\t\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\")) {\n\t\t\t\t\t\t\t\taudioTransceiver = t;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(audioTransceiver && audioTransceiver.sender) {\n\t\t\t\t\t\taudioTransceiver.sender.replaceTrack(stream.getAudioTracks()[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconfig.pc.addTrack(stream.getAudioTracks()[0], stream);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tJanus.log((media.replaceAudio ? \"Replacing\" : \"Adding\") + \" audio track:\", stream.getAudioTracks()[0]);\n\t\t\t\t\tconfig.pc.addTrack(stream.getAudioTracks()[0], stream);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(((!media.update && isVideoSendEnabled(media)) || (media.update && (media.addVideo || media.replaceVideo))) &&\n\t\t\t\t\tstream.getVideoTracks() && stream.getVideoTracks().length) {\n\t\t\t\tconfig.myStream.addTrack(stream.getVideoTracks()[0]);\n\t\t\t\tif(Janus.unifiedPlan) {\n\t\t\t\t\t// Use Transceivers\n\t\t\t\t\tJanus.log((media.replaceVideo ? \"Replacing\" : \"Adding\") + \" video track:\", stream.getVideoTracks()[0]);\n\t\t\t\t\tvar videoTransceiver = null;\n\t\t\t\t\tvar transceivers = config.pc.getTransceivers();\n\t\t\t\t\tif(transceivers && transceivers.length > 0) {\n\t\t\t\t\t\tfor(var i in transceivers) {\n\t\t\t\t\t\t\tvar t = transceivers[i];\n\t\t\t\t\t\t\tif((t.sender && t.sender.track && t.sender.track.kind === \"video\") ||\n\t\t\t\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"video\")) {\n\t\t\t\t\t\t\t\tvideoTransceiver = t;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(videoTransceiver && videoTransceiver.sender) {\n\t\t\t\t\t\tvideoTransceiver.sender.replaceTrack(stream.getVideoTracks()[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconfig.pc.addTrack(stream.getVideoTracks()[0], stream);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tJanus.log((media.replaceVideo ? \"Replacing\" : \"Adding\") + \" video track:\", stream.getVideoTracks()[0]);\n\t\t\t\t\tconfig.pc.addTrack(stream.getVideoTracks()[0], stream);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If we still need to create a PeerConnection, let's do that\n\t\tif(!config.pc) {\n\t\t\tvar pc_config = {\"iceServers\": iceServers, \"iceTransportPolicy\": iceTransportPolicy, \"bundlePolicy\": bundlePolicy};\n\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n\t\t\t\t// For Chrome versions before 72, we force a plan-b semantic, and unified-plan otherwise\n\t\t\t\tpc_config[\"sdpSemantics\"] = (Janus.webRTCAdapter.browserDetails.version < 72) ? \"plan-b\" : \"unified-plan\";\n\t\t\t}\n\t\t\tvar pc_constraints = {\n\t\t\t\t\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]\n\t\t\t};\n\t\t\tif(ipv6Support === true) {\n\t\t\t\tpc_constraints.optional.push({\"googIPv6\":true});\n\t\t\t}\n\t\t\t// Any custom constraint to add?\n\t\t\tif(callbacks.rtcConstraints && typeof callbacks.rtcConstraints === 'object') {\n\t\t\t\tJanus.debug(\"Adding custom PeerConnection constraints:\", callbacks.rtcConstraints);\n\t\t\t\tfor(var i in callbacks.rtcConstraints) {\n\t\t\t\t\tpc_constraints.optional.push(callbacks.rtcConstraints[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n\t\t\t\t// This is Edge, enable BUNDLE explicitly\n\t\t\t\tpc_config.bundlePolicy = \"max-bundle\";\n\t\t\t}\n\t\t\tJanus.log(\"Creating PeerConnection\");\n\t\t\tJanus.debug(pc_constraints);\n\t\t\tconfig.pc = new RTCPeerConnection(pc_config, pc_constraints);\n\t\t\tJanus.debug(config.pc);\n\t\t\tif(config.pc.getStats) {\t// FIXME\n\t\t\t\tconfig.volume = {};\n\t\t\t\tconfig.bitrate.value = \"0 kbits/sec\";\n\t\t\t}\n\t\t\tJanus.log(\"Preparing local SDP and gathering candidates (trickle=\" + config.trickle + \")\");\n\t\t\tconfig.pc.oniceconnectionstatechange = function(e) {\n\t\t\t\tif(config.pc)\n\t\t\t\t\tpluginHandle.iceState(config.pc.iceConnectionState);\n\t\t\t};\n\t\t\tconfig.pc.onicecandidate = function(event) {\n\t\t\t\tif (event.candidate == null ||\n\t\t\t\t\t\t(Janus.webRTCAdapter.browserDetails.browser === 'edge' && event.candidate.candidate.indexOf('endOfCandidates') > 0)) {\n\t\t\t\t\tJanus.log(\"End of candidates.\");\n\t\t\t\t\tconfig.iceDone = true;\n\t\t\t\t\tif(config.trickle === true) {\n\t\t\t\t\t\t// Notify end of candidates\n\t\t\t\t\t\tsendTrickleCandidate(handleId, {\"completed\": true});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// No trickle, time to send the complete SDP (including all candidates)\n\t\t\t\t\t\tsendSDP(handleId, callbacks);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\t\tvar candidate = {\n\t\t\t\t\t\t\"candidate\": event.candidate.candidate,\n\t\t\t\t\t\t\"sdpMid\": event.candidate.sdpMid,\n\t\t\t\t\t\t\"sdpMLineIndex\": event.candidate.sdpMLineIndex\n\t\t\t\t\t};\n\t\t\t\t\tif(config.trickle === true) {\n\t\t\t\t\t\t// Send candidate\n\t\t\t\t\t\tsendTrickleCandidate(handleId, candidate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tconfig.pc.ontrack = function(event) {\n\t\t\t\tJanus.log(\"Handling Remote Track\");\n\t\t\t\tJanus.debug(event);\n\t\t\t\tif(!event.streams)\n\t\t\t\t\treturn;\n\t\t\t\tconfig.remoteStream = event.streams[0];\n\t\t\t\tpluginHandle.onremotestream(config.remoteStream);\n\t\t\t\tif(event.track.onended)\n\t\t\t\t\treturn;\n\t\t\t\tJanus.log(\"Adding onended callback to track:\", event.track);\n\t\t\t\tevent.track.onended = function(ev) {\n\t\t\t\t\tJanus.log(\"Remote track muted/removed:\", ev);\n\t\t\t\t\tif(config.remoteStream) {\n\t\t\t\t\t\tconfig.remoteStream.removeTrack(ev.target);\n\t\t\t\t\t\tpluginHandle.onremotestream(config.remoteStream);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tevent.track.onmute = event.track.onended;\n\t\t\t\tevent.track.onunmute = function(ev) {\n\t\t\t\t\tJanus.log(\"Remote track flowing again:\", ev);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconfig.remoteStream.addTrack(ev.target);\n\t\t\t\t\t\tpluginHandle.onremotestream(config.remoteStream);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\t\tif(addTracks && stream !== null && stream !== undefined) {\n\t\t\tJanus.log('Adding local stream');\n\t\t\tvar simulcast2 = callbacks.simulcast2 === true ? true : false;\n\t\t\tstream.getTracks().forEach(function(track) {\n\t\t\t\tJanus.log('Adding local track:', track);\n\t\t\t\tif(!simulcast2) {\n\t\t\t\t\tconfig.pc.addTrack(track, stream);\n\t\t\t\t} else {\n\t\t\t\t\tif(track.kind === \"audio\") {\n\t\t\t\t\t\tconfig.pc.addTrack(track, stream);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.log('Enabling rid-based simulcasting:', track);\n\t\t\t\t\t\tconfig.pc.addTransceiver(track, {\n\t\t\t\t\t\t\tdirection: \"sendrecv\",\n\t\t\t\t\t\t\tstreams: [stream],\n\t\t\t\t\t\t\tsendEncodings: [\n\t\t\t\t\t\t\t\t{ rid: \"h\", active: true, maxBitrate: 900000 },\n\t\t\t\t\t\t\t\t{ rid: \"m\", active: true, maxBitrate: 300000, scaleResolutionDownBy: 2 },\n\t\t\t\t\t\t\t\t{ rid: \"l\", active: true, maxBitrate: 100000, scaleResolutionDownBy: 4 }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// Any data channel to create?\n\t\tif(isDataEnabled(media) && !config.dataChannel[Janus.dataChanDefaultLabel]) {\n\t\t\tJanus.log(\"Creating data channel\");\n\t\t\tcreateDataChannel(handleId, Janus.dataChanDefaultLabel, false);\n\t\t\tconfig.pc.ondatachannel = function(event) {\n\t\t\t\tJanus.log(\"Data channel created by Janus:\", event);\n\t\t\t\tcreateDataChannel(handleId, event.channel.label, event.channel);\n\t\t\t};\n\t\t}\n\t\t// If there's a new local stream, let's notify the application\n\t\tif(config.myStream)\n\t\t\tpluginHandle.onlocalstream(config.myStream);\n\t\t// Create offer/answer now\n\t\tif(jsep === null || jsep === undefined) {\n\t\t\tcreateOffer(handleId, media, callbacks);\n\t\t} else {\n\t\t\tconfig.pc.setRemoteDescription(jsep)\n\t\t\t\t.then(function() {\n\t\t\t\t\tJanus.log(\"Remote description accepted!\");\n\t\t\t\t\tconfig.remoteSdp = jsep.sdp;\n\t\t\t\t\t// Any trickle candidate we cached?\n\t\t\t\t\tif(config.candidates && config.candidates.length > 0) {\n\t\t\t\t\t\tfor(var i in config.candidates) {\n\t\t\t\t\t\t\tvar candidate = config.candidates[i];\n\t\t\t\t\t\t\tJanus.debug(\"Adding remote candidate:\", candidate);\n\t\t\t\t\t\t\tif(!candidate || candidate.completed === true) {\n\t\t\t\t\t\t\t\t// end-of-candidates\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(Janus.endOfCandidates);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// New candidate\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(candidate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconfig.candidates = [];\n\t\t\t\t\t}\n\t\t\t\t\t// Create the answer now\n\t\t\t\t\tcreateAnswer(handleId, media, callbacks);\n\t\t\t\t}, callbacks.error);\n\t\t}\n\t}\n\n\tfunction prepareWebrtc(handleId, offer, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : webrtcError;\n\t\tvar jsep = callbacks.jsep;\n\t\tif(offer && jsep) {\n\t\t\tJanus.error(\"Provided a JSEP to a createOffer\");\n\t\t\tcallbacks.error(\"Provided a JSEP to a createOffer\");\n\t\t\treturn;\n\t\t} else if(!offer && (!jsep || !jsep.type || !jsep.sdp)) {\n\t\t\tJanus.error(\"A valid JSEP is required for createAnswer\");\n\t\t\tcallbacks.error(\"A valid JSEP is required for createAnswer\");\n\t\t\treturn;\n\t\t}\n\t\tcallbacks.media = callbacks.media || { audio: true, video: true };\n\t\tvar media = callbacks.media;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tconfig.trickle = isTrickleEnabled(callbacks.trickle);\n\t\t// Are we updating a session?\n\t\tif(config.pc === undefined || config.pc === null) {\n\t\t\t// Nope, new PeerConnection\n\t\t\tmedia.update = false;\n\t\t\tmedia.keepAudio = false;\n\t\t\tmedia.keepVideo = false;\n\t\t} else if(config.pc !== undefined && config.pc !== null) {\n\t\t\tJanus.log(\"Updating existing media session\");\n\t\t\tmedia.update = true;\n\t\t\t// Check if there's anything to add/remove/replace, or if we\n\t\t\t// can go directly to preparing the new SDP offer or answer\n\t\t\tif(callbacks.stream !== null && callbacks.stream !== undefined) {\n\t\t\t\t// External stream: is this the same as the one we were using before?\n\t\t\t\tif(callbacks.stream !== config.myStream) {\n\t\t\t\t\tJanus.log(\"Renegotiation involves a new external stream\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Check if there are changes on audio\n\t\t\t\tif(media.addAudio) {\n\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\tmedia.removeAudio = false;\n\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t\tif(config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n\t\t\t\t\t\tJanus.error(\"Can't add audio stream, there already is one\");\n\t\t\t\t\t\tcallbacks.error(\"Can't add audio stream, there already is one\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if(media.removeAudio) {\n\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\tmedia.addAudio = false;\n\t\t\t\t\tmedia.audioSend = false;\n\t\t\t\t} else if(media.replaceAudio) {\n\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\tmedia.addAudio = false;\n\t\t\t\t\tmedia.removeAudio = false;\n\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t}\n\t\t\t\tif(config.myStream === null || config.myStream === undefined) {\n\t\t\t\t\t// No media stream: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\tif(media.replaceAudio) {\n\t\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(isAudioSendEnabled(media)) {\n\t\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(config.myStream.getAudioTracks() === null\n\t\t\t\t\t\t\t|| config.myStream.getAudioTracks() === undefined\n\t\t\t\t\t\t\t|| config.myStream.getAudioTracks().length === 0) {\n\t\t\t\t\t\t// No audio track: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\t\tif(media.replaceAudio) {\n\t\t\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(isAudioSendEnabled(media)) {\n\t\t\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We have an audio track: should we keep it as it is?\n\t\t\t\t\t\tif(isAudioSendEnabled(media) &&\n\t\t\t\t\t\t\t\t!media.removeAudio && !media.replaceAudio) {\n\t\t\t\t\t\t\tmedia.keepAudio = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Check if there are changes on video\n\t\t\t\tif(media.addVideo) {\n\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\tmedia.removeVideo = false;\n\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t\tif(config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n\t\t\t\t\t\tJanus.error(\"Can't add video stream, there already is one\");\n\t\t\t\t\t\tcallbacks.error(\"Can't add video stream, there already is one\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if(media.removeVideo) {\n\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\tmedia.addVideo = false;\n\t\t\t\t\tmedia.videoSend = false;\n\t\t\t\t} else if(media.replaceVideo) {\n\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\tmedia.addVideo = false;\n\t\t\t\t\tmedia.removeVideo = false;\n\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t}\n\t\t\t\tif(config.myStream === null || config.myStream === undefined) {\n\t\t\t\t\t// No media stream: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\tif(media.replaceVideo) {\n\t\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t\t}\n\t\t\t\t\tif(isVideoSendEnabled(media)) {\n\t\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(config.myStream.getVideoTracks() === null\n\t\t\t\t\t\t\t|| config.myStream.getVideoTracks() === undefined\n\t\t\t\t\t\t\t|| config.myStream.getVideoTracks().length === 0) {\n\t\t\t\t\t\t// No video track: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\t\tif(media.replaceVideo) {\n\t\t\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(isVideoSendEnabled(media)) {\n\t\t\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We have a video track: should we keep it as it is?\n\t\t\t\t\t\tif(isVideoSendEnabled(media) &&\n\t\t\t\t\t\t\t\t!media.removeVideo && !media.replaceVideo) {\n\t\t\t\t\t\t\tmedia.keepVideo = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Data channels can only be added\n\t\t\t\tif(media.addData)\n\t\t\t\t\tmedia.data = true;\n\t\t\t}\n\t\t\t// If we're updating and keeping all tracks, let's skip the getUserMedia part\n\t\t\tif((isAudioSendEnabled(media) && media.keepAudio) &&\n\t\t\t\t\t(isVideoSendEnabled(media) && media.keepVideo)) {\n\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, config.myStream);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// If we're updating, check if we need to remove/replace one of the tracks\n\t\tif(media.update && !config.streamExternal) {\n\t\t\tif(media.removeAudio || media.replaceAudio) {\n\t\t\t\tif(config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n\t\t\t\t\tvar s = config.myStream.getAudioTracks()[0];\n\t\t\t\t\tJanus.log(\"Removing audio track:\", s);\n\t\t\t\t\tconfig.myStream.removeTrack(s);\n\t\t\t\t\ttry {\n\t\t\t\t\t\ts.stop();\n\t\t\t\t\t} catch(e) {};\n\t\t\t\t}\n\t\t\t\tif(config.pc.getSenders() && config.pc.getSenders().length) {\n\t\t\t\t\tvar ra = true;\n\t\t\t\t\tif(media.replaceAudio && Janus.unifiedPlan) {\n\t\t\t\t\t\t// We can use replaceTrack\n\t\t\t\t\t\tra = false;\n\t\t\t\t\t}\n\t\t\t\t\tif(ra) {\n\t\t\t\t\t\tfor(var index in config.pc.getSenders()) {\n\t\t\t\t\t\t\tvar s = config.pc.getSenders()[index];\n\t\t\t\t\t\t\tif(s && s.track && s.track.kind === \"audio\") {\n\t\t\t\t\t\t\t\tJanus.log(\"Removing audio sender:\", s);\n\t\t\t\t\t\t\t\tconfig.pc.removeTrack(s);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(media.removeVideo || media.replaceVideo) {\n\t\t\t\tif(config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n\t\t\t\t\tvar s = config.myStream.getVideoTracks()[0];\n\t\t\t\t\tJanus.log(\"Removing video track:\", s);\n\t\t\t\t\tconfig.myStream.removeTrack(s);\n\t\t\t\t\ttry {\n\t\t\t\t\t\ts.stop();\n\t\t\t\t\t} catch(e) {};\n\t\t\t\t}\n\t\t\t\tif(config.pc.getSenders() && config.pc.getSenders().length) {\n\t\t\t\t\tvar rv = true;\n\t\t\t\t\tif(media.replaceVideo && Janus.unifiedPlan) {\n\t\t\t\t\t\t// We can use replaceTrack\n\t\t\t\t\t\trv = false;\n\t\t\t\t\t}\n\t\t\t\t\tif(rv) {\n\t\t\t\t\t\tfor(var index in config.pc.getSenders()) {\n\t\t\t\t\t\t\tvar s = config.pc.getSenders()[index];\n\t\t\t\t\t\t\tif(s && s.track && s.track.kind === \"video\") {\n\t\t\t\t\t\t\t\tJanus.log(\"Removing video sender:\", s);\n\t\t\t\t\t\t\t\tconfig.pc.removeTrack(s);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Was a MediaStream object passed, or do we need to take care of that?\n\t\tif(callbacks.stream !== null && callbacks.stream !== undefined) {\n\t\t\tvar stream = callbacks.stream;\n\t\t\tJanus.log(\"MediaStream provided by the application\");\n\t\t\tJanus.debug(stream);\n\t\t\t// If this is an update, let's check if we need to release the previous stream\n\t\t\tif(media.update) {\n\t\t\t\tif(config.myStream && config.myStream !== callbacks.stream && !config.streamExternal) {\n\t\t\t\t\t// We're replacing a stream we captured ourselves with an external one\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Try a MediaStreamTrack.stop() for each track\n\t\t\t\t\t\tvar tracks = config.myStream.getTracks();\n\t\t\t\t\t\tfor(var i in tracks) {\n\t\t\t\t\t\t\tvar mst = tracks[i];\n\t\t\t\t\t\t\tJanus.log(mst);\n\t\t\t\t\t\t\tif(mst !== null && mst !== undefined)\n\t\t\t\t\t\t\t\tmst.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t// Do nothing if this fails\n\t\t\t\t\t}\n\t\t\t\t\tconfig.myStream = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Skip the getUserMedia part\n\t\t\tconfig.streamExternal = true;\n\t\t\tpluginHandle.consentDialog(false);\n\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\treturn;\n\t\t}\n\t\tif(isAudioSendEnabled(media) || isVideoSendEnabled(media)) {\n\t\t\tif(!Janus.isGetUserMediaAvailable()) {\n\t\t\t\tcallbacks.error(\"getUserMedia not available\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar constraints = { mandatory: {}, optional: []};\n\t\t\tpluginHandle.consentDialog(true);\n\t\t\tvar audioSupport = isAudioSendEnabled(media);\n\t\t\tif(audioSupport === true && media != undefined && media != null) {\n\t\t\t\tif(typeof media.audio === 'object') {\n\t\t\t\t\taudioSupport = media.audio;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar videoSupport = isVideoSendEnabled(media);\n\t\t\tif(videoSupport === true && media != undefined && media != null) {\n\t\t\t\tvar simulcast = callbacks.simulcast === true ? true : false;\n\t\t\t\tvar simulcast2 = callbacks.simulcast2 === true ? true : false;\n\t\t\t\tif((simulcast || simulcast2) && !jsep && (media.video === undefined || media.video === false))\n\t\t\t\t\tmedia.video = \"hires\";\n\t\t\t\tif(media.video && media.video != 'screen' && media.video != 'window') {\n\t\t\t\t\tif(typeof media.video === 'object') {\n\t\t\t\t\t\tvideoSupport = media.video;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar width = 0;\n\t\t\t\t\t\tvar height = 0, maxHeight = 0;\n\t\t\t\t\t\tif(media.video === 'lowres') {\n\t\t\t\t\t\t\t// Small resolution, 4:3\n\t\t\t\t\t\t\theight = 240;\n\t\t\t\t\t\t\tmaxHeight = 240;\n\t\t\t\t\t\t\twidth = 320;\n\t\t\t\t\t\t} else if(media.video === 'lowres-16:9') {\n\t\t\t\t\t\t\t// Small resolution, 16:9\n\t\t\t\t\t\t\theight = 180;\n\t\t\t\t\t\t\tmaxHeight = 180;\n\t\t\t\t\t\t\twidth = 320;\n\t\t\t\t\t\t} else if(media.video === 'hires' || media.video === 'hires-16:9' || media.video === 'hdres') {\n\t\t\t\t\t\t\t// High(HD) resolution is only 16:9\n\t\t\t\t\t\t\theight = 720;\n\t\t\t\t\t\t\tmaxHeight = 720;\n\t\t\t\t\t\t\twidth = 1280;\n\t\t\t\t\t\t} else if(media.video === 'fhdres') {\n\t\t\t\t\t\t\t// Full HD resolution is only 16:9\n\t\t\t\t\t\t\theight = 1080;\n\t\t\t\t\t\t\tmaxHeight = 1080;\n\t\t\t\t\t\t\twidth = 1920;\n\t\t\t\t\t\t} else if(media.video === '4kres') {\n\t\t\t\t\t\t\t// 4K resolution is only 16:9\n\t\t\t\t\t\t\theight = 2160;\n\t\t\t\t\t\t\tmaxHeight = 2160;\n\t\t\t\t\t\t\twidth = 3840;\n\t\t\t\t\t\t} else if(media.video === 'stdres') {\n\t\t\t\t\t\t\t// Normal resolution, 4:3\n\t\t\t\t\t\t\theight = 480;\n\t\t\t\t\t\t\tmaxHeight = 480;\n\t\t\t\t\t\t\twidth  = 640;\n\t\t\t\t\t\t} else if(media.video === 'stdres-16:9') {\n\t\t\t\t\t\t\t// Normal resolution, 16:9\n\t\t\t\t\t\t\theight = 360;\n\t\t\t\t\t\t\tmaxHeight = 360;\n\t\t\t\t\t\t\twidth = 640;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tJanus.log(\"Default video setting is stdres 4:3\");\n\t\t\t\t\t\t\theight = 480;\n\t\t\t\t\t\t\tmaxHeight = 480;\n\t\t\t\t\t\t\twidth = 640;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Adding media constraint:\", media.video);\n\t\t\t\t\t\tvideoSupport = {\n\t\t\t\t\t\t\t'height': {'ideal': height},\n\t\t\t\t\t\t\t'width':  {'ideal': width}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tJanus.log(\"Adding video constraint:\", videoSupport);\n\t\t\t\t\t}\n\t\t\t\t} else if(media.video === 'screen' || media.video === 'window') {\n\t\t\t\t\tif(!media.screenshareFrameRate) {\n\t\t\t\t\t\tmedia.screenshareFrameRate = 3;\n\t\t\t\t\t}\n\t\t\t\t\tif(navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n\t\t\t\t\t\t// The new experimental getDisplayMedia API is available, let's use that\n\t\t\t\t\t\t// https://groups.google.com/forum/#!topic/discuss-webrtc/Uf0SrR4uxzk\n\t\t\t\t\t\t// https://webrtchacks.com/chrome-screensharing-getdisplaymedia/\n\t\t\t\t\t\tnavigator.mediaDevices.getDisplayMedia({ video: true })\n\t\t\t\t\t\t\t.then(function(stream) {\n\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\tif(isAudioSendEnabled(media) && !media.keepAudio) {\n\t\t\t\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia({ audio: true, video: false })\n\t\t\t\t\t\t\t\t\t.then(function (audioStream) {\n\t\t\t\t\t\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\t\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\tcallbacks.error(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// We're going to try and use the extension for Chrome 34+, the old approach\n\t\t\t\t\t// for older versions of Chrome, or the experimental support in Firefox 33+\n\t\t\t\t\tfunction callbackUserMedia (error, stream) {\n\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\tif(error) {\n\t\t\t\t\t\t\tcallbacks.error(error);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tfunction getScreenMedia(constraints, gsmCallback, useAudio) {\n\t\t\t\t\t\tJanus.log(\"Adding media constraint (screen capture)\");\n\t\t\t\t\t\tJanus.debug(constraints);\n\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia(constraints)\n\t\t\t\t\t\t\t.then(function(stream) {\n\t\t\t\t\t\t\t\tif(useAudio) {\n\t\t\t\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia({ audio: true, video: false })\n\t\t\t\t\t\t\t\t\t.then(function (audioStream) {\n\t\t\t\t\t\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\t\t\t\t\t\t\tgsmCallback(null, stream);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tgsmCallback(null, stream);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function(error) { pluginHandle.consentDialog(false); gsmCallback(error); });\n\t\t\t\t\t};\n\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'chrome') {\n\t\t\t\t\t\tvar chromever = Janus.webRTCAdapter.browserDetails.version;\n\t\t\t\t\t\tvar maxver = 33;\n\t\t\t\t\t\tif(window.navigator.userAgent.match('Linux'))\n\t\t\t\t\t\t\tmaxver = 35;\t// \"known\" crash in chrome 34 and 35 on linux\n\t\t\t\t\t\tif(chromever >= 26 && chromever <= maxver) {\n\t\t\t\t\t\t\t// Chrome 26->33 requires some awkward chrome://flags manipulation\n\t\t\t\t\t\t\tconstraints = {\n\t\t\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\t\t\tmandatory: {\n\t\t\t\t\t\t\t\t\t\tgoogLeakyBucket: true,\n\t\t\t\t\t\t\t\t\t\tmaxWidth: window.screen.width,\n\t\t\t\t\t\t\t\t\t\tmaxHeight: window.screen.height,\n\t\t\t\t\t\t\t\t\t\tminFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\tmaxFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\tchromeMediaSource: 'screen'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\taudio: isAudioSendEnabled(media) && !media.keepAudio\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tgetScreenMedia(constraints, callbackUserMedia);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Chrome 34+ requires an extension\n\t\t\t\t\t\t\tJanus.extension.getScreen(function (error, sourceId) {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\t\treturn callbacks.error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconstraints = {\n\t\t\t\t\t\t\t\t\taudio: false,\n\t\t\t\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\t\t\t\tmandatory: {\n\t\t\t\t\t\t\t\t\t\t\tchromeMediaSource: 'desktop',\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth: window.screen.width,\n\t\t\t\t\t\t\t\t\t\t\tmaxHeight: window.screen.height,\n\t\t\t\t\t\t\t\t\t\t\tminFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\t\tmaxFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\toptional: [\n\t\t\t\t\t\t\t\t\t\t\t{googLeakyBucket: true},\n\t\t\t\t\t\t\t\t\t\t\t{googTemporalLayeredScreencast: true}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tconstraints.video.mandatory.chromeMediaSourceId = sourceId;\n\t\t\t\t\t\t\t\tgetScreenMedia(constraints, callbackUserMedia,\n\t\t\t\t\t\t\t\t\tisAudioSendEnabled(media) && !media.keepAudio);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(Janus.webRTCAdapter.browserDetails.browser === 'firefox') {\n\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.version >= 33) {\n\t\t\t\t\t\t\t// Firefox 33+ has experimental support for screen sharing\n\t\t\t\t\t\t\tconstraints = {\n\t\t\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\t\t\tmozMediaSource: media.video,\n\t\t\t\t\t\t\t\t\tmediaSource: media.video\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\taudio: isAudioSendEnabled(media) && !media.keepAudio\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tgetScreenMedia(constraints, function (err, stream) {\n\t\t\t\t\t\t\t\tcallbackUserMedia(err, stream);\n\t\t\t\t\t\t\t\t// Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=1045810\n\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\tvar lastTime = stream.currentTime;\n\t\t\t\t\t\t\t\t\tvar polly = window.setInterval(function () {\n\t\t\t\t\t\t\t\t\t\tif(!stream)\n\t\t\t\t\t\t\t\t\t\t\twindow.clearInterval(polly);\n\t\t\t\t\t\t\t\t\t\tif(stream.currentTime == lastTime) {\n\t\t\t\t\t\t\t\t\t\t\twindow.clearInterval(polly);\n\t\t\t\t\t\t\t\t\t\t\tif(stream.onended) {\n\t\t\t\t\t\t\t\t\t\t\t\tstream.onended();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlastTime = stream.currentTime;\n\t\t\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar error = new Error('NavigatorUserMediaError');\n\t\t\t\t\t\t\terror.name = 'Your version of Firefox does not support screen sharing, please install Firefox 33 (or more recent versions)';\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error(error);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If we got here, we're not screensharing\n\t\t\tif(media === null || media === undefined || media.video !== 'screen') {\n\t\t\t\t// Check whether all media sources are actually available or not\n\t\t\t\tnavigator.mediaDevices.enumerateDevices().then(function(devices) {\n\t\t\t\t\tvar audioExist = devices.some(function(device) {\n\t\t\t\t\t\treturn device.kind === 'audioinput';\n\t\t\t\t\t}),\n\t\t\t\t\tvideoExist = isScreenSendEnabled(media) || devices.some(function(device) {\n\t\t\t\t\t\treturn device.kind === 'videoinput';\n\t\t\t\t\t});\n\n\t\t\t\t\t// Check whether a missing device is really a problem\n\t\t\t\t\tvar audioSend = isAudioSendEnabled(media);\n\t\t\t\t\tvar videoSend = isVideoSendEnabled(media);\n\t\t\t\t\tvar needAudioDevice = isAudioSendRequired(media);\n\t\t\t\t\tvar needVideoDevice = isVideoSendRequired(media);\n\t\t\t\t\tif(audioSend || videoSend || needAudioDevice || needVideoDevice) {\n\t\t\t\t\t\t// We need to send either audio or video\n\t\t\t\t\t\tvar haveAudioDevice = audioSend ? audioExist : false;\n\t\t\t\t\t\tvar haveVideoDevice = videoSend ? videoExist : false;\n\t\t\t\t\t\tif(!haveAudioDevice && !haveVideoDevice) {\n\t\t\t\t\t\t\t// FIXME Should we really give up, or just assume recvonly for both?\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error('No capture device found');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else if(!haveAudioDevice && needAudioDevice) {\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error('Audio capture is required, but no capture device found');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else if(!haveVideoDevice && needVideoDevice) {\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error('Video capture is required, but no capture device found');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar gumConstraints = {\n\t\t\t\t\t\taudio: (audioExist && !media.keepAudio) ? audioSupport : false,\n\t\t\t\t\t\tvideo: (videoExist && !media.keepVideo) ? videoSupport : false\n\t\t\t\t\t};\n\t\t\t\t\tJanus.debug(\"getUserMedia constraints\", gumConstraints);\n\t\t\t\t\tif (!gumConstraints.audio && !gumConstraints.video) {\n\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia(gumConstraints)\n\t\t\t\t\t\t\t.then(function(stream) {\n\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t\t\t}).catch(function(error) {\n\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\tcallbacks.error({code: error.code, name: error.name, message: error.message});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(function(error) {\n\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\tcallbacks.error('enumerateDevices error', error);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// No need to do a getUserMedia, create offer/answer right away\n\t\t\tstreamsDone(handleId, jsep, media, callbacks);\n\t\t}\n\t}\n\n\tfunction prepareWebrtcPeer(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : webrtcError;\n\t\tvar jsep = callbacks.jsep;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(jsep !== undefined && jsep !== null) {\n\t\t\tif(config.pc === null) {\n\t\t\t\tJanus.warn(\"Wait, no PeerConnection?? if this is an answer, use createAnswer and not handleRemoteJsep\");\n\t\t\t\tcallbacks.error(\"No PeerConnection: if this is an answer, use createAnswer and not handleRemoteJsep\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconfig.pc.setRemoteDescription(jsep)\n\t\t\t\t.then(function() {\n\t\t\t\t\tJanus.log(\"Remote description accepted!\");\n\t\t\t\t\tconfig.remoteSdp = jsep.sdp;\n\t\t\t\t\t// Any trickle candidate we cached?\n\t\t\t\t\tif(config.candidates && config.candidates.length > 0) {\n\t\t\t\t\t\tfor(var i in config.candidates) {\n\t\t\t\t\t\t\tvar candidate = config.candidates[i];\n\t\t\t\t\t\t\tJanus.debug(\"Adding remote candidate:\", candidate);\n\t\t\t\t\t\t\tif(!candidate || candidate.completed === true) {\n\t\t\t\t\t\t\t\t// end-of-candidates\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(Janus.endOfCandidates);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// New candidate\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(candidate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconfig.candidates = [];\n\t\t\t\t\t}\n\t\t\t\t\t// Done\n\t\t\t\t\tcallbacks.success();\n\t\t\t\t}, callbacks.error);\n\t\t} else {\n\t\t\tcallbacks.error(\"Invalid JSEP\");\n\t\t}\n\t}\n\n\tfunction createOffer(handleId, media, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks.customizeSdp = (typeof callbacks.customizeSdp == \"function\") ? callbacks.customizeSdp : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar simulcast = callbacks.simulcast === true ? true : false;\n\t\tif(!simulcast) {\n\t\t\tJanus.log(\"Creating offer (iceDone=\" + config.iceDone + \")\");\n\t\t} else {\n\t\t\tJanus.log(\"Creating offer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n\t\t}\n\t\t// https://code.google.com/p/webrtc/issues/detail?id=3508\n\t\tvar mediaConstraints = {};\n\t\tif(Janus.unifiedPlan) {\n\t\t\t// We can use Transceivers\n\t\t\tvar audioTransceiver = null, videoTransceiver = null;\n\t\t\tvar transceivers = config.pc.getTransceivers();\n\t\t\tif(transceivers && transceivers.length > 0) {\n\t\t\t\tfor(var i in transceivers) {\n\t\t\t\t\tvar t = transceivers[i];\n\t\t\t\t\tif((t.sender && t.sender.track && t.sender.track.kind === \"audio\") ||\n\t\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\")) {\n\t\t\t\t\t\tif(!audioTransceiver)\n\t\t\t\t\t\t\taudioTransceiver = t;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif((t.sender && t.sender.track && t.sender.track.kind === \"video\") ||\n\t\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"video\")) {\n\t\t\t\t\t\tif(!videoTransceiver)\n\t\t\t\t\t\t\tvideoTransceiver = t;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle audio (and related changes, if any)\n\t\t\tvar audioSend = isAudioSendEnabled(media);\n\t\t\tvar audioRecv = isAudioRecvEnabled(media);\n\t\t\tif(!audioSend && !audioRecv) {\n\t\t\t\t// Audio disabled: have we removed it?\n\t\t\t\tif(media.removeAudio && audioTransceiver) {\n\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\taudioTransceiver.setDirection(\"inactive\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\taudioTransceiver.direction = \"inactive\";\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Setting audio transceiver to inactive:\", audioTransceiver);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Take care of audio m-line\n\t\t\t\tif(audioSend && audioRecv) {\n\t\t\t\t\tif(audioTransceiver) {\n\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\taudioTransceiver.setDirection(\"sendrecv\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taudioTransceiver.direction = \"sendrecv\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to sendrecv:\", audioTransceiver);\n\t\t\t\t\t}\n\t\t\t\t} else if(audioSend && !audioRecv) {\n\t\t\t\t\tif(audioTransceiver) {\n\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\taudioTransceiver.setDirection(\"sendonly\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taudioTransceiver.direction = \"sendonly\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to sendonly:\", audioTransceiver);\n\t\t\t\t\t}\n\t\t\t\t} else if(!audioSend && audioRecv) {\n\t\t\t\t\tif(audioTransceiver) {\n\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\taudioTransceiver.setDirection(\"recvonly\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taudioTransceiver.direction = \"recvonly\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to recvonly:\", audioTransceiver);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// In theory, this is the only case where we might not have a transceiver yet\n\t\t\t\t\t\taudioTransceiver = config.pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n\t\t\t\t\t\tJanus.log(\"Adding recvonly audio transceiver:\", audioTransceiver);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle video (and related changes, if any)\n\t\t\tvar videoSend = isVideoSendEnabled(media);\n\t\t\tvar videoRecv = isVideoRecvEnabled(media);\n\t\t\tif(!videoSend && !videoRecv) {\n\t\t\t\t// Video disabled: have we removed it?\n\t\t\t\tif(media.removeVideo && videoTransceiver) {\n\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\tvideoTransceiver.setDirection(\"inactive\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvideoTransceiver.direction = \"inactive\";\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Setting video transceiver to inactive:\", videoTransceiver);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Take care of video m-line\n\t\t\t\tif(videoSend && videoRecv) {\n\t\t\t\t\tif(videoTransceiver) {\n\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"sendrecv\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvideoTransceiver.direction = \"sendrecv\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting video transceiver to sendrecv:\", videoTransceiver);\n\t\t\t\t\t}\n\t\t\t\t} else if(videoSend && !videoRecv) {\n\t\t\t\t\tif(videoTransceiver) {\n\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"sendonly\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvideoTransceiver.direction = \"sendonly\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting video transceiver to sendonly:\", videoTransceiver);\n\t\t\t\t\t}\n\t\t\t\t} else if(!videoSend && videoRecv) {\n\t\t\t\t\tif(videoTransceiver) {\n\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"recvonly\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvideoTransceiver.direction = \"recvonly\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting video transceiver to recvonly:\", videoTransceiver);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// In theory, this is the only case where we might not have a transceiver yet\n\t\t\t\t\t\tvideoTransceiver = config.pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n\t\t\t\t\t\tJanus.log(\"Adding recvonly video transceiver:\", videoTransceiver);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmediaConstraints[\"offerToReceiveAudio\"] = isAudioRecvEnabled(media);\n\t\t\tmediaConstraints[\"offerToReceiveVideo\"] = isVideoRecvEnabled(media);\n\t\t}\n\t\tvar iceRestart = callbacks.iceRestart === true ? true : false;\n\t\tif(iceRestart) {\n\t\t\tmediaConstraints[\"iceRestart\"] = true;\n\t\t}\n\t\tJanus.debug(mediaConstraints);\n\t\t// Check if this is Firefox and we've been asked to do simulcasting\n\t\tvar sendVideo = isVideoSendEnabled(media);\n\t\tif(sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n\t\t\t// FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n\t\t\tJanus.log(\"Enabling Simulcasting for Firefox (RID)\");\n\t\t\tvar sender = config.pc.getSenders().find(function(s) {return s.track.kind == \"video\"});\n\t\t\tif(sender) {\n\t\t\t\tvar parameters = sender.getParameters();\n\t\t\t\tif(!parameters)\n\t\t\t\t\tparameters = {};\n\t\t\t\tparameters.encodings = [\n\t\t\t\t\t{ rid: \"h\", active: true, maxBitrate: 900000 },\n\t\t\t\t\t{ rid: \"m\", active: true, maxBitrate: 300000, scaleResolutionDownBy: 2 },\n\t\t\t\t\t{ rid: \"l\", active: true, maxBitrate: 100000, scaleResolutionDownBy: 4 }\n\t\t\t\t];\n\t\t\t\tsender.setParameters(parameters);\n\t\t\t}\n\t\t}\n\t\tconfig.pc.createOffer(mediaConstraints)\n\t\t\t.then(function(offer) {\n\t\t\t\tJanus.debug(offer);\n\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\tvar jsep = {\n\t\t\t\t\t\"type\": offer.type,\n\t\t\t\t\t\"sdp\": offer.sdp\n\t\t\t\t};\n\t\t\t\tcallbacks.customizeSdp(jsep);\n\t\t\t\toffer.sdp = jsep.sdp;\n\t\t\t\tJanus.log(\"Setting local description\");\n\t\t\t\tif(sendVideo && simulcast) {\n\t\t\t\t\t// This SDP munging only works with Chrome (Safari STP may support it too)\n\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"chrome\" ||\n\t\t\t\t\t\t\tJanus.webRTCAdapter.browserDetails.browser === \"safari\") {\n\t\t\t\t\t\tJanus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n\t\t\t\t\t\toffer.sdp = mungeSdpForSimulcasting(offer.sdp);\n\t\t\t\t\t} else if(Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n\t\t\t\t\t\tJanus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconfig.mySdp = offer.sdp;\n\t\t\t\tconfig.pc.setLocalDescription(offer)\n\t\t\t\t\t.catch(callbacks.error);\n\t\t\t\tconfig.mediaConstraints = mediaConstraints;\n\t\t\t\tif(!config.iceDone && !config.trickle) {\n\t\t\t\t\t// Don't do anything until we have all candidates\n\t\t\t\t\tJanus.log(\"Waiting for all candidates...\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tJanus.log(\"Offer ready\");\n\t\t\t\tJanus.debug(callbacks);\n\t\t\t\tcallbacks.success(offer);\n\t\t\t}, callbacks.error);\n\t}\n\n\tfunction createAnswer(handleId, media, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks.customizeSdp = (typeof callbacks.customizeSdp == \"function\") ? callbacks.customizeSdp : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar simulcast = callbacks.simulcast === true ? true : false;\n\t\tif(!simulcast) {\n\t\t\tJanus.log(\"Creating answer (iceDone=\" + config.iceDone + \")\");\n\t\t} else {\n\t\t\tJanus.log(\"Creating answer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n\t\t}\n\t\tvar mediaConstraints = null;\n\t\tif(Janus.unifiedPlan) {\n\t\t\t// We can use Transceivers\n\t\t\tmediaConstraints = {};\n\t\t\tvar audioTransceiver = null, videoTransceiver = null;\n\t\t\tvar transceivers = config.pc.getTransceivers();\n\t\t\tif(transceivers && transceivers.length > 0) {\n\t\t\t\tfor(var i in transceivers) {\n\t\t\t\t\tvar t = transceivers[i];\n\t\t\t\t\tif((t.sender && t.sender.track && t.sender.track.kind === \"audio\") ||\n\t\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\")) {\n\t\t\t\t\t\tif(!audioTransceiver)\n\t\t\t\t\t\t\taudioTransceiver = t;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif((t.sender && t.sender.track && t.sender.track.kind === \"video\") ||\n\t\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"video\")) {\n\t\t\t\t\t\tif(!videoTransceiver)\n\t\t\t\t\t\t\tvideoTransceiver = t;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle audio (and related changes, if any)\n\t\t\tvar audioSend = isAudioSendEnabled(media);\n\t\t\tvar audioRecv = isAudioRecvEnabled(media);\n\t\t\tif(!audioSend && !audioRecv) {\n\t\t\t\t// Audio disabled: have we removed it?\n\t\t\t\tif(media.removeAudio && audioTransceiver) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\taudioTransceiver.setDirection(\"inactive\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taudioTransceiver.direction = \"inactive\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to inactive:\", audioTransceiver);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Take care of audio m-line\n\t\t\t\tif(audioSend && audioRecv) {\n\t\t\t\t\tif(audioTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\t\taudioTransceiver.setDirection(\"sendrecv\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taudioTransceiver.direction = \"sendrecv\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to sendrecv:\", audioTransceiver);\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if(audioSend && !audioRecv) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif(audioTransceiver) {\n\t\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\t\taudioTransceiver.setDirection(\"sendonly\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taudioTransceiver.direction = \"sendonly\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to sendonly:\", audioTransceiver);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t}\n\t\t\t\t} else if(!audioSend && audioRecv) {\n\t\t\t\t\tif(audioTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\t\taudioTransceiver.setDirection(\"recvonly\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taudioTransceiver.direction = \"recvonly\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to recvonly:\", audioTransceiver);\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// In theory, this is the only case where we might not have a transceiver yet\n\t\t\t\t\t\taudioTransceiver = config.pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n\t\t\t\t\t\tJanus.log(\"Adding recvonly audio transceiver:\", audioTransceiver);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle video (and related changes, if any)\n\t\t\tvar videoSend = isVideoSendEnabled(media);\n\t\t\tvar videoRecv = isVideoRecvEnabled(media);\n\t\t\tif(!videoSend && !videoRecv) {\n\t\t\t\t// Video disabled: have we removed it?\n\t\t\t\tif(media.removeVideo && videoTransceiver) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"inactive\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvideoTransceiver.direction = \"inactive\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting video transceiver to inactive:\", videoTransceiver);\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Take care of video m-line\n\t\t\t\tif(videoSend && videoRecv) {\n\t\t\t\t\tif(videoTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"sendrecv\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvideoTransceiver.direction = \"sendrecv\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting video transceiver to sendrecv:\", videoTransceiver);\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if(videoSend && !videoRecv) {\n\t\t\t\t\tif(videoTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"sendonly\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvideoTransceiver.direction = \"sendonly\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting video transceiver to sendonly:\", videoTransceiver);\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if(!videoSend && videoRecv) {\n\t\t\t\t\tif(videoTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"recvonly\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvideoTransceiver.direction = \"recvonly\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting video transceiver to recvonly:\", videoTransceiver);\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// In theory, this is the only case where we might not have a transceiver yet\n\t\t\t\t\t\tvideoTransceiver = config.pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n\t\t\t\t\t\tJanus.log(\"Adding recvonly video transceiver:\", videoTransceiver);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif(Janus.webRTCAdapter.browserDetails.browser == \"firefox\" || Janus.webRTCAdapter.browserDetails.browser == \"edge\") {\n\t\t\t\tmediaConstraints = {\n\t\t\t\t\tofferToReceiveAudio: isAudioRecvEnabled(media),\n\t\t\t\t\tofferToReceiveVideo: isVideoRecvEnabled(media)\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tmediaConstraints = {\n\t\t\t\t\tmandatory: {\n\t\t\t\t\t\tOfferToReceiveAudio: isAudioRecvEnabled(media),\n\t\t\t\t\t\tOfferToReceiveVideo: isVideoRecvEnabled(media)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tJanus.debug(mediaConstraints);\n\t\t// Check if this is Firefox and we've been asked to do simulcasting\n\t\tvar sendVideo = isVideoSendEnabled(media);\n\t\tif(sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n\t\t\t// FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n\t\t\tJanus.log(\"Enabling Simulcasting for Firefox (RID)\");\n\t\t\tvar sender = config.pc.getSenders()[1];\n\t\t\tJanus.log(sender);\n\t\t\tvar parameters = sender.getParameters();\n\t\t\tJanus.log(parameters);\n\t\t\tsender.setParameters({encodings: [\n\t\t\t\t{ rid: \"high\", active: true, priority: \"high\", maxBitrate: 1000000 },\n\t\t\t\t{ rid: \"medium\", active: true, priority: \"medium\", maxBitrate: 300000 },\n\t\t\t\t{ rid: \"low\", active: true, priority: \"low\", maxBitrate: 100000 }\n\t\t\t]});\n\t\t}\n\t\tconfig.pc.createAnswer(mediaConstraints)\n\t\t\t.then(function(answer) {\n\t\t\t\tJanus.debug(answer);\n\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\tvar jsep = {\n\t\t\t\t\t\"type\": answer.type,\n\t\t\t\t\t\"sdp\": answer.sdp\n\t\t\t\t};\n\t\t\t\tcallbacks.customizeSdp(jsep);\n\t\t\t\tanswer.sdp = jsep.sdp;\n\t\t\t\tJanus.log(\"Setting local description\");\n\t\t\t\tif(sendVideo && simulcast) {\n\t\t\t\t\t// This SDP munging only works with Chrome\n\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n\t\t\t\t\t\t// FIXME Apparently trying to simulcast when answering breaks video in Chrome...\n\t\t\t\t\t\t//~ Janus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n\t\t\t\t\t\t//~ answer.sdp = mungeSdpForSimulcasting(answer.sdp);\n\t\t\t\t\t\tJanus.warn(\"simulcast=true, but this is an answer, and video breaks in Chrome if we enable it\");\n\t\t\t\t\t} else if(Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n\t\t\t\t\t\tJanus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconfig.mySdp = answer.sdp;\n\t\t\t\tconfig.pc.setLocalDescription(answer)\n\t\t\t\t\t.catch(callbacks.error);\n\t\t\t\tconfig.mediaConstraints = mediaConstraints;\n\t\t\t\tif(!config.iceDone && !config.trickle) {\n\t\t\t\t\t// Don't do anything until we have all candidates\n\t\t\t\t\tJanus.log(\"Waiting for all candidates...\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcallbacks.success(answer);\n\t\t\t}, callbacks.error);\n\t}\n\n\tfunction sendSDP(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle, not sending anything\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tJanus.log(\"Sending offer/answer SDP...\");\n\t\tif(config.mySdp === null || config.mySdp === undefined) {\n\t\t\tJanus.warn(\"Local SDP instance is invalid, not sending anything...\");\n\t\t\treturn;\n\t\t}\n\t\tconfig.mySdp = {\n\t\t\t\"type\": config.pc.localDescription.type,\n\t\t\t\"sdp\": config.pc.localDescription.sdp\n\t\t};\n\t\tif(config.trickle === false)\n\t\t\tconfig.mySdp[\"trickle\"] = false;\n\t\tJanus.debug(callbacks);\n\t\tconfig.sdpSent = true;\n\t\tcallbacks.success(config.mySdp);\n\t}\n\n\tfunction getVolume(handleId, remote) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn 0;\n\t\t}\n\t\tvar stream = remote ? \"remote\" : \"local\";\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(!config.volume[stream])\n\t\t\tconfig.volume[stream] = { value: 0 };\n\t\t// Start getting the volume, if getStats is supported\n\t\tif(config.pc.getStats && Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n\t\t\tif(remote && (config.remoteStream === null || config.remoteStream === undefined)) {\n\t\t\t\tJanus.warn(\"Remote stream unavailable\");\n\t\t\t\treturn 0;\n\t\t\t} else if(!remote && (config.myStream === null || config.myStream === undefined)) {\n\t\t\t\tJanus.warn(\"Local stream unavailable\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif(config.volume[stream].timer === null || config.volume[stream].timer === undefined) {\n\t\t\t\tJanus.log(\"Starting \" + stream + \" volume monitor\");\n\t\t\t\tconfig.volume[stream].timer = setInterval(function() {\n\t\t\t\t\tconfig.pc.getStats(function(stats) {\n\t\t\t\t\t\tvar results = stats.result();\n\t\t\t\t\t\tfor(var i=0; i<results.length; i++) {\n\t\t\t\t\t\t\tvar res = results[i];\n\t\t\t\t\t\t\tif(res.type == 'ssrc') {\n\t\t\t\t\t\t\t\tif(remote && res.stat('audioOutputLevel'))\n\t\t\t\t\t\t\t\t\tconfig.volume[stream].value = parseInt(res.stat('audioOutputLevel'));\n\t\t\t\t\t\t\t\telse if(!remote && res.stat('audioInputLevel'))\n\t\t\t\t\t\t\t\t\tconfig.volume[stream].value = parseInt(res.stat('audioInputLevel'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, 200);\n\t\t\t\treturn 0;\t// We don't have a volume to return yet\n\t\t\t}\n\t\t\treturn config.volume[stream].value;\n\t\t} else {\n\t\t\t// audioInputLevel and audioOutputLevel seem only available in Chrome? audioLevel\n\t\t\t// seems to be available on Chrome and Firefox, but they don't seem to work\n\t\t\tJanus.warn(\"Getting the \" + stream + \" volume unsupported by browser\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tfunction isMuted(handleId, video) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn true;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config.pc === null || config.pc === undefined) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn true;\n\t\t}\n\t\tif(config.myStream === undefined || config.myStream === null) {\n\t\t\tJanus.warn(\"Invalid local MediaStream\");\n\t\t\treturn true;\n\t\t}\n\t\tif(video) {\n\t\t\t// Check video track\n\t\t\tif(config.myStream.getVideoTracks() === null\n\t\t\t\t\t|| config.myStream.getVideoTracks() === undefined\n\t\t\t\t\t|| config.myStream.getVideoTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No video track\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !config.myStream.getVideoTracks()[0].enabled;\n\t\t} else {\n\t\t\t// Check audio track\n\t\t\tif(config.myStream.getAudioTracks() === null\n\t\t\t\t\t|| config.myStream.getAudioTracks() === undefined\n\t\t\t\t\t|| config.myStream.getAudioTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No audio track\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !config.myStream.getAudioTracks()[0].enabled;\n\t\t}\n\t}\n\n\tfunction mute(handleId, video, mute) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn false;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config.pc === null || config.pc === undefined) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn false;\n\t\t}\n\t\tif(config.myStream === undefined || config.myStream === null) {\n\t\t\tJanus.warn(\"Invalid local MediaStream\");\n\t\t\treturn false;\n\t\t}\n\t\tif(video) {\n\t\t\t// Mute/unmute video track\n\t\t\tif(config.myStream.getVideoTracks() === null\n\t\t\t\t\t|| config.myStream.getVideoTracks() === undefined\n\t\t\t\t\t|| config.myStream.getVideoTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No video track\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconfig.myStream.getVideoTracks()[0].enabled = mute ? false : true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// Mute/unmute audio track\n\t\t\tif(config.myStream.getAudioTracks() === null\n\t\t\t\t\t|| config.myStream.getAudioTracks() === undefined\n\t\t\t\t\t|| config.myStream.getAudioTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No audio track\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconfig.myStream.getAudioTracks()[0].enabled = mute ? false : true;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tfunction getBitrate(handleId) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined ||\n\t\t\t\tpluginHandle.webrtcStuff === null || pluginHandle.webrtcStuff === undefined) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn \"Invalid handle\";\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config.pc === null || config.pc === undefined)\n\t\t\treturn \"Invalid PeerConnection\";\n\t\t// Start getting the bitrate, if getStats is supported\n\t\tif(config.pc.getStats) {\n\t\t\tif(config.bitrate.timer === null || config.bitrate.timer === undefined) {\n\t\t\t\tJanus.log(\"Starting bitrate timer (via getStats)\");\n\t\t\t\tconfig.bitrate.timer = setInterval(function() {\n\t\t\t\t\tconfig.pc.getStats()\n\t\t\t\t\t\t.then(function(stats) {\n\t\t\t\t\t\t\tstats.forEach(function (res) {\n\t\t\t\t\t\t\t\tif(!res)\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\tvar inStats = false;\n\t\t\t\t\t\t\t\t// Check if these are statistics on incoming media\n\t\t\t\t\t\t\t\tif((res.mediaType === \"video\" || res.id.toLowerCase().indexOf(\"video\") > -1) &&\n\t\t\t\t\t\t\t\t\t\tres.type === \"inbound-rtp\" && res.id.indexOf(\"rtcp\") < 0) {\n\t\t\t\t\t\t\t\t\t// New stats\n\t\t\t\t\t\t\t\t\tinStats = true;\n\t\t\t\t\t\t\t\t} else if(res.type == 'ssrc' && res.bytesReceived &&\n\t\t\t\t\t\t\t\t\t\t(res.googCodecName === \"VP8\" || res.googCodecName === \"\")) {\n\t\t\t\t\t\t\t\t\t// Older Chromer versions\n\t\t\t\t\t\t\t\t\tinStats = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Parse stats now\n\t\t\t\t\t\t\t\tif(inStats) {\n\t\t\t\t\t\t\t\t\tconfig.bitrate.bsnow = res.bytesReceived;\n\t\t\t\t\t\t\t\t\tconfig.bitrate.tsnow = res.timestamp;\n\t\t\t\t\t\t\t\t\tif(config.bitrate.bsbefore === null || config.bitrate.tsbefore === null) {\n\t\t\t\t\t\t\t\t\t\t// Skip this round\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.bsbefore = config.bitrate.bsnow;\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.tsbefore = config.bitrate.tsnow;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// Calculate bitrate\n\t\t\t\t\t\t\t\t\t\tvar timePassed = config.bitrate.tsnow - config.bitrate.tsbefore;\n\t\t\t\t\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser == \"safari\")\n\t\t\t\t\t\t\t\t\t\t\ttimePassed = timePassed/1000;\t// Apparently the timestamp is in microseconds, in Safari\n\t\t\t\t\t\t\t\t\t\tvar bitRate = Math.round((config.bitrate.bsnow - config.bitrate.bsbefore) * 8 / timePassed);\n\t\t\t\t\t\t\t\t\t\tif(Janus.webRTCAdapter.browserDetails.browser === 'safari')\n\t\t\t\t\t\t\t\t\t\t\tbitRate = parseInt(bitRate/1000);\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.value = bitRate + ' kbits/sec';\n\t\t\t\t\t\t\t\t\t\t//~ Janus.log(\"Estimated bitrate is \" + config.bitrate.value);\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.bsbefore = config.bitrate.bsnow;\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.tsbefore = config.bitrate.tsnow;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}, 1000);\n\t\t\t\treturn \"0 kbits/sec\";\t// We don't have a bitrate value yet\n\t\t\t}\n\t\t\treturn config.bitrate.value;\n\t\t} else {\n\t\t\tJanus.warn(\"Getting the video bitrate unsupported by browser\");\n\t\t\treturn \"Feature unsupported by browser\";\n\t\t}\n\t}\n\n\tfunction webrtcError(error) {\n\t\tJanus.error(\"WebRTC error:\", error);\n\t}\n\n\tfunction cleanupWebrtc(handleId, hangupRequest) {\n\t\tJanus.log(\"Cleaning WebRTC stuff\");\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif(pluginHandle === null || pluginHandle === undefined) {\n\t\t\t// Nothing to clean\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif(config !== null && config !== undefined) {\n\t\t\tif(hangupRequest === true) {\n\t\t\t\t// Send a hangup request (we don't really care about the response)\n\t\t\t\tvar request = { \"janus\": \"hangup\", \"transaction\": Janus.randomString(12) };\n\t\t\t\tif(pluginHandle.token !== null && pluginHandle.token !== undefined)\n\t\t\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\t\t\tif(apisecret !== null && apisecret !== undefined)\n\t\t\t\t\trequest[\"apisecret\"] = apisecret;\n\t\t\t\tJanus.debug(\"Sending hangup request (handle=\" + handleId + \"):\");\n\t\t\t\tJanus.debug(request);\n\t\t\t\tif(websockets) {\n\t\t\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t\t} else {\n\t\t\t\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\t\t\t\tverb: 'POST',\n\t\t\t\t\t\twithCredentials: withCredentials,\n\t\t\t\t\t\tbody: request\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Cleanup stack\n\t\t\tconfig.remoteStream = null;\n\t\t\tif(config.volume) {\n\t\t\t\tif(config.volume[\"local\"] && config.volume[\"local\"].timer)\n\t\t\t\t\tclearInterval(config.volume[\"local\"].timer);\n\t\t\t\tif(config.volume[\"remote\"] && config.volume[\"remote\"].timer)\n\t\t\t\t\tclearInterval(config.volume[\"remote\"].timer);\n\t\t\t}\n\t\t\tconfig.volume = {};\n\t\t\tif(config.bitrate.timer)\n\t\t\t\tclearInterval(config.bitrate.timer);\n\t\t\tconfig.bitrate.timer = null;\n\t\t\tconfig.bitrate.bsnow = null;\n\t\t\tconfig.bitrate.bsbefore = null;\n\t\t\tconfig.bitrate.tsnow = null;\n\t\t\tconfig.bitrate.tsbefore = null;\n\t\t\tconfig.bitrate.value = null;\n\t\t\ttry {\n\t\t\t\t// Try a MediaStreamTrack.stop() for each track\n\t\t\t\tif(!config.streamExternal && config.myStream !== null && config.myStream !== undefined) {\n\t\t\t\t\tJanus.log(\"Stopping local stream tracks\");\n\t\t\t\t\tvar tracks = config.myStream.getTracks();\n\t\t\t\t\tfor(var i in tracks) {\n\t\t\t\t\t\tvar mst = tracks[i];\n\t\t\t\t\t\tJanus.log(mst);\n\t\t\t\t\t\tif(mst !== null && mst !== undefined)\n\t\t\t\t\t\t\tmst.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch(e) {\n\t\t\t\t// Do nothing if this fails\n\t\t\t}\n\t\t\tconfig.streamExternal = false;\n\t\t\tconfig.myStream = null;\n\t\t\t// Close PeerConnection\n\t\t\ttry {\n\t\t\t\tconfig.pc.close();\n\t\t\t} catch(e) {\n\t\t\t\t// Do nothing\n\t\t\t}\n\t\t\tconfig.pc = null;\n\t\t\tconfig.candidates = null;\n\t\t\tconfig.mySdp = null;\n\t\t\tconfig.remoteSdp = null;\n\t\t\tconfig.iceDone = false;\n\t\t\tconfig.dataChannel = {};\n\t\t\tconfig.dtmfSender = null;\n\t\t}\n\t\tpluginHandle.oncleanup();\n\t}\n\n\t// Helper method to munge an SDP to enable simulcasting (Chrome only)\n\tfunction mungeSdpForSimulcasting(sdp) {\n\t\t// Let's munge the SDP to add the attributes for enabling simulcasting\n\t\t// (based on https://gist.github.com/ggarber/a19b4c33510028b9c657)\n\t\tvar lines = sdp.split(\"\\r\\n\");\n\t\tvar video = false;\n\t\tvar ssrc = [ -1 ], ssrc_fid = [ -1 ];\n\t\tvar cname = null, msid = null, mslabel = null, label = null;\n\t\tvar insertAt = -1;\n\t\tfor(var i=0; i<lines.length; i++) {\n\t\t\tvar mline = lines[i].match(/m=(\\w+) */);\n\t\t\tif(mline) {\n\t\t\t\tvar medium = mline[1];\n\t\t\t\tif(medium === \"video\") {\n\t\t\t\t\t// New video m-line: make sure it's the first one\n\t\t\t\t\tif(ssrc[0] < 0) {\n\t\t\t\t\t\tvideo = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// New non-video m-line: do we have what we were looking for?\n\t\t\t\t\tif(ssrc[0] > -1) {\n\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(!video)\n\t\t\t\tcontinue;\n\t\t\tvar fid = lines[i].match(/a=ssrc-group:FID (\\d+) (\\d+)/);\n\t\t\tif(fid) {\n\t\t\t\tssrc[0] = fid[1];\n\t\t\t\tssrc_fid[0] = fid[2];\n\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(ssrc[0]) {\n\t\t\t\tvar match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)')\n\t\t\t\tif(match) {\n\t\t\t\t\tcname = match[1];\n\t\t\t\t}\n\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)')\n\t\t\t\tif(match) {\n\t\t\t\t\tmsid = match[1];\n\t\t\t\t}\n\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)')\n\t\t\t\tif(match) {\n\t\t\t\t\tmslabel = match[1];\n\t\t\t\t}\n\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' label:(.+)')\n\t\t\t\tif(match) {\n\t\t\t\t\tlabel = match[1];\n\t\t\t\t}\n\t\t\t\tif(lines[i].indexOf('a=ssrc:' + ssrc_fid[0]) === 0) {\n\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(lines[i].length == 0) {\n\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif(ssrc[0] < 0) {\n\t\t\t// Couldn't find a FID attribute, let's just take the first video SSRC we find\n\t\t\tinsertAt = -1;\n\t\t\tvideo = false;\n\t\t\tfor(var i=0; i<lines.length; i++) {\n\t\t\t\tvar mline = lines[i].match(/m=(\\w+) */);\n\t\t\t\tif(mline) {\n\t\t\t\t\tvar medium = mline[1];\n\t\t\t\t\tif(medium === \"video\") {\n\t\t\t\t\t\t// New video m-line: make sure it's the first one\n\t\t\t\t\t\tif(ssrc[0] < 0) {\n\t\t\t\t\t\t\tvideo = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// New non-video m-line: do we have what we were looking for?\n\t\t\t\t\t\tif(ssrc[0] > -1) {\n\t\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(!video)\n\t\t\t\t\tcontinue;\n\t\t\t\tif(ssrc[0] < 0) {\n\t\t\t\t\tvar value = lines[i].match(/a=ssrc:(\\d+)/);\n\t\t\t\t\tif(value) {\n\t\t\t\t\t\tssrc[0] = value[1];\n\t\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)')\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tcname = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)')\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tmsid = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)')\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tmslabel = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' label:(.+)')\n\t\t\t\t\tif(match) {\n\t\t\t\t\t\tlabel = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tif(lines[i].indexOf('a=ssrc:' + ssrc_fid[0]) === 0) {\n\t\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n\t\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(lines[i].length == 0) {\n\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(ssrc[0] < 0) {\n\t\t\t// Still nothing, let's just return the SDP we were asked to munge\n\t\t\tJanus.warn(\"Couldn't find the video SSRC, simulcasting NOT enabled\");\n\t\t\treturn sdp;\n\t\t}\n\t\tif(insertAt < 0) {\n\t\t\t// Append at the end\n\t\t\tinsertAt = lines.length;\n\t\t}\n\t\t// Generate a couple of SSRCs (for retransmissions too)\n\t\t// Note: should we check if there are conflicts, here?\n\t\tssrc[1] = Math.floor(Math.random()*0xFFFFFFFF);\n\t\tssrc[2] = Math.floor(Math.random()*0xFFFFFFFF);\n\t\tssrc_fid[1] = Math.floor(Math.random()*0xFFFFFFFF);\n\t\tssrc_fid[2] = Math.floor(Math.random()*0xFFFFFFFF);\n\t\t// Add attributes to the SDP\n\t\tfor(var i=0; i<ssrc.length; i++) {\n\t\t\tif(cname) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' cname:' + cname);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif(msid) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' msid:' + msid);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif(mslabel) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' mslabel:' + mslabel);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif(label) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' label:' + label);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\t// Add the same info for the retransmission SSRC\n\t\t\tif(cname) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' cname:' + cname);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif(msid) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' msid:' + msid);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif(mslabel) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' mslabel:' + mslabel);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif(label) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' label:' + label);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t}\n\t\tlines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[2] + ' ' + ssrc_fid[2]);\n\t\tlines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[1] + ' ' + ssrc_fid[1]);\n\t\tlines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[0] + ' ' + ssrc_fid[0]);\n\t\tlines.splice(insertAt, 0, 'a=ssrc-group:SIM ' + ssrc[0] + ' ' + ssrc[1] + ' ' + ssrc[2]);\n\t\tsdp = lines.join(\"\\r\\n\");\n\t\tif(!sdp.endsWith(\"\\r\\n\"))\n\t\t\tsdp += \"\\r\\n\";\n\t\treturn sdp;\n\t}\n\n\t// Helper methods to parse a media object\n\tfunction isAudioSendEnabled(media) {\n\t\tJanus.debug(\"isAudioSendEnabled:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn true;\t// Default\n\t\tif(media.audio === false)\n\t\t\treturn false;\t// Generic audio has precedence\n\t\tif(media.audioSend === undefined || media.audioSend === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.audioSend === true);\n\t}\n\n\tfunction isAudioSendRequired(media) {\n\t\tJanus.debug(\"isAudioSendRequired:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn false;\t// Default\n\t\tif(media.audio === false || media.audioSend === false)\n\t\t\treturn false;\t// If we're not asking to capture audio, it's not required\n\t\tif(media.failIfNoAudio === undefined || media.failIfNoAudio === null)\n\t\t\treturn false;\t// Default\n\t\treturn (media.failIfNoAudio === true);\n\t}\n\n\tfunction isAudioRecvEnabled(media) {\n\t\tJanus.debug(\"isAudioRecvEnabled:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn true;\t// Default\n\t\tif(media.audio === false)\n\t\t\treturn false;\t// Generic audio has precedence\n\t\tif(media.audioRecv === undefined || media.audioRecv === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.audioRecv === true);\n\t}\n\n\tfunction isVideoSendEnabled(media) {\n\t\tJanus.debug(\"isVideoSendEnabled:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn true;\t// Default\n\t\tif(media.video === false)\n\t\t\treturn false;\t// Generic video has precedence\n\t\tif(media.videoSend === undefined || media.videoSend === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.videoSend === true);\n\t}\n\n\tfunction isVideoSendRequired(media) {\n\t\tJanus.debug(\"isVideoSendRequired:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn false;\t// Default\n\t\tif(media.video === false || media.videoSend === false)\n\t\t\treturn false;\t// If we're not asking to capture video, it's not required\n\t\tif(media.failIfNoVideo === undefined || media.failIfNoVideo === null)\n\t\t\treturn false;\t// Default\n\t\treturn (media.failIfNoVideo === true);\n\t}\n\n\tfunction isVideoRecvEnabled(media) {\n\t\tJanus.debug(\"isVideoRecvEnabled:\", media);\n\t\tif(media === undefined || media === null)\n\t\t\treturn true;\t// Default\n\t\tif(media.video === false)\n\t\t\treturn false;\t// Generic video has precedence\n\t\tif(media.videoRecv === undefined || media.videoRecv === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.videoRecv === true);\n\t}\n\n\tfunction isScreenSendEnabled(media) {\n\t\tJanus.debug(\"isScreenSendEnabled:\", media);\n\t\tif (media === undefined || media === null)\n\t\t\treturn false;\n\t\tif (typeof media.video !== 'object' || typeof media.video.mandatory !== 'object')\n\t\t\treturn false;\n\t\tvar constraints = media.video.mandatory;\n\t\tif (constraints.chromeMediaSource)\n\t\t\treturn constraints.chromeMediaSource === 'desktop' || constraints.chromeMediaSource === 'screen';\n\t\telse if (constraints.mozMediaSource)\n\t\t\treturn constraints.mozMediaSource === 'window' || constraints.mozMediaSource === 'screen';\n\t\telse if (constraints.mediaSource)\n\t\t\treturn constraints.mediaSource === 'window' || constraints.mediaSource === 'screen';\n\t\treturn false;\n\t}\n\n\tfunction isDataEnabled(media) {\n\t\tJanus.debug(\"isDataEnabled:\", media);\n\t\tif(Janus.webRTCAdapter.browserDetails.browser == \"edge\") {\n\t\t\tJanus.warn(\"Edge doesn't support data channels yet\");\n\t\t\treturn false;\n\t\t}\n\t\tif(media === undefined || media === null)\n\t\t\treturn false;\t// Default\n\t\treturn (media.data === true);\n\t}\n\n\tfunction isTrickleEnabled(trickle) {\n\t\tJanus.debug(\"isTrickleEnabled:\", trickle);\n\t\tif(trickle === undefined || trickle === null)\n\t\t\treturn true;\t// Default is true\n\t\treturn (trickle === true);\n\t}\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Janus);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/plugins/janus.js\n");

/***/ }),

/***/ "./src/plugins/janus.videoroom.js":
/*!****************************************!*\
  !*** ./src/plugins/janus.videoroom.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _janus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./janus */ \"./src/plugins/janus.js\");\n/* harmony import */ var _public_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../public/config */ \"./public/config/index.js\");\n\n\nlet instance = null\n\nclass JimberJanusVideoRoom {\n  constructor (roomName) {\n    if (instance === null) {\n      instance = this\n      instance.tmpId = 0\n      instance.roomName = roomName\n\n      // console.log('roomName: ', roomName)\n\n      for (var i = 0; i < roomName.length; i++) {\n        // console.log(roomName.charCodeAt(i))\n        instance.tmpId = instance.tmpId + roomName.charCodeAt(i)\n      }\n\n      // console.log('Room name translates to id: ' + instance.tmpId)\n\n      instance.server = null\n\n      if (window.location.protocol === 'http:') {\n        instance.server = _public_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].janus\n      } else {\n        instance.server = _public_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].janusHTTPS\n      }\n\n      instance.janus = null\n      instance.sfutest = null\n      instance.opaqueId = 'videoroomtest-' + _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomString(12)\n\n      instance.myusername = null\n      instance.myid = null\n      instance.mystream = null\n      instance.mypvtid = null\n\n      instance.feeds = []\n      instance.bitrateTimer = []\n      instance.participants = []\n\n      instance.doSimulcast = (instance.getQueryStringValue('simulcast') === 'yes' || instance.getQueryStringValue('simulcast') === 'true')\n      instance.doSimulcast2 = (instance.getQueryStringValue('simulcast2') === 'yes' || instance.getQueryStringValue('simulcast2') === 'true')\n\n      instance.init()\n    }\n\n    return instance\n  }\n\n  switchRoom (roomName) {\n    var leave = {\n      'request': 'leave',\n      'room': instance.tmpId\n    }\n\n    if (instance == null || instance.sfutest == null) {\n      instance = null\n      new JimberJanusVideoRoom(roomName)\n      return\n    }\n\n    instance.sfutest.send({\n      'message': leave,\n      error: (err) => {\n        console.error('Error: ', err)\n      },\n      success: (data) => {\n        // console.log('Successfully left room ... ', instance.tmpId)\n\n        // console.log(instance.sfutest)\n\n        instance.sfutest.detach()\n\n        instance = null\n        new JimberJanusVideoRoom(roomName)\n      }\n    })\n  }\n\n  disconnect (roomName) {\n    // console.log(instance.sfutest)\n\n    var leave = {\n      'request': 'leave',\n      'room': instance.tmpId\n    }\n\n    instance.sfutest.send({\n      'message': leave,\n      error: (err) => {\n        console.error('Error: ', err)\n      },\n      success: (data) => {\n        // console.log('success?')\n      }\n    })\n  }\n\n  connect (roomName) {\n    // console.log('Trying to join room with id ' + instance.tmpId + ' and username ' + instance.myusername)\n\n    instance = null\n    new JimberJanusVideoRoom(roomName)\n\n    // var join = {\n    //   'request': 'join',\n    //   'room': instance.tmpId,\n    //   'ptype': 'joinandconfigure',\n    //   'display': instance.myusername\n    // }\n\n    // instance.sfutest.send({\n    //   'message': join,\n    //   error: (err) => {\n    //     console.error('Error: ', err)\n    //   },\n    //   success: (data) => {\n    //     // console.log('success?')\n    //   }\n    // })\n  }\n\n  showUsers (roomName) {\n    // console.log('called')\n\n    var tmpRoomid = 0\n\n    for (var i = 0; i < roomName.length; i++) {\n      // console.log(roomName.charCodeAt(i))\n      tmpRoomid = tmpRoomid + roomName.charCodeAt(i)\n    }\n\n    instance.sfutest.send({\n      message: {\n        'request': 'list',\n        message: {\n          'audio': true,\n          'video': true\n        }\n      },\n      error: (err) => {\n        console.error('Error retrieving list of rooms: ', err)\n      },\n      success: (data) => {\n        // console.log(data.list.filter(room => room.room === tmpRoomid)[0])\n        // console.log(data.list.filter(room => room.room === tmpRoomid)[0].num_participants)\n      }\n    })\n  }\n\n  toggleMute () {\n    var muted = instance.sfutest.isAudioMuted()\n\n    if (muted) {\n      instance.sfutest.unmuteAudio()\n    } else {\n      instance.sfutest.muteAudio()\n    }\n\n    muted = instance.sfutest.isAudioMuted()\n    return muted\n  }\n\n  unpublishOwnFeed () {\n    var unpublish = { 'request': 'unpublish' }\n\n    instance.sfutest.send({\n      'message': unpublish\n    })\n  }\n\n  init () {\n    _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].init({\n      debug: 'all',\n      callback: function () {\n        instance.janus = new _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n          server: _public_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].janus,\n          success: function () {\n            // console.log('janus success')\n\n            instance.janus.attach({\n              plugin: 'janus.plugin.videoroom',\n              success: function (pluginHandle) {\n                instance.sfutest = pluginHandle\n                // Janus.log('Plugin attached! (' + instance.sfutest.getPlugin() + ', id=' + instance.sfutest.getId() + ')')\n                // Janus.log('  -- This is a publisher/manager')\n\n                // Retrieve rooms\n                instance.sfutest.send({\n                  message: {\n                    'request': 'list',\n                    message: {\n                      'audio': true,\n                      'video': true\n                    }\n                  },\n                  error: (err) => {\n                    console.error('Error retrieving list of rooms: ', err)\n                  },\n                  success: (data) => {\n                    // console.log('List of rooms: ', data.list)\n                    if (data.list.some(room => room.room === instance.tmpId)) {\n                      // console.log('ROOM EXISTS')\n\n                      var username = 'SingleCore'\n\n                      var register = {\n                        'request': 'join',\n                        'room': instance.tmpId,\n                        'ptype': 'publisher',\n                        'display': username\n                      }\n                      instance.myusername = username\n                      instance.sfutest.send({\n                        'message': register,\n                        error: (err) => {\n                          // console.log('Error joining room: ', err)\n                        },\n                        success: (data) => {\n                          // console.log('Success join room: ', data)\n                        }\n                      })\n                    } else {\n                      // console.log('ROOM DOESNT EXIST, WE NEED TO CREATE IT!')\n                      // console.log('Attempting to create: ', instance.tmpId)\n\n                      instance.sfutest.send({\n                        message: {\n                          'request': 'create',\n                          'room': instance.tmpId,\n                          'description': instance.roomName,\n                          'publishers': 100,\n                          'is_private': false\n                        },\n                        error: (err) => {\n                          // console.log('Error creating room: ', err)\n                        },\n                        success: (data) => {\n                          // console.log('Success creating room: ', data)\n\n                          var username = 'SingleCore'\n\n                          var register = {\n                            'request': 'join',\n                            'room': instance.tmpId,\n                            'ptype': 'publisher',\n                            'display': username\n                          }\n                          instance.myusername = username\n                          instance.sfutest.send({\n                            'message': register\n                          })\n                        }\n                      })\n                    }\n                  }\n                })\n              },\n              error: function (error) {\n                _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('  -- Error attaching plugin...', error)\n              },\n              consentDialog: function (on) {\n                // Janus.debug('Consent dialog should be ' + (on ? 'on' : 'off') + ' now')\n              },\n              mediaState: function (medium, on) {\n                // Janus.log('Janus ' + (on ? 'started' : 'stopped') + ' receiving our ' + medium)\n              },\n              webrtcState: function (on) {\n                // Janus.log('Janus says our WebRTC PeerConnection is ' + (on ? 'up' : 'down') + ' now')\n              },\n              onmessage: function (msg, jsep) {\n                // Janus.debug(' ::: Got a message (publisher) :::')\n                // Janus.debug(msg)\n                var event = msg['videoroom']\n                // Janus.debug('Event: ' + event)\n                if (event !== undefined && event != null) {\n                  if (event === 'joined') {\n                    // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n                    instance.myid = msg['id']\n                    instance.mypvtid = msg['private_id']\n                    // Janus.log('Successfully joined room ' + msg['room'] + ' with ID ' + instance.myid)\n                    instance.publishOwnFeed(true)\n                    // Any new feed to attach to?\n                    if (msg['publishers'] !== undefined && msg['publishers'] !== null) {\n                      var list = msg['publishers']\n                      // Janus.debug('Got a list of available publishers/feeds:')\n                      // Janus.debug(list)\n                      for (var f in list) {\n                        var id = list[f]['id']\n                        var display = list[f]['display']\n                        var audio = list[f]['audio_codec']\n                        var video = list[f]['video_codec']\n                        // Janus.debug('  >> [' + id + '] ' + display + ' (audio: ' + audio + ', video: ' + video + ')')\n                        instance.newRemoteFeed(id, display, audio, video)\n                      }\n                    }\n                  } else if (event === 'destroyed') {\n                    // The room has been destroyed\n                    _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn('The room has been destroyed!')\n                  } else if (event === 'event') {\n                    // Any new feed to attach to?\n                    if (msg['publishers'] !== undefined && msg['publishers'] !== null) {\n                      let list = msg['publishers']\n                      // Janus.debug('Got a list of available publishers/feeds:')\n                      // Janus.debug(list)\n                      for (let f in list) {\n                        let id = list[f]['id']\n                        let display = list[f]['display']\n                        let audio = list[f]['audio_codec']\n                        let video = list[f]['video_codec']\n                        // Janus.debug('  >> [' + id + '] ' + display + ' (audio: ' + audio + ', video: ' + video + ')')\n                        instance.newRemoteFeed(id, display, audio, video)\n                      }\n                    } else if (msg['leaving'] !== undefined && msg['leaving'] !== null) {\n                      // One of the publishers has gone away?\n                      var leaving = msg['leaving']\n                      // Janus.log('Publisher left: ' + leaving)\n                      var remoteFeed = null\n                      for (var i = 1; i < 6; i++) {\n                        if (instance.feeds[i] != null && instance.feeds[i] !== undefined && instance.feeds[i].rfid === leaving) {\n                          remoteFeed = instance.feeds[i]\n                          break\n                        }\n                      }\n                      if (remoteFeed != null) {\n                        // Janus.debug('Feed ' + remoteFeed.rfid + ' (' + remoteFeed.rfdisplay + ') has left the room, detaching')\n                        // $('#remote'+remoteFeed.rfindex).empty().hide();\n                        // $('#videoremote'+remoteFeed.rfindex).empty();\n                        instance.feeds[remoteFeed.rfindex] = null\n                        remoteFeed.detach()\n                      }\n                    } else if (msg['unpublished'] !== undefined && msg['unpublished'] !== null) {\n                      // One of the publishers has unpublished?\n                      var unpublished = msg['unpublished']\n                      // Janus.log('Publisher left: ' + unpublished)\n                      if (unpublished === 'ok') {\n                        // That's us\n                        instance.sfutest.hangup()\n                        return\n                      }\n                      let remoteFeed = null\n                      for (let i = 1; i < 6; i++) {\n                        if (instance.feeds[i] != null && instance.feeds[i] !== undefined && instance.feeds[i].rfid === unpublished) {\n                          remoteFeed = instance.feeds[i]\n                          break\n                        }\n                      }\n                      if (remoteFeed != null) {\n                        // Janus.debug('Feed ' + remoteFeed.rfid + ' (' + remoteFeed.rfdisplay + ') has left the room, detaching')\n                        // $('#remote'+remoteFeed.rfindex).empty().hide();\n                        // $('#videoremote'+remoteFeed.rfindex).empty();\n                        instance.feeds[remoteFeed.rfindex] = null\n                        remoteFeed.detach()\n                      }\n                    } else if (msg['error'] !== undefined && msg['error'] !== null) {}\n                  }\n                }\n                if (jsep !== undefined && jsep !== null) {\n                  // Janus.debug('Handling SDP as well...')\n                  // Janus.debug(jsep)\n                  instance.sfutest.handleRemoteJsep({\n                    jsep: jsep\n                  })\n                  // Check if any of the media we wanted to publish has\n                  // been rejected (e.g., wrong or unsupported codec)\n                  let audio = msg['audio_codec']\n                  if (instance.mystream && instance.mystream.getAudioTracks() && instance.mystream.getAudioTracks().length > 0 && !audio) {\n                    // Audio has been rejected\n                    // toastr.warning(\"Our audio stream has been rejected, viewers won't hear us\")\n                  }\n                  let video = msg['video_codec']\n                  if (instance.mystream && instance.mystream.getVideoTracks() && instance.mystream.getVideoTracks().length > 0 && !video) {\n                    // Video has been rejected\n                    // toastr.warning(\"Our video stream has been rejected, viewers won't see us\")\n                    // Hide the webcam video\n                  }\n                }\n              },\n              onlocalstream: function (stream) {\n                // Janus.debug(' ::: Got a local stream :::')\n                instance.mystream = stream\n                // Janus.debug(stream)\n\n                // var video = document.createElement('video')\n                // video.id = stream.idd\n                // video.setAttribute('autoplay', 'true')\n                // document.getElementById('videos').prepend(video)\n                // Janus.attachMediaStream(video, stream)\n\n                var video\n\n                if (document.getElementById('feed0') === null) {\n                  video = document.createElement('video')\n                  video.id = 'feed0'\n                  video.setAttribute('autoplay', 'true')\n                  document.getElementById('videos').appendChild(video)\n                } else {\n                  video = document.getElementById('feed0')\n                  video.setAttribute('autoplay', 'true')\n                }\n\n                _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].attachMediaStream(video, stream)\n\n                if (instance.sfutest.webrtcStuff.pc.iceConnectionState !== 'completed' &&\n                instance.sfutest.webrtcStuff.pc.iceConnectionState !== 'connected') {}\n              },\n              onremotestream: function (stream) {\n                // The publisher stream is sendonly, we don't expect anything here\n              },\n              oncleanup: function () {\n                // Janus.log(' ::: Got a cleanup notification: we are unpublished now :::')\n                instance.mystream = null\n                // document.getElementById('participant1').srcObject = null\n                // console.log('Cleaning old video object ... ')\n                // $('#videolocal').html('<button id=\"publish\" class=\"btn btn-primary\">Publish</button>');\n                // $('#publish').click(function() { publishOwnFeed(true); });\n                // $(\"#videolocal\").parent().parent().unblock();\n                // $('#bitrate').parent().parent().addClass('hide');\n                // $('#bitrate a').unbind('click');\n              }\n            })\n          },\n          error: function (error) {\n            // console.log('janus Error')\n            // console.log(error)\n          },\n          destroyed: function () {\n            // console.log('janus destroyed')\n          }\n        })\n      }\n    })\n  }\n\n  publishOwnFeed (useAudio) {\n    instance.sfutest.createOffer({\n      media: {\n        audioRecv: false,\n        videoRecv: false,\n        audioSend: useAudio,\n        videoSend: true\n      }, // Publishers are sendonly\n      simulcast: instance.doSimulcast,\n      simulcast2: instance.doSimulcast2,\n      success: function (jsep) {\n        // Janus.debug('Got publisher SDP!')\n        // Janus.debug(jsep)\n\n        var publish = {\n          'request': 'configure',\n          'audio': useAudio,\n          'video': true\n        }\n\n        instance.sfutest.send({\n          'message': publish,\n          'jsep': jsep\n        })\n      },\n      error: function (error) {\n        _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('WebRTC error:', error)\n        if (useAudio) {\n          instance.publishOwnFeed(false)\n        }\n      }\n    })\n  }\n\n  newRemoteFeed (id, display, audio, video) {\n    var remoteFeed = null\n    instance.janus.attach({\n      plugin: 'janus.plugin.videoroom',\n      // opaqueId: instance.opaqueId,\n      success: function (pluginHandle) {\n        remoteFeed = pluginHandle\n        remoteFeed.simulcastStarted = false\n        // Janus.log('Plugin attached! (' + remoteFeed.getPlugin() + ', id=' + remoteFeed.getId() + ')')\n        // Janus.log('  -- This is a subscriber')\n        // We wait for the plugin to send us an offer\n        var subscribe = {\n          'request': 'join',\n          'room': instance.tmpId,\n          'ptype': 'subscriber',\n          'feed': id,\n          'private_id': instance.mypvtid\n        }\n        if (_janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].webRTCAdapter.browserDetails.browser === 'safari' &&\n          (video === 'vp9' || (video === 'vp8' && !_janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].safariVp8))) {\n          if (video) {\n            video = video.toUpperCase()\n          }\n          subscribe['offer_video'] = false\n        }\n        remoteFeed.videoCodec = video\n        remoteFeed.send({\n          'message': subscribe\n        })\n      },\n      error: function (error) {\n        _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('  -- Error attaching plugin...', error)\n      },\n      onmessage: function (msg, jsep) {\n        // Janus.debug(' ::: Got a message (subscriber) :::')\n        // Janus.debug(msg)\n        var event = msg['videoroom']\n        // Janus.debug('Event: ' + event)\n        if (msg['error'] !== undefined && msg['error'] !== null) {\n          // bootbox.alert(msg['error'])\n        } else if (event !== undefined && event != null) {\n          if (event === 'attached') {\n            // Subscriber created and attached\n            for (var i = 1; i < 6; i++) {\n              if (instance.feeds[i] === undefined || instance.feeds[i] === null) {\n                instance.feeds[i] = remoteFeed\n                remoteFeed.rfindex = i\n                break\n              }\n            }\n            remoteFeed.rfid = msg['id']\n            remoteFeed.rfdisplay = msg['display']\n            // Janus.log('Successfully attached to feed ' + remoteFeed.rfid + ' (' + remoteFeed.rfdisplay + ') in room ' + msg['room'])\n          } else if (event === 'event') {\n            // Check if we got an event on a simulcast-related event from this publisher\n            var substream = msg['substream']\n            var temporal = msg['temporal']\n            if ((substream !== null && substream !== undefined) || (temporal !== null && temporal !== undefined)) {\n              if (!remoteFeed.simulcastStarted) {\n                remoteFeed.simulcastStarted = true\n              }\n            }\n          } else {\n            // What has just happened?\n          }\n        }\n        if (jsep !== undefined && jsep !== null) {\n          // Janus.debug('Handling SDP as well...')\n          // Janus.debug(jsep)\n          // Answer and attach\n          remoteFeed.createAnswer({\n            jsep: jsep,\n            // Add data:true here if you want to subscribe to datachannels as well\n            // (obviously only works if the publisher offered them in the first place)\n            media: {\n              audioSend: false,\n              videoSend: false\n            }, // We want recvonly audio/video\n            success: function (jsep) {\n              // Janus.debug('Got SDP!')\n              // Janus.debug(jsep)\n              var body = {\n                'request': 'start',\n                'room': instance.tmpId\n              }\n              remoteFeed.send({\n                'message': body,\n                'jsep': jsep\n              })\n            },\n            error: function (error) {\n              _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('WebRTC error:', error)\n              // bootbox.alert(\"WebRTC error... \" + JSON.stringify(error));\n            }\n          })\n        }\n      },\n      webrtcState: function (on) {\n        // Janus.log('Janus says this WebRTC PeerConnection (feed #' + remoteFeed.rfindex + ') is ' + (on ? 'up' : 'down') + ' now')\n      },\n      onlocalstream: function (stream) {\n        // The subscriber stream is recvonly, we don't expect anything here\n      },\n      onremotestream: function (stream) {\n        // Janus.debug('Remote feed #' + remoteFeed.rfindex)\n        // console.log('Remote feed #' + remoteFeed.rfindex)\n        console.log('Incomming onremotestream !!!! !!!!')\n        console.log(stream)\n        console.log(remoteFeed)\n        // console.log('@@@ Attaching media stream ... ', stream)\n        // console.log('streamstreamstreamstreamstreamstreamstreamstreamstream')\n        // console.log(stream)\n\n        var video\n\n        if (document.getElementById('feed' + remoteFeed.rfindex) === null) {\n          console.log('Attaching remoteFeed.id : ' + remoteFeed.id + '.')\n          video = document.createElement('video')\n          video.id = 'feed' + remoteFeed.rfindex\n          video.setAttribute('autoplay', 'true')\n          document.getElementById('videos').appendChild(video)\n        } else {\n          console.log('feed.id : ' + remoteFeed.id + ' has already been attached.')\n          video = document.getElementById('feed' + remoteFeed.rfindex)\n          video.setAttribute('autoplay', 'true')\n        }\n\n        _janus__WEBPACK_IMPORTED_MODULE_0__[\"default\"].attachMediaStream(video, stream)\n        // let participant = document.getElementById('participant1')\n        // participant.removeAttribute('hidden')\n        // Janus.attachMediaStream(participant, stream)\n        // console.log('Atteching media stream onremotestream .... ')\n        // console.log(stream.id, remoteFeed.rfindex)\n      },\n      oncleanup: function () {\n        // Janus.log(' ::: Got a cleanup notification (remote feed ' + id + ') :::')\n\n        console.log(remoteFeed)\n        document.getElementById('feed' + remoteFeed.rfindex).srcObject = null\n        remoteFeed.mystream = null\n        // mystream = null;\n        // document.getElementById('participant1').srcObject = null\n\n        // instance.participants.filter(participant => participant.id === id).srcObject = null\n\n        if (instance.bitrateTimer[remoteFeed.rfindex] !== null && instance.bitrateTimer[remoteFeed.rfindex] !== null) {\n          clearInterval(instance.bitrateTimer[remoteFeed.rfindex])\n        }\n        instance.bitrateTimer[remoteFeed.rfindex] = null\n        remoteFeed.simulcastStarted = false\n      }\n    })\n  }\n\n  getQueryStringValue (name) {\n    name = name.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]')\n\n    var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)')\n    var results = regex.exec(location.search)\n\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '))\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (JimberJanusVideoRoom);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGx1Z2lucy9qYW51cy52aWRlb3Jvb20uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGx1Z2lucy9qYW51cy52aWRlb3Jvb20uanM/YmFjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSmFudXMgZnJvbSAnLi9qYW51cydcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vLi4vcHVibGljL2NvbmZpZydcbmxldCBpbnN0YW5jZSA9IG51bGxcblxuY2xhc3MgSmltYmVySmFudXNWaWRlb1Jvb20ge1xuICBjb25zdHJ1Y3RvciAocm9vbU5hbWUpIHtcbiAgICBpZiAoaW5zdGFuY2UgPT09IG51bGwpIHtcbiAgICAgIGluc3RhbmNlID0gdGhpc1xuICAgICAgaW5zdGFuY2UudG1wSWQgPSAwXG4gICAgICBpbnN0YW5jZS5yb29tTmFtZSA9IHJvb21OYW1lXG5cbiAgICAgIC8vIGNvbnNvbGUubG9nKCdyb29tTmFtZTogJywgcm9vbU5hbWUpXG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcm9vbU5hbWUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2cocm9vbU5hbWUuY2hhckNvZGVBdChpKSlcbiAgICAgICAgaW5zdGFuY2UudG1wSWQgPSBpbnN0YW5jZS50bXBJZCArIHJvb21OYW1lLmNoYXJDb2RlQXQoaSlcbiAgICAgIH1cblxuICAgICAgLy8gY29uc29sZS5sb2coJ1Jvb20gbmFtZSB0cmFuc2xhdGVzIHRvIGlkOiAnICsgaW5zdGFuY2UudG1wSWQpXG5cbiAgICAgIGluc3RhbmNlLnNlcnZlciA9IG51bGxcblxuICAgICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCA9PT0gJ2h0dHA6Jykge1xuICAgICAgICBpbnN0YW5jZS5zZXJ2ZXIgPSBjb25maWcuamFudXNcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGluc3RhbmNlLnNlcnZlciA9IGNvbmZpZy5qYW51c0hUVFBTXG4gICAgICB9XG5cbiAgICAgIGluc3RhbmNlLmphbnVzID0gbnVsbFxuICAgICAgaW5zdGFuY2Uuc2Z1dGVzdCA9IG51bGxcbiAgICAgIGluc3RhbmNlLm9wYXF1ZUlkID0gJ3ZpZGVvcm9vbXRlc3QtJyArIEphbnVzLnJhbmRvbVN0cmluZygxMilcblxuICAgICAgaW5zdGFuY2UubXl1c2VybmFtZSA9IG51bGxcbiAgICAgIGluc3RhbmNlLm15aWQgPSBudWxsXG4gICAgICBpbnN0YW5jZS5teXN0cmVhbSA9IG51bGxcbiAgICAgIGluc3RhbmNlLm15cHZ0aWQgPSBudWxsXG5cbiAgICAgIGluc3RhbmNlLmZlZWRzID0gW11cbiAgICAgIGluc3RhbmNlLmJpdHJhdGVUaW1lciA9IFtdXG4gICAgICBpbnN0YW5jZS5wYXJ0aWNpcGFudHMgPSBbXVxuXG4gICAgICBpbnN0YW5jZS5kb1NpbXVsY2FzdCA9IChpbnN0YW5jZS5nZXRRdWVyeVN0cmluZ1ZhbHVlKCdzaW11bGNhc3QnKSA9PT0gJ3llcycgfHwgaW5zdGFuY2UuZ2V0UXVlcnlTdHJpbmdWYWx1ZSgnc2ltdWxjYXN0JykgPT09ICd0cnVlJylcbiAgICAgIGluc3RhbmNlLmRvU2ltdWxjYXN0MiA9IChpbnN0YW5jZS5nZXRRdWVyeVN0cmluZ1ZhbHVlKCdzaW11bGNhc3QyJykgPT09ICd5ZXMnIHx8IGluc3RhbmNlLmdldFF1ZXJ5U3RyaW5nVmFsdWUoJ3NpbXVsY2FzdDInKSA9PT0gJ3RydWUnKVxuXG4gICAgICBpbnN0YW5jZS5pbml0KClcbiAgICB9XG5cbiAgICByZXR1cm4gaW5zdGFuY2VcbiAgfVxuXG4gIHN3aXRjaFJvb20gKHJvb21OYW1lKSB7XG4gICAgdmFyIGxlYXZlID0ge1xuICAgICAgJ3JlcXVlc3QnOiAnbGVhdmUnLFxuICAgICAgJ3Jvb20nOiBpbnN0YW5jZS50bXBJZFxuICAgIH1cblxuICAgIGlmIChpbnN0YW5jZSA9PSBudWxsIHx8IGluc3RhbmNlLnNmdXRlc3QgPT0gbnVsbCkge1xuICAgICAgaW5zdGFuY2UgPSBudWxsXG4gICAgICBuZXcgSmltYmVySmFudXNWaWRlb1Jvb20ocm9vbU5hbWUpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpbnN0YW5jZS5zZnV0ZXN0LnNlbmQoe1xuICAgICAgJ21lc3NhZ2UnOiBsZWF2ZSxcbiAgICAgIGVycm9yOiAoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yOiAnLCBlcnIpXG4gICAgICB9LFxuICAgICAgc3VjY2VzczogKGRhdGEpID0+IHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ1N1Y2Nlc3NmdWxseSBsZWZ0IHJvb20gLi4uICcsIGluc3RhbmNlLnRtcElkKVxuXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGluc3RhbmNlLnNmdXRlc3QpXG5cbiAgICAgICAgaW5zdGFuY2Uuc2Z1dGVzdC5kZXRhY2goKVxuXG4gICAgICAgIGluc3RhbmNlID0gbnVsbFxuICAgICAgICBuZXcgSmltYmVySmFudXNWaWRlb1Jvb20ocm9vbU5hbWUpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIGRpc2Nvbm5lY3QgKHJvb21OYW1lKSB7XG4gICAgLy8gY29uc29sZS5sb2coaW5zdGFuY2Uuc2Z1dGVzdClcblxuICAgIHZhciBsZWF2ZSA9IHtcbiAgICAgICdyZXF1ZXN0JzogJ2xlYXZlJyxcbiAgICAgICdyb29tJzogaW5zdGFuY2UudG1wSWRcbiAgICB9XG5cbiAgICBpbnN0YW5jZS5zZnV0ZXN0LnNlbmQoe1xuICAgICAgJ21lc3NhZ2UnOiBsZWF2ZSxcbiAgICAgIGVycm9yOiAoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yOiAnLCBlcnIpXG4gICAgICB9LFxuICAgICAgc3VjY2VzczogKGRhdGEpID0+IHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3N1Y2Nlc3M/JylcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgY29ubmVjdCAocm9vbU5hbWUpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnVHJ5aW5nIHRvIGpvaW4gcm9vbSB3aXRoIGlkICcgKyBpbnN0YW5jZS50bXBJZCArICcgYW5kIHVzZXJuYW1lICcgKyBpbnN0YW5jZS5teXVzZXJuYW1lKVxuXG4gICAgaW5zdGFuY2UgPSBudWxsXG4gICAgbmV3IEppbWJlckphbnVzVmlkZW9Sb29tKHJvb21OYW1lKVxuXG4gICAgLy8gdmFyIGpvaW4gPSB7XG4gICAgLy8gICAncmVxdWVzdCc6ICdqb2luJyxcbiAgICAvLyAgICdyb29tJzogaW5zdGFuY2UudG1wSWQsXG4gICAgLy8gICAncHR5cGUnOiAnam9pbmFuZGNvbmZpZ3VyZScsXG4gICAgLy8gICAnZGlzcGxheSc6IGluc3RhbmNlLm15dXNlcm5hbWVcbiAgICAvLyB9XG5cbiAgICAvLyBpbnN0YW5jZS5zZnV0ZXN0LnNlbmQoe1xuICAgIC8vICAgJ21lc3NhZ2UnOiBqb2luLFxuICAgIC8vICAgZXJyb3I6IChlcnIpID0+IHtcbiAgICAvLyAgICAgY29uc29sZS5lcnJvcignRXJyb3I6ICcsIGVycilcbiAgICAvLyAgIH0sXG4gICAgLy8gICBzdWNjZXNzOiAoZGF0YSkgPT4ge1xuICAgIC8vICAgICAvLyBjb25zb2xlLmxvZygnc3VjY2Vzcz8nKVxuICAgIC8vICAgfVxuICAgIC8vIH0pXG4gIH1cblxuICBzaG93VXNlcnMgKHJvb21OYW1lKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ2NhbGxlZCcpXG5cbiAgICB2YXIgdG1wUm9vbWlkID0gMFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCByb29tTmFtZS5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gY29uc29sZS5sb2cocm9vbU5hbWUuY2hhckNvZGVBdChpKSlcbiAgICAgIHRtcFJvb21pZCA9IHRtcFJvb21pZCArIHJvb21OYW1lLmNoYXJDb2RlQXQoaSlcbiAgICB9XG5cbiAgICBpbnN0YW5jZS5zZnV0ZXN0LnNlbmQoe1xuICAgICAgbWVzc2FnZToge1xuICAgICAgICAncmVxdWVzdCc6ICdsaXN0JyxcbiAgICAgICAgbWVzc2FnZToge1xuICAgICAgICAgICdhdWRpbyc6IHRydWUsXG4gICAgICAgICAgJ3ZpZGVvJzogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZXJyb3I6IChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmV0cmlldmluZyBsaXN0IG9mIHJvb21zOiAnLCBlcnIpXG4gICAgICB9LFxuICAgICAgc3VjY2VzczogKGRhdGEpID0+IHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YS5saXN0LmZpbHRlcihyb29tID0+IHJvb20ucm9vbSA9PT0gdG1wUm9vbWlkKVswXSlcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YS5saXN0LmZpbHRlcihyb29tID0+IHJvb20ucm9vbSA9PT0gdG1wUm9vbWlkKVswXS5udW1fcGFydGljaXBhbnRzKVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICB0b2dnbGVNdXRlICgpIHtcbiAgICB2YXIgbXV0ZWQgPSBpbnN0YW5jZS5zZnV0ZXN0LmlzQXVkaW9NdXRlZCgpXG5cbiAgICBpZiAobXV0ZWQpIHtcbiAgICAgIGluc3RhbmNlLnNmdXRlc3QudW5tdXRlQXVkaW8oKVxuICAgIH0gZWxzZSB7XG4gICAgICBpbnN0YW5jZS5zZnV0ZXN0Lm11dGVBdWRpbygpXG4gICAgfVxuXG4gICAgbXV0ZWQgPSBpbnN0YW5jZS5zZnV0ZXN0LmlzQXVkaW9NdXRlZCgpXG4gICAgcmV0dXJuIG11dGVkXG4gIH1cblxuICB1bnB1Ymxpc2hPd25GZWVkICgpIHtcbiAgICB2YXIgdW5wdWJsaXNoID0geyAncmVxdWVzdCc6ICd1bnB1Ymxpc2gnIH1cblxuICAgIGluc3RhbmNlLnNmdXRlc3Quc2VuZCh7XG4gICAgICAnbWVzc2FnZSc6IHVucHVibGlzaFxuICAgIH0pXG4gIH1cblxuICBpbml0ICgpIHtcbiAgICBKYW51cy5pbml0KHtcbiAgICAgIGRlYnVnOiAnYWxsJyxcbiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGluc3RhbmNlLmphbnVzID0gbmV3IEphbnVzKHtcbiAgICAgICAgICBzZXJ2ZXI6IGNvbmZpZy5qYW51cyxcbiAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnamFudXMgc3VjY2VzcycpXG5cbiAgICAgICAgICAgIGluc3RhbmNlLmphbnVzLmF0dGFjaCh7XG4gICAgICAgICAgICAgIHBsdWdpbjogJ2phbnVzLnBsdWdpbi52aWRlb3Jvb20nLFxuICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocGx1Z2luSGFuZGxlKSB7XG4gICAgICAgICAgICAgICAgaW5zdGFuY2Uuc2Z1dGVzdCA9IHBsdWdpbkhhbmRsZVxuICAgICAgICAgICAgICAgIC8vIEphbnVzLmxvZygnUGx1Z2luIGF0dGFjaGVkISAoJyArIGluc3RhbmNlLnNmdXRlc3QuZ2V0UGx1Z2luKCkgKyAnLCBpZD0nICsgaW5zdGFuY2Uuc2Z1dGVzdC5nZXRJZCgpICsgJyknKVxuICAgICAgICAgICAgICAgIC8vIEphbnVzLmxvZygnICAtLSBUaGlzIGlzIGEgcHVibGlzaGVyL21hbmFnZXInKVxuXG4gICAgICAgICAgICAgICAgLy8gUmV0cmlldmUgcm9vbXNcbiAgICAgICAgICAgICAgICBpbnN0YW5jZS5zZnV0ZXN0LnNlbmQoe1xuICAgICAgICAgICAgICAgICAgbWVzc2FnZToge1xuICAgICAgICAgICAgICAgICAgICAncmVxdWVzdCc6ICdsaXN0JyxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZToge1xuICAgICAgICAgICAgICAgICAgICAgICdhdWRpbyc6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgJ3ZpZGVvJzogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgZXJyb3I6IChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmV0cmlldmluZyBsaXN0IG9mIHJvb21zOiAnLCBlcnIpXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgc3VjY2VzczogKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ0xpc3Qgb2Ygcm9vbXM6ICcsIGRhdGEubGlzdClcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGlzdC5zb21lKHJvb20gPT4gcm9vbS5yb29tID09PSBpbnN0YW5jZS50bXBJZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnUk9PTSBFWElTVFMnKVxuXG4gICAgICAgICAgICAgICAgICAgICAgdmFyIHVzZXJuYW1lID0gJ1NpbmdsZUNvcmUnXG5cbiAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVnaXN0ZXIgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAncmVxdWVzdCc6ICdqb2luJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdyb29tJzogaW5zdGFuY2UudG1wSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAncHR5cGUnOiAncHVibGlzaGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdkaXNwbGF5JzogdXNlcm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2UubXl1c2VybmFtZSA9IHVzZXJuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2Uuc2Z1dGVzdC5zZW5kKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdtZXNzYWdlJzogcmVnaXN0ZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnRXJyb3Igam9pbmluZyByb29tOiAnLCBlcnIpXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ1N1Y2Nlc3Mgam9pbiByb29tOiAnLCBkYXRhKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ1JPT00gRE9FU05UIEVYSVNULCBXRSBORUVEIFRPIENSRUFURSBJVCEnKVxuICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdBdHRlbXB0aW5nIHRvIGNyZWF0ZTogJywgaW5zdGFuY2UudG1wSWQpXG5cbiAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5zZnV0ZXN0LnNlbmQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAncmVxdWVzdCc6ICdjcmVhdGUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAncm9vbSc6IGluc3RhbmNlLnRtcElkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAnZGVzY3JpcHRpb24nOiBpbnN0YW5jZS5yb29tTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3B1Ymxpc2hlcnMnOiAxMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdpc19wcml2YXRlJzogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnRXJyb3IgY3JlYXRpbmcgcm9vbTogJywgZXJyKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdTdWNjZXNzIGNyZWF0aW5nIHJvb206ICcsIGRhdGEpXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVzZXJuYW1lID0gJ1NpbmdsZUNvcmUnXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlZ2lzdGVyID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdyZXF1ZXN0JzogJ2pvaW4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdyb29tJzogaW5zdGFuY2UudG1wSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3B0eXBlJzogJ3B1Ymxpc2hlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc3BsYXknOiB1c2VybmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlLm15dXNlcm5hbWUgPSB1c2VybmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5zZnV0ZXN0LnNlbmQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdtZXNzYWdlJzogcmVnaXN0ZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICAgIEphbnVzLmVycm9yKCcgIC0tIEVycm9yIGF0dGFjaGluZyBwbHVnaW4uLi4nLCBlcnJvcilcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgY29uc2VudERpYWxvZzogZnVuY3Rpb24gKG9uKSB7XG4gICAgICAgICAgICAgICAgLy8gSmFudXMuZGVidWcoJ0NvbnNlbnQgZGlhbG9nIHNob3VsZCBiZSAnICsgKG9uID8gJ29uJyA6ICdvZmYnKSArICcgbm93JylcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgbWVkaWFTdGF0ZTogZnVuY3Rpb24gKG1lZGl1bSwgb24pIHtcbiAgICAgICAgICAgICAgICAvLyBKYW51cy5sb2coJ0phbnVzICcgKyAob24gPyAnc3RhcnRlZCcgOiAnc3RvcHBlZCcpICsgJyByZWNlaXZpbmcgb3VyICcgKyBtZWRpdW0pXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHdlYnJ0Y1N0YXRlOiBmdW5jdGlvbiAob24pIHtcbiAgICAgICAgICAgICAgICAvLyBKYW51cy5sb2coJ0phbnVzIHNheXMgb3VyIFdlYlJUQyBQZWVyQ29ubmVjdGlvbiBpcyAnICsgKG9uID8gJ3VwJyA6ICdkb3duJykgKyAnIG5vdycpXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIG9ubWVzc2FnZTogZnVuY3Rpb24gKG1zZywganNlcCkge1xuICAgICAgICAgICAgICAgIC8vIEphbnVzLmRlYnVnKCcgOjo6IEdvdCBhIG1lc3NhZ2UgKHB1Ymxpc2hlcikgOjo6JylcbiAgICAgICAgICAgICAgICAvLyBKYW51cy5kZWJ1Zyhtc2cpXG4gICAgICAgICAgICAgICAgdmFyIGV2ZW50ID0gbXNnWyd2aWRlb3Jvb20nXVxuICAgICAgICAgICAgICAgIC8vIEphbnVzLmRlYnVnKCdFdmVudDogJyArIGV2ZW50KVxuICAgICAgICAgICAgICAgIGlmIChldmVudCAhPT0gdW5kZWZpbmVkICYmIGV2ZW50ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgIGlmIChldmVudCA9PT0gJ2pvaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gUHVibGlzaGVyL21hbmFnZXIgY3JlYXRlZCwgbmVnb3RpYXRlIFdlYlJUQyBhbmQgYXR0YWNoIHRvIGV4aXN0aW5nIGZlZWRzLCBpZiBhbnlcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2UubXlpZCA9IG1zZ1snaWQnXVxuICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5teXB2dGlkID0gbXNnWydwcml2YXRlX2lkJ11cbiAgICAgICAgICAgICAgICAgICAgLy8gSmFudXMubG9nKCdTdWNjZXNzZnVsbHkgam9pbmVkIHJvb20gJyArIG1zZ1sncm9vbSddICsgJyB3aXRoIElEICcgKyBpbnN0YW5jZS5teWlkKVxuICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5wdWJsaXNoT3duRmVlZCh0cnVlKVxuICAgICAgICAgICAgICAgICAgICAvLyBBbnkgbmV3IGZlZWQgdG8gYXR0YWNoIHRvP1xuICAgICAgICAgICAgICAgICAgICBpZiAobXNnWydwdWJsaXNoZXJzJ10gIT09IHVuZGVmaW5lZCAmJiBtc2dbJ3B1Ymxpc2hlcnMnXSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgIHZhciBsaXN0ID0gbXNnWydwdWJsaXNoZXJzJ11cbiAgICAgICAgICAgICAgICAgICAgICAvLyBKYW51cy5kZWJ1ZygnR290IGEgbGlzdCBvZiBhdmFpbGFibGUgcHVibGlzaGVycy9mZWVkczonKVxuICAgICAgICAgICAgICAgICAgICAgIC8vIEphbnVzLmRlYnVnKGxpc3QpXG4gICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgZiBpbiBsaXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaWQgPSBsaXN0W2ZdWydpZCddXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGlzcGxheSA9IGxpc3RbZl1bJ2Rpc3BsYXknXVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGF1ZGlvID0gbGlzdFtmXVsnYXVkaW9fY29kZWMnXVxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZpZGVvID0gbGlzdFtmXVsndmlkZW9fY29kZWMnXVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gSmFudXMuZGVidWcoJyAgPj4gWycgKyBpZCArICddICcgKyBkaXNwbGF5ICsgJyAoYXVkaW86ICcgKyBhdWRpbyArICcsIHZpZGVvOiAnICsgdmlkZW8gKyAnKScpXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5uZXdSZW1vdGVGZWVkKGlkLCBkaXNwbGF5LCBhdWRpbywgdmlkZW8pXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGV2ZW50ID09PSAnZGVzdHJveWVkJykge1xuICAgICAgICAgICAgICAgICAgICAvLyBUaGUgcm9vbSBoYXMgYmVlbiBkZXN0cm95ZWRcbiAgICAgICAgICAgICAgICAgICAgSmFudXMud2FybignVGhlIHJvb20gaGFzIGJlZW4gZGVzdHJveWVkIScpXG4gICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGV2ZW50ID09PSAnZXZlbnQnKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEFueSBuZXcgZmVlZCB0byBhdHRhY2ggdG8/XG4gICAgICAgICAgICAgICAgICAgIGlmIChtc2dbJ3B1Ymxpc2hlcnMnXSAhPT0gdW5kZWZpbmVkICYmIG1zZ1sncHVibGlzaGVycyddICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgbGV0IGxpc3QgPSBtc2dbJ3B1Ymxpc2hlcnMnXVxuICAgICAgICAgICAgICAgICAgICAgIC8vIEphbnVzLmRlYnVnKCdHb3QgYSBsaXN0IG9mIGF2YWlsYWJsZSBwdWJsaXNoZXJzL2ZlZWRzOicpXG4gICAgICAgICAgICAgICAgICAgICAgLy8gSmFudXMuZGVidWcobGlzdClcbiAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBmIGluIGxpc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBpZCA9IGxpc3RbZl1bJ2lkJ11cbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkaXNwbGF5ID0gbGlzdFtmXVsnZGlzcGxheSddXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgYXVkaW8gPSBsaXN0W2ZdWydhdWRpb19jb2RlYyddXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgdmlkZW8gPSBsaXN0W2ZdWyd2aWRlb19jb2RlYyddXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBKYW51cy5kZWJ1ZygnICA+PiBbJyArIGlkICsgJ10gJyArIGRpc3BsYXkgKyAnIChhdWRpbzogJyArIGF1ZGlvICsgJywgdmlkZW86ICcgKyB2aWRlbyArICcpJylcbiAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlLm5ld1JlbW90ZUZlZWQoaWQsIGRpc3BsYXksIGF1ZGlvLCB2aWRlbylcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobXNnWydsZWF2aW5nJ10gIT09IHVuZGVmaW5lZCAmJiBtc2dbJ2xlYXZpbmcnXSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgIC8vIE9uZSBvZiB0aGUgcHVibGlzaGVycyBoYXMgZ29uZSBhd2F5P1xuICAgICAgICAgICAgICAgICAgICAgIHZhciBsZWF2aW5nID0gbXNnWydsZWF2aW5nJ11cbiAgICAgICAgICAgICAgICAgICAgICAvLyBKYW51cy5sb2coJ1B1Ymxpc2hlciBsZWZ0OiAnICsgbGVhdmluZylcbiAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVtb3RlRmVlZCA9IG51bGxcbiAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IDY7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluc3RhbmNlLmZlZWRzW2ldICE9IG51bGwgJiYgaW5zdGFuY2UuZmVlZHNbaV0gIT09IHVuZGVmaW5lZCAmJiBpbnN0YW5jZS5mZWVkc1tpXS5yZmlkID09PSBsZWF2aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW90ZUZlZWQgPSBpbnN0YW5jZS5mZWVkc1tpXVxuICAgICAgICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICBpZiAocmVtb3RlRmVlZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBKYW51cy5kZWJ1ZygnRmVlZCAnICsgcmVtb3RlRmVlZC5yZmlkICsgJyAoJyArIHJlbW90ZUZlZWQucmZkaXNwbGF5ICsgJykgaGFzIGxlZnQgdGhlIHJvb20sIGRldGFjaGluZycpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAkKCcjcmVtb3RlJytyZW1vdGVGZWVkLnJmaW5kZXgpLmVtcHR5KCkuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gJCgnI3ZpZGVvcmVtb3RlJytyZW1vdGVGZWVkLnJmaW5kZXgpLmVtcHR5KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5mZWVkc1tyZW1vdGVGZWVkLnJmaW5kZXhdID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlRmVlZC5kZXRhY2goKVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChtc2dbJ3VucHVibGlzaGVkJ10gIT09IHVuZGVmaW5lZCAmJiBtc2dbJ3VucHVibGlzaGVkJ10gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAvLyBPbmUgb2YgdGhlIHB1Ymxpc2hlcnMgaGFzIHVucHVibGlzaGVkP1xuICAgICAgICAgICAgICAgICAgICAgIHZhciB1bnB1Ymxpc2hlZCA9IG1zZ1sndW5wdWJsaXNoZWQnXVxuICAgICAgICAgICAgICAgICAgICAgIC8vIEphbnVzLmxvZygnUHVibGlzaGVyIGxlZnQ6ICcgKyB1bnB1Ymxpc2hlZClcbiAgICAgICAgICAgICAgICAgICAgICBpZiAodW5wdWJsaXNoZWQgPT09ICdvaycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRoYXQncyB1c1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2Uuc2Z1dGVzdC5oYW5ndXAoKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIGxldCByZW1vdGVGZWVkID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgNjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5zdGFuY2UuZmVlZHNbaV0gIT0gbnVsbCAmJiBpbnN0YW5jZS5mZWVkc1tpXSAhPT0gdW5kZWZpbmVkICYmIGluc3RhbmNlLmZlZWRzW2ldLnJmaWQgPT09IHVucHVibGlzaGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlbW90ZUZlZWQgPSBpbnN0YW5jZS5mZWVkc1tpXVxuICAgICAgICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICBpZiAocmVtb3RlRmVlZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBKYW51cy5kZWJ1ZygnRmVlZCAnICsgcmVtb3RlRmVlZC5yZmlkICsgJyAoJyArIHJlbW90ZUZlZWQucmZkaXNwbGF5ICsgJykgaGFzIGxlZnQgdGhlIHJvb20sIGRldGFjaGluZycpXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAkKCcjcmVtb3RlJytyZW1vdGVGZWVkLnJmaW5kZXgpLmVtcHR5KCkuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gJCgnI3ZpZGVvcmVtb3RlJytyZW1vdGVGZWVkLnJmaW5kZXgpLmVtcHR5KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5mZWVkc1tyZW1vdGVGZWVkLnJmaW5kZXhdID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3RlRmVlZC5kZXRhY2goKVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChtc2dbJ2Vycm9yJ10gIT09IHVuZGVmaW5lZCAmJiBtc2dbJ2Vycm9yJ10gIT09IG51bGwpIHt9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChqc2VwICE9PSB1bmRlZmluZWQgJiYganNlcCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgLy8gSmFudXMuZGVidWcoJ0hhbmRsaW5nIFNEUCBhcyB3ZWxsLi4uJylcbiAgICAgICAgICAgICAgICAgIC8vIEphbnVzLmRlYnVnKGpzZXApXG4gICAgICAgICAgICAgICAgICBpbnN0YW5jZS5zZnV0ZXN0LmhhbmRsZVJlbW90ZUpzZXAoe1xuICAgICAgICAgICAgICAgICAgICBqc2VwOiBqc2VwXG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgYW55IG9mIHRoZSBtZWRpYSB3ZSB3YW50ZWQgdG8gcHVibGlzaCBoYXNcbiAgICAgICAgICAgICAgICAgIC8vIGJlZW4gcmVqZWN0ZWQgKGUuZy4sIHdyb25nIG9yIHVuc3VwcG9ydGVkIGNvZGVjKVxuICAgICAgICAgICAgICAgICAgbGV0IGF1ZGlvID0gbXNnWydhdWRpb19jb2RlYyddXG4gICAgICAgICAgICAgICAgICBpZiAoaW5zdGFuY2UubXlzdHJlYW0gJiYgaW5zdGFuY2UubXlzdHJlYW0uZ2V0QXVkaW9UcmFja3MoKSAmJiBpbnN0YW5jZS5teXN0cmVhbS5nZXRBdWRpb1RyYWNrcygpLmxlbmd0aCA+IDAgJiYgIWF1ZGlvKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEF1ZGlvIGhhcyBiZWVuIHJlamVjdGVkXG4gICAgICAgICAgICAgICAgICAgIC8vIHRvYXN0ci53YXJuaW5nKFwiT3VyIGF1ZGlvIHN0cmVhbSBoYXMgYmVlbiByZWplY3RlZCwgdmlld2VycyB3b24ndCBoZWFyIHVzXCIpXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBsZXQgdmlkZW8gPSBtc2dbJ3ZpZGVvX2NvZGVjJ11cbiAgICAgICAgICAgICAgICAgIGlmIChpbnN0YW5jZS5teXN0cmVhbSAmJiBpbnN0YW5jZS5teXN0cmVhbS5nZXRWaWRlb1RyYWNrcygpICYmIGluc3RhbmNlLm15c3RyZWFtLmdldFZpZGVvVHJhY2tzKCkubGVuZ3RoID4gMCAmJiAhdmlkZW8pIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVmlkZW8gaGFzIGJlZW4gcmVqZWN0ZWRcbiAgICAgICAgICAgICAgICAgICAgLy8gdG9hc3RyLndhcm5pbmcoXCJPdXIgdmlkZW8gc3RyZWFtIGhhcyBiZWVuIHJlamVjdGVkLCB2aWV3ZXJzIHdvbid0IHNlZSB1c1wiKVxuICAgICAgICAgICAgICAgICAgICAvLyBIaWRlIHRoZSB3ZWJjYW0gdmlkZW9cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIG9ubG9jYWxzdHJlYW06IGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgICAgICAgICAgICAgICAvLyBKYW51cy5kZWJ1ZygnIDo6OiBHb3QgYSBsb2NhbCBzdHJlYW0gOjo6JylcbiAgICAgICAgICAgICAgICBpbnN0YW5jZS5teXN0cmVhbSA9IHN0cmVhbVxuICAgICAgICAgICAgICAgIC8vIEphbnVzLmRlYnVnKHN0cmVhbSlcblxuICAgICAgICAgICAgICAgIC8vIHZhciB2aWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJylcbiAgICAgICAgICAgICAgICAvLyB2aWRlby5pZCA9IHN0cmVhbS5pZGRcbiAgICAgICAgICAgICAgICAvLyB2aWRlby5zZXRBdHRyaWJ1dGUoJ2F1dG9wbGF5JywgJ3RydWUnKVxuICAgICAgICAgICAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2aWRlb3MnKS5wcmVwZW5kKHZpZGVvKVxuICAgICAgICAgICAgICAgIC8vIEphbnVzLmF0dGFjaE1lZGlhU3RyZWFtKHZpZGVvLCBzdHJlYW0pXG5cbiAgICAgICAgICAgICAgICB2YXIgdmlkZW9cblxuICAgICAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZmVlZDAnKSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgdmlkZW8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd2aWRlbycpXG4gICAgICAgICAgICAgICAgICB2aWRlby5pZCA9ICdmZWVkMCdcbiAgICAgICAgICAgICAgICAgIHZpZGVvLnNldEF0dHJpYnV0ZSgnYXV0b3BsYXknLCAndHJ1ZScpXG4gICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlkZW9zJykuYXBwZW5kQ2hpbGQodmlkZW8pXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHZpZGVvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZlZWQwJylcbiAgICAgICAgICAgICAgICAgIHZpZGVvLnNldEF0dHJpYnV0ZSgnYXV0b3BsYXknLCAndHJ1ZScpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgSmFudXMuYXR0YWNoTWVkaWFTdHJlYW0odmlkZW8sIHN0cmVhbSlcblxuICAgICAgICAgICAgICAgIGlmIChpbnN0YW5jZS5zZnV0ZXN0LndlYnJ0Y1N0dWZmLnBjLmljZUNvbm5lY3Rpb25TdGF0ZSAhPT0gJ2NvbXBsZXRlZCcgJiZcbiAgICAgICAgICAgICAgICBpbnN0YW5jZS5zZnV0ZXN0LndlYnJ0Y1N0dWZmLnBjLmljZUNvbm5lY3Rpb25TdGF0ZSAhPT0gJ2Nvbm5lY3RlZCcpIHt9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIG9ucmVtb3Rlc3RyZWFtOiBmdW5jdGlvbiAoc3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlIHB1Ymxpc2hlciBzdHJlYW0gaXMgc2VuZG9ubHksIHdlIGRvbid0IGV4cGVjdCBhbnl0aGluZyBoZXJlXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIG9uY2xlYW51cDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIC8vIEphbnVzLmxvZygnIDo6OiBHb3QgYSBjbGVhbnVwIG5vdGlmaWNhdGlvbjogd2UgYXJlIHVucHVibGlzaGVkIG5vdyA6OjonKVxuICAgICAgICAgICAgICAgIGluc3RhbmNlLm15c3RyZWFtID0gbnVsbFxuICAgICAgICAgICAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYXJ0aWNpcGFudDEnKS5zcmNPYmplY3QgPSBudWxsXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ0NsZWFuaW5nIG9sZCB2aWRlbyBvYmplY3QgLi4uICcpXG4gICAgICAgICAgICAgICAgLy8gJCgnI3ZpZGVvbG9jYWwnKS5odG1sKCc8YnV0dG9uIGlkPVwicHVibGlzaFwiIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCI+UHVibGlzaDwvYnV0dG9uPicpO1xuICAgICAgICAgICAgICAgIC8vICQoJyNwdWJsaXNoJykuY2xpY2soZnVuY3Rpb24oKSB7IHB1Ymxpc2hPd25GZWVkKHRydWUpOyB9KTtcbiAgICAgICAgICAgICAgICAvLyAkKFwiI3ZpZGVvbG9jYWxcIikucGFyZW50KCkucGFyZW50KCkudW5ibG9jaygpO1xuICAgICAgICAgICAgICAgIC8vICQoJyNiaXRyYXRlJykucGFyZW50KCkucGFyZW50KCkuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgICAgICAgICAvLyAkKCcjYml0cmF0ZSBhJykudW5iaW5kKCdjbGljaycpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ2phbnVzIEVycm9yJylcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGVycm9yKVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGVzdHJveWVkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnamFudXMgZGVzdHJveWVkJylcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHB1Ymxpc2hPd25GZWVkICh1c2VBdWRpbykge1xuICAgIGluc3RhbmNlLnNmdXRlc3QuY3JlYXRlT2ZmZXIoe1xuICAgICAgbWVkaWE6IHtcbiAgICAgICAgYXVkaW9SZWN2OiBmYWxzZSxcbiAgICAgICAgdmlkZW9SZWN2OiBmYWxzZSxcbiAgICAgICAgYXVkaW9TZW5kOiB1c2VBdWRpbyxcbiAgICAgICAgdmlkZW9TZW5kOiB0cnVlXG4gICAgICB9LCAvLyBQdWJsaXNoZXJzIGFyZSBzZW5kb25seVxuICAgICAgc2ltdWxjYXN0OiBpbnN0YW5jZS5kb1NpbXVsY2FzdCxcbiAgICAgIHNpbXVsY2FzdDI6IGluc3RhbmNlLmRvU2ltdWxjYXN0MixcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChqc2VwKSB7XG4gICAgICAgIC8vIEphbnVzLmRlYnVnKCdHb3QgcHVibGlzaGVyIFNEUCEnKVxuICAgICAgICAvLyBKYW51cy5kZWJ1Zyhqc2VwKVxuXG4gICAgICAgIHZhciBwdWJsaXNoID0ge1xuICAgICAgICAgICdyZXF1ZXN0JzogJ2NvbmZpZ3VyZScsXG4gICAgICAgICAgJ2F1ZGlvJzogdXNlQXVkaW8sXG4gICAgICAgICAgJ3ZpZGVvJzogdHJ1ZVxuICAgICAgICB9XG5cbiAgICAgICAgaW5zdGFuY2Uuc2Z1dGVzdC5zZW5kKHtcbiAgICAgICAgICAnbWVzc2FnZSc6IHB1Ymxpc2gsXG4gICAgICAgICAgJ2pzZXAnOiBqc2VwXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICBKYW51cy5lcnJvcignV2ViUlRDIGVycm9yOicsIGVycm9yKVxuICAgICAgICBpZiAodXNlQXVkaW8pIHtcbiAgICAgICAgICBpbnN0YW5jZS5wdWJsaXNoT3duRmVlZChmYWxzZSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBuZXdSZW1vdGVGZWVkIChpZCwgZGlzcGxheSwgYXVkaW8sIHZpZGVvKSB7XG4gICAgdmFyIHJlbW90ZUZlZWQgPSBudWxsXG4gICAgaW5zdGFuY2UuamFudXMuYXR0YWNoKHtcbiAgICAgIHBsdWdpbjogJ2phbnVzLnBsdWdpbi52aWRlb3Jvb20nLFxuICAgICAgLy8gb3BhcXVlSWQ6IGluc3RhbmNlLm9wYXF1ZUlkLFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHBsdWdpbkhhbmRsZSkge1xuICAgICAgICByZW1vdGVGZWVkID0gcGx1Z2luSGFuZGxlXG4gICAgICAgIHJlbW90ZUZlZWQuc2ltdWxjYXN0U3RhcnRlZCA9IGZhbHNlXG4gICAgICAgIC8vIEphbnVzLmxvZygnUGx1Z2luIGF0dGFjaGVkISAoJyArIHJlbW90ZUZlZWQuZ2V0UGx1Z2luKCkgKyAnLCBpZD0nICsgcmVtb3RlRmVlZC5nZXRJZCgpICsgJyknKVxuICAgICAgICAvLyBKYW51cy5sb2coJyAgLS0gVGhpcyBpcyBhIHN1YnNjcmliZXInKVxuICAgICAgICAvLyBXZSB3YWl0IGZvciB0aGUgcGx1Z2luIHRvIHNlbmQgdXMgYW4gb2ZmZXJcbiAgICAgICAgdmFyIHN1YnNjcmliZSA9IHtcbiAgICAgICAgICAncmVxdWVzdCc6ICdqb2luJyxcbiAgICAgICAgICAncm9vbSc6IGluc3RhbmNlLnRtcElkLFxuICAgICAgICAgICdwdHlwZSc6ICdzdWJzY3JpYmVyJyxcbiAgICAgICAgICAnZmVlZCc6IGlkLFxuICAgICAgICAgICdwcml2YXRlX2lkJzogaW5zdGFuY2UubXlwdnRpZFxuICAgICAgICB9XG4gICAgICAgIGlmIChKYW51cy53ZWJSVENBZGFwdGVyLmJyb3dzZXJEZXRhaWxzLmJyb3dzZXIgPT09ICdzYWZhcmknICYmXG4gICAgICAgICAgKHZpZGVvID09PSAndnA5JyB8fCAodmlkZW8gPT09ICd2cDgnICYmICFKYW51cy5zYWZhcmlWcDgpKSkge1xuICAgICAgICAgIGlmICh2aWRlbykge1xuICAgICAgICAgICAgdmlkZW8gPSB2aWRlby50b1VwcGVyQ2FzZSgpXG4gICAgICAgICAgfVxuICAgICAgICAgIHN1YnNjcmliZVsnb2ZmZXJfdmlkZW8nXSA9IGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgcmVtb3RlRmVlZC52aWRlb0NvZGVjID0gdmlkZW9cbiAgICAgICAgcmVtb3RlRmVlZC5zZW5kKHtcbiAgICAgICAgICAnbWVzc2FnZSc6IHN1YnNjcmliZVxuICAgICAgICB9KVxuICAgICAgfSxcbiAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgSmFudXMuZXJyb3IoJyAgLS0gRXJyb3IgYXR0YWNoaW5nIHBsdWdpbi4uLicsIGVycm9yKVxuICAgICAgfSxcbiAgICAgIG9ubWVzc2FnZTogZnVuY3Rpb24gKG1zZywganNlcCkge1xuICAgICAgICAvLyBKYW51cy5kZWJ1ZygnIDo6OiBHb3QgYSBtZXNzYWdlIChzdWJzY3JpYmVyKSA6OjonKVxuICAgICAgICAvLyBKYW51cy5kZWJ1Zyhtc2cpXG4gICAgICAgIHZhciBldmVudCA9IG1zZ1sndmlkZW9yb29tJ11cbiAgICAgICAgLy8gSmFudXMuZGVidWcoJ0V2ZW50OiAnICsgZXZlbnQpXG4gICAgICAgIGlmIChtc2dbJ2Vycm9yJ10gIT09IHVuZGVmaW5lZCAmJiBtc2dbJ2Vycm9yJ10gIT09IG51bGwpIHtcbiAgICAgICAgICAvLyBib290Ym94LmFsZXJ0KG1zZ1snZXJyb3InXSlcbiAgICAgICAgfSBlbHNlIGlmIChldmVudCAhPT0gdW5kZWZpbmVkICYmIGV2ZW50ICE9IG51bGwpIHtcbiAgICAgICAgICBpZiAoZXZlbnQgPT09ICdhdHRhY2hlZCcpIHtcbiAgICAgICAgICAgIC8vIFN1YnNjcmliZXIgY3JlYXRlZCBhbmQgYXR0YWNoZWRcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgNjsgaSsrKSB7XG4gICAgICAgICAgICAgIGlmIChpbnN0YW5jZS5mZWVkc1tpXSA9PT0gdW5kZWZpbmVkIHx8IGluc3RhbmNlLmZlZWRzW2ldID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaW5zdGFuY2UuZmVlZHNbaV0gPSByZW1vdGVGZWVkXG4gICAgICAgICAgICAgICAgcmVtb3RlRmVlZC5yZmluZGV4ID0gaVxuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlbW90ZUZlZWQucmZpZCA9IG1zZ1snaWQnXVxuICAgICAgICAgICAgcmVtb3RlRmVlZC5yZmRpc3BsYXkgPSBtc2dbJ2Rpc3BsYXknXVxuICAgICAgICAgICAgLy8gSmFudXMubG9nKCdTdWNjZXNzZnVsbHkgYXR0YWNoZWQgdG8gZmVlZCAnICsgcmVtb3RlRmVlZC5yZmlkICsgJyAoJyArIHJlbW90ZUZlZWQucmZkaXNwbGF5ICsgJykgaW4gcm9vbSAnICsgbXNnWydyb29tJ10pXG4gICAgICAgICAgfSBlbHNlIGlmIChldmVudCA9PT0gJ2V2ZW50Jykge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgd2UgZ290IGFuIGV2ZW50IG9uIGEgc2ltdWxjYXN0LXJlbGF0ZWQgZXZlbnQgZnJvbSB0aGlzIHB1Ymxpc2hlclxuICAgICAgICAgICAgdmFyIHN1YnN0cmVhbSA9IG1zZ1snc3Vic3RyZWFtJ11cbiAgICAgICAgICAgIHZhciB0ZW1wb3JhbCA9IG1zZ1sndGVtcG9yYWwnXVxuICAgICAgICAgICAgaWYgKChzdWJzdHJlYW0gIT09IG51bGwgJiYgc3Vic3RyZWFtICE9PSB1bmRlZmluZWQpIHx8ICh0ZW1wb3JhbCAhPT0gbnVsbCAmJiB0ZW1wb3JhbCAhPT0gdW5kZWZpbmVkKSkge1xuICAgICAgICAgICAgICBpZiAoIXJlbW90ZUZlZWQuc2ltdWxjYXN0U3RhcnRlZCkge1xuICAgICAgICAgICAgICAgIHJlbW90ZUZlZWQuc2ltdWxjYXN0U3RhcnRlZCA9IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBXaGF0IGhhcyBqdXN0IGhhcHBlbmVkP1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoanNlcCAhPT0gdW5kZWZpbmVkICYmIGpzZXAgIT09IG51bGwpIHtcbiAgICAgICAgICAvLyBKYW51cy5kZWJ1ZygnSGFuZGxpbmcgU0RQIGFzIHdlbGwuLi4nKVxuICAgICAgICAgIC8vIEphbnVzLmRlYnVnKGpzZXApXG4gICAgICAgICAgLy8gQW5zd2VyIGFuZCBhdHRhY2hcbiAgICAgICAgICByZW1vdGVGZWVkLmNyZWF0ZUFuc3dlcih7XG4gICAgICAgICAgICBqc2VwOiBqc2VwLFxuICAgICAgICAgICAgLy8gQWRkIGRhdGE6dHJ1ZSBoZXJlIGlmIHlvdSB3YW50IHRvIHN1YnNjcmliZSB0byBkYXRhY2hhbm5lbHMgYXMgd2VsbFxuICAgICAgICAgICAgLy8gKG9idmlvdXNseSBvbmx5IHdvcmtzIGlmIHRoZSBwdWJsaXNoZXIgb2ZmZXJlZCB0aGVtIGluIHRoZSBmaXJzdCBwbGFjZSlcbiAgICAgICAgICAgIG1lZGlhOiB7XG4gICAgICAgICAgICAgIGF1ZGlvU2VuZDogZmFsc2UsXG4gICAgICAgICAgICAgIHZpZGVvU2VuZDogZmFsc2VcbiAgICAgICAgICAgIH0sIC8vIFdlIHdhbnQgcmVjdm9ubHkgYXVkaW8vdmlkZW9cbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChqc2VwKSB7XG4gICAgICAgICAgICAgIC8vIEphbnVzLmRlYnVnKCdHb3QgU0RQIScpXG4gICAgICAgICAgICAgIC8vIEphbnVzLmRlYnVnKGpzZXApXG4gICAgICAgICAgICAgIHZhciBib2R5ID0ge1xuICAgICAgICAgICAgICAgICdyZXF1ZXN0JzogJ3N0YXJ0JyxcbiAgICAgICAgICAgICAgICAncm9vbSc6IGluc3RhbmNlLnRtcElkXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmVtb3RlRmVlZC5zZW5kKHtcbiAgICAgICAgICAgICAgICAnbWVzc2FnZSc6IGJvZHksXG4gICAgICAgICAgICAgICAgJ2pzZXAnOiBqc2VwXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgICBKYW51cy5lcnJvcignV2ViUlRDIGVycm9yOicsIGVycm9yKVxuICAgICAgICAgICAgICAvLyBib290Ym94LmFsZXJ0KFwiV2ViUlRDIGVycm9yLi4uIFwiICsgSlNPTi5zdHJpbmdpZnkoZXJyb3IpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgd2VicnRjU3RhdGU6IGZ1bmN0aW9uIChvbikge1xuICAgICAgICAvLyBKYW51cy5sb2coJ0phbnVzIHNheXMgdGhpcyBXZWJSVEMgUGVlckNvbm5lY3Rpb24gKGZlZWQgIycgKyByZW1vdGVGZWVkLnJmaW5kZXggKyAnKSBpcyAnICsgKG9uID8gJ3VwJyA6ICdkb3duJykgKyAnIG5vdycpXG4gICAgICB9LFxuICAgICAgb25sb2NhbHN0cmVhbTogZnVuY3Rpb24gKHN0cmVhbSkge1xuICAgICAgICAvLyBUaGUgc3Vic2NyaWJlciBzdHJlYW0gaXMgcmVjdm9ubHksIHdlIGRvbid0IGV4cGVjdCBhbnl0aGluZyBoZXJlXG4gICAgICB9LFxuICAgICAgb25yZW1vdGVzdHJlYW06IGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgICAgICAgLy8gSmFudXMuZGVidWcoJ1JlbW90ZSBmZWVkICMnICsgcmVtb3RlRmVlZC5yZmluZGV4KVxuICAgICAgICAvLyBjb25zb2xlLmxvZygnUmVtb3RlIGZlZWQgIycgKyByZW1vdGVGZWVkLnJmaW5kZXgpXG4gICAgICAgIGNvbnNvbGUubG9nKCdJbmNvbW1pbmcgb25yZW1vdGVzdHJlYW0gISEhISAhISEhJylcbiAgICAgICAgY29uc29sZS5sb2coc3RyZWFtKVxuICAgICAgICBjb25zb2xlLmxvZyhyZW1vdGVGZWVkKVxuICAgICAgICAvLyBjb25zb2xlLmxvZygnQEBAIEF0dGFjaGluZyBtZWRpYSBzdHJlYW0gLi4uICcsIHN0cmVhbSlcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3N0cmVhbXN0cmVhbXN0cmVhbXN0cmVhbXN0cmVhbXN0cmVhbXN0cmVhbXN0cmVhbXN0cmVhbScpXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHN0cmVhbSlcblxuICAgICAgICB2YXIgdmlkZW9cblxuICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZlZWQnICsgcmVtb3RlRmVlZC5yZmluZGV4KSA9PT0gbnVsbCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdBdHRhY2hpbmcgcmVtb3RlRmVlZC5pZCA6ICcgKyByZW1vdGVGZWVkLmlkICsgJy4nKVxuICAgICAgICAgIHZpZGVvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmlkZW8nKVxuICAgICAgICAgIHZpZGVvLmlkID0gJ2ZlZWQnICsgcmVtb3RlRmVlZC5yZmluZGV4XG4gICAgICAgICAgdmlkZW8uc2V0QXR0cmlidXRlKCdhdXRvcGxheScsICd0cnVlJylcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmlkZW9zJykuYXBwZW5kQ2hpbGQodmlkZW8pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ2ZlZWQuaWQgOiAnICsgcmVtb3RlRmVlZC5pZCArICcgaGFzIGFscmVhZHkgYmVlbiBhdHRhY2hlZC4nKVxuICAgICAgICAgIHZpZGVvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZlZWQnICsgcmVtb3RlRmVlZC5yZmluZGV4KVxuICAgICAgICAgIHZpZGVvLnNldEF0dHJpYnV0ZSgnYXV0b3BsYXknLCAndHJ1ZScpXG4gICAgICAgIH1cblxuICAgICAgICBKYW51cy5hdHRhY2hNZWRpYVN0cmVhbSh2aWRlbywgc3RyZWFtKVxuICAgICAgICAvLyBsZXQgcGFydGljaXBhbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGFydGljaXBhbnQxJylcbiAgICAgICAgLy8gcGFydGljaXBhbnQucmVtb3ZlQXR0cmlidXRlKCdoaWRkZW4nKVxuICAgICAgICAvLyBKYW51cy5hdHRhY2hNZWRpYVN0cmVhbShwYXJ0aWNpcGFudCwgc3RyZWFtKVxuICAgICAgICAvLyBjb25zb2xlLmxvZygnQXR0ZWNoaW5nIG1lZGlhIHN0cmVhbSBvbnJlbW90ZXN0cmVhbSAuLi4uICcpXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHN0cmVhbS5pZCwgcmVtb3RlRmVlZC5yZmluZGV4KVxuICAgICAgfSxcbiAgICAgIG9uY2xlYW51cDogZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBKYW51cy5sb2coJyA6OjogR290IGEgY2xlYW51cCBub3RpZmljYXRpb24gKHJlbW90ZSBmZWVkICcgKyBpZCArICcpIDo6OicpXG5cbiAgICAgICAgY29uc29sZS5sb2cocmVtb3RlRmVlZClcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZlZWQnICsgcmVtb3RlRmVlZC5yZmluZGV4KS5zcmNPYmplY3QgPSBudWxsXG4gICAgICAgIHJlbW90ZUZlZWQubXlzdHJlYW0gPSBudWxsXG4gICAgICAgIC8vIG15c3RyZWFtID0gbnVsbDtcbiAgICAgICAgLy8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BhcnRpY2lwYW50MScpLnNyY09iamVjdCA9IG51bGxcblxuICAgICAgICAvLyBpbnN0YW5jZS5wYXJ0aWNpcGFudHMuZmlsdGVyKHBhcnRpY2lwYW50ID0+IHBhcnRpY2lwYW50LmlkID09PSBpZCkuc3JjT2JqZWN0ID0gbnVsbFxuXG4gICAgICAgIGlmIChpbnN0YW5jZS5iaXRyYXRlVGltZXJbcmVtb3RlRmVlZC5yZmluZGV4XSAhPT0gbnVsbCAmJiBpbnN0YW5jZS5iaXRyYXRlVGltZXJbcmVtb3RlRmVlZC5yZmluZGV4XSAhPT0gbnVsbCkge1xuICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW5zdGFuY2UuYml0cmF0ZVRpbWVyW3JlbW90ZUZlZWQucmZpbmRleF0pXG4gICAgICAgIH1cbiAgICAgICAgaW5zdGFuY2UuYml0cmF0ZVRpbWVyW3JlbW90ZUZlZWQucmZpbmRleF0gPSBudWxsXG4gICAgICAgIHJlbW90ZUZlZWQuc2ltdWxjYXN0U3RhcnRlZCA9IGZhbHNlXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIGdldFF1ZXJ5U3RyaW5nVmFsdWUgKG5hbWUpIHtcbiAgICBuYW1lID0gbmFtZS5yZXBsYWNlKC9bW10vLCAnXFxcXFsnKS5yZXBsYWNlKC9bXFxdXS8sICdcXFxcXScpXG5cbiAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKCdbXFxcXD8mXScgKyBuYW1lICsgJz0oW14mI10qKScpXG4gICAgdmFyIHJlc3VsdHMgPSByZWdleC5leGVjKGxvY2F0aW9uLnNlYXJjaClcblxuICAgIHJldHVybiByZXN1bHRzID09PSBudWxsID8gJycgOiBkZWNvZGVVUklDb21wb25lbnQocmVzdWx0c1sxXS5yZXBsYWNlKC9cXCsvZywgJyAnKSlcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBKaW1iZXJKYW51c1ZpZGVvUm9vbVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/plugins/janus.videoroom.js\n");

/***/ }),

/***/ "./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true&":
/*!***************************************************************************************************!*\
  !*** ./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true& ***!
  \***************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cache_loader_cacheDirectory_node_modules_cache_vue_loader_cacheIdentifier_7b93bd1d_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_freeflowconnect_html_vue_type_template_id_983cbe2e_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!cache-loader?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"7b93bd1d-vue-loader-template\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true& */ \"./node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"7b93bd1d-vue-loader-template\\\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _cache_loader_cacheDirectory_node_modules_cache_vue_loader_cacheIdentifier_7b93bd1d_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_freeflowconnect_html_vue_type_template_id_983cbe2e_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _cache_loader_cacheDirectory_node_modules_cache_vue_loader_cacheIdentifier_7b93bd1d_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_freeflowconnect_html_vue_type_template_id_983cbe2e_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld3MvZnJlZWZsb3djb25uZWN0L2ZyZWVmbG93Y29ubmVjdC5odG1sP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTk4M2NiZTJlJnNjb3BlZD10cnVlJi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy92aWV3cy9mcmVlZmxvd2Nvbm5lY3QvZnJlZWZsb3djb25uZWN0Lmh0bWw/MTNkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSFjYWNoZS1sb2FkZXI/e1xcXCJjYWNoZURpcmVjdG9yeVxcXCI6XFxcIm5vZGVfbW9kdWxlcy8uY2FjaGUvdnVlLWxvYWRlclxcXCIsXFxcImNhY2hlSWRlbnRpZmllclxcXCI6XFxcIjdiOTNiZDFkLXZ1ZS1sb2FkZXItdGVtcGxhdGVcXFwifSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZnJlZWZsb3djb25uZWN0Lmh0bWw/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9OTgzY2JlMmUmc2NvcGVkPXRydWUmXCIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true&\n");

/***/ }),

/***/ "./src/views/freeflowconnect/freeflowconnect.js?vue&type=script&lang=js&":
/*!*******************************************************************************!*\
  !*** ./src/views/freeflowconnect/freeflowconnect.js?vue&type=script&lang=js& ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_cli_plugin_eslint_node_modules_eslint_loader_index_js_ref_13_0_freeflowconnect_js_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader??ref--13-0!./freeflowconnect.js?vue&type=script&lang=js& */ \"./node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js?!./src/views/freeflowconnect/freeflowconnect.js?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_vue_cli_plugin_eslint_node_modules_eslint_loader_index_js_ref_13_0_freeflowconnect_js_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld3MvZnJlZWZsb3djb25uZWN0L2ZyZWVmbG93Y29ubmVjdC5qcz92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdmlld3MvZnJlZWZsb3djb25uZWN0L2ZyZWVmbG93Y29ubmVjdC5qcz9lNmY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B2dWUvY2xpLXBsdWdpbi1lc2xpbnQvbm9kZV9tb2R1bGVzL2VzbGludC1sb2FkZXIvaW5kZXguanM/P3JlZi0tMTMtMCEuL2ZyZWVmbG93Y29ubmVjdC5qcz92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvQHZ1ZS9jbGktcGx1Z2luLWVzbGludC9ub2RlX21vZHVsZXMvZXNsaW50LWxvYWRlci9pbmRleC5qcz8/cmVmLS0xMy0wIS4vZnJlZWZsb3djb25uZWN0LmpzP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/views/freeflowconnect/freeflowconnect.js?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&":
/*!******************************************************************************************************************!*\
  !*** ./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss& ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_freeflowconnect_scss_vue_type_style_index_0_id_983cbe2e_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-style-loader??ref--8-oneOf-1-0!../../../node_modules/css-loader??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss& */ \"./node_modules/vue-style-loader/index.js?!./node_modules/css-loader/index.js?!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&\");\n/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_freeflowconnect_scss_vue_type_style_index_0_id_983cbe2e_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_freeflowconnect_scss_vue_type_style_index_0_id_983cbe2e_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_freeflowconnect_scss_vue_type_style_index_0_id_983cbe2e_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_freeflowconnect_scss_vue_type_style_index_0_id_983cbe2e_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_dist_cjs_js_ref_8_oneOf_1_3_freeflowconnect_scss_vue_type_style_index_0_id_983cbe2e_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld3MvZnJlZWZsb3djb25uZWN0L2ZyZWVmbG93Y29ubmVjdC5zY3NzP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9OTgzY2JlMmUmc2NvcGVkPXRydWUmbGFuZz1zY3NzJi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy92aWV3cy9mcmVlZmxvd2Nvbm5lY3QvZnJlZWZsb3djb25uZWN0LnNjc3M/ZTNhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS04LW9uZU9mLTEtMyEuL2ZyZWVmbG93Y29ubmVjdC5zY3NzP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9OTgzY2JlMmUmc2NvcGVkPXRydWUmbGFuZz1zY3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTgtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS04LW9uZU9mLTEtMyEuL2ZyZWVmbG93Y29ubmVjdC5zY3NzP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9OTgzY2JlMmUmc2NvcGVkPXRydWUmbGFuZz1zY3NzJlwiIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&\n");

/***/ }),

/***/ "./src/views/freeflowconnect/index.vue":
/*!*********************************************!*\
  !*** ./src/views/freeflowconnect/index.vue ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _freeflowconnect_html_vue_type_template_id_983cbe2e_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true& */ \"./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true&\");\n/* harmony import */ var _freeflowconnect_js_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./freeflowconnect.js?vue&type=script&lang=js& */ \"./src/views/freeflowconnect/freeflowconnect.js?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _freeflowconnect_scss_vue_type_style_index_0_id_983cbe2e_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss& */ \"./src/views/freeflowconnect/freeflowconnect.scss?vue&type=style&index=0&id=983cbe2e&scoped=true&lang=scss&\");\n/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n/* harmony import */ var _node_modules_vuetify_loader_lib_runtime_installComponents_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../node_modules/vuetify-loader/lib/runtime/installComponents.js */ \"./node_modules/vuetify-loader/lib/runtime/installComponents.js\");\n/* harmony import */ var _node_modules_vuetify_loader_lib_runtime_installComponents_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vuetify_loader_lib_runtime_installComponents_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var vuetify_lib_components_VAvatar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vuetify/lib/components/VAvatar */ \"./node_modules/vuetify/lib/components/VAvatar/index.js\");\n/* harmony import */ var vuetify_lib_components_VBtn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vuetify/lib/components/VBtn */ \"./node_modules/vuetify/lib/components/VBtn/index.js\");\n/* harmony import */ var vuetify_lib_components_VCard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! vuetify/lib/components/VCard */ \"./node_modules/vuetify/lib/components/VCard/index.js\");\n/* harmony import */ var vuetify_lib_components_VDialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vuetify/lib/components/VDialog */ \"./node_modules/vuetify/lib/components/VDialog/index.js\");\n/* harmony import */ var vuetify_lib_components_VGrid__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vuetify/lib/components/VGrid */ \"./node_modules/vuetify/lib/components/VGrid/index.js\");\n/* harmony import */ var vuetify_lib_components_VIcon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! vuetify/lib/components/VIcon */ \"./node_modules/vuetify/lib/components/VIcon/index.js\");\n/* harmony import */ var vuetify_lib_components_VTextField__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! vuetify/lib/components/VTextField */ \"./node_modules/vuetify/lib/components/VTextField/index.js\");\n/* harmony import */ var vuetify_lib_components_VToolbar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! vuetify/lib/components/VToolbar */ \"./node_modules/vuetify/lib/components/VToolbar/index.js\");\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _freeflowconnect_js_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _freeflowconnect_html_vue_type_template_id_983cbe2e_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _freeflowconnect_html_vue_type_template_id_983cbe2e_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"983cbe2e\",\n  null\n  \n)\n\n/* vuetify-loader */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_node_modules_vuetify_loader_lib_runtime_installComponents_js__WEBPACK_IMPORTED_MODULE_4___default()(component, {VAvatar: vuetify_lib_components_VAvatar__WEBPACK_IMPORTED_MODULE_5__[\"VAvatar\"],VBtn: vuetify_lib_components_VBtn__WEBPACK_IMPORTED_MODULE_6__[\"VBtn\"],VCard: vuetify_lib_components_VCard__WEBPACK_IMPORTED_MODULE_7__[\"VCard\"],VCardActions: vuetify_lib_components_VCard__WEBPACK_IMPORTED_MODULE_7__[\"VCardActions\"],VCardText: vuetify_lib_components_VCard__WEBPACK_IMPORTED_MODULE_7__[\"VCardText\"],VCardTitle: vuetify_lib_components_VCard__WEBPACK_IMPORTED_MODULE_7__[\"VCardTitle\"],VDialog: vuetify_lib_components_VDialog__WEBPACK_IMPORTED_MODULE_8__[\"VDialog\"],VFlex: vuetify_lib_components_VGrid__WEBPACK_IMPORTED_MODULE_9__[\"VFlex\"],VIcon: vuetify_lib_components_VIcon__WEBPACK_IMPORTED_MODULE_10__[\"VIcon\"],VRow: vuetify_lib_components_VGrid__WEBPACK_IMPORTED_MODULE_9__[\"VRow\"],VSpacer: vuetify_lib_components_VGrid__WEBPACK_IMPORTED_MODULE_9__[\"VSpacer\"],VTextField: vuetify_lib_components_VTextField__WEBPACK_IMPORTED_MODULE_11__[\"VTextField\"],VToolbar: vuetify_lib_components_VToolbar__WEBPACK_IMPORTED_MODULE_12__[\"VToolbar\"]})\n\n\n/* hot reload */\nif (true) {\n  var api = __webpack_require__(/*! ./node_modules/vue-hot-reload-api/dist/index.js */ \"./node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(__webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm.js\"))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('983cbe2e')) {\n      api.createRecord('983cbe2e', component.options)\n    } else {\n      api.reload('983cbe2e', component.options)\n    }\n    module.hot.accept(/*! ./freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true& */ \"./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true&\", function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _freeflowconnect_html_vue_type_template_id_983cbe2e_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true& */ \"./src/views/freeflowconnect/freeflowconnect.html?vue&type=template&id=983cbe2e&scoped=true&\");\n(function () {\n      api.rerender('983cbe2e', {\n        render: _freeflowconnect_html_vue_type_template_id_983cbe2e_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n        staticRenderFns: _freeflowconnect_html_vue_type_template_id_983cbe2e_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]\n      })\n    })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this))\n  }\n}\ncomponent.options.__file = \"src/views/freeflowconnect/index.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmlld3MvZnJlZWZsb3djb25uZWN0L2luZGV4LnZ1ZS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy92aWV3cy9mcmVlZmxvd2Nvbm5lY3QvaW5kZXgudnVlPzdkNmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9mcmVlZmxvd2Nvbm5lY3QuaHRtbD92dWUmdHlwZT10ZW1wbGF0ZSZpZD05ODNjYmUyZSZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9mcmVlZmxvd2Nvbm5lY3QuanM/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2ZyZWVmbG93Y29ubmVjdC5qcz92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9mcmVlZmxvd2Nvbm5lY3Quc2Nzcz92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTk4M2NiZTJlJnNjb3BlZD10cnVlJmxhbmc9c2NzcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiOTgzY2JlMmVcIixcbiAgbnVsbFxuICBcbilcblxuLyogdnVldGlmeS1sb2FkZXIgKi9cbmltcG9ydCBpbnN0YWxsQ29tcG9uZW50cyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWV0aWZ5LWxvYWRlci9saWIvcnVudGltZS9pbnN0YWxsQ29tcG9uZW50cy5qc1wiXG5pbXBvcnQgeyBWQXZhdGFyIH0gZnJvbSAndnVldGlmeS9saWIvY29tcG9uZW50cy9WQXZhdGFyJztcbmltcG9ydCB7IFZCdG4gfSBmcm9tICd2dWV0aWZ5L2xpYi9jb21wb25lbnRzL1ZCdG4nO1xuaW1wb3J0IHsgVkNhcmQgfSBmcm9tICd2dWV0aWZ5L2xpYi9jb21wb25lbnRzL1ZDYXJkJztcbmltcG9ydCB7IFZDYXJkQWN0aW9ucyB9IGZyb20gJ3Z1ZXRpZnkvbGliL2NvbXBvbmVudHMvVkNhcmQnO1xuaW1wb3J0IHsgVkNhcmRUZXh0IH0gZnJvbSAndnVldGlmeS9saWIvY29tcG9uZW50cy9WQ2FyZCc7XG5pbXBvcnQgeyBWQ2FyZFRpdGxlIH0gZnJvbSAndnVldGlmeS9saWIvY29tcG9uZW50cy9WQ2FyZCc7XG5pbXBvcnQgeyBWRGlhbG9nIH0gZnJvbSAndnVldGlmeS9saWIvY29tcG9uZW50cy9WRGlhbG9nJztcbmltcG9ydCB7IFZGbGV4IH0gZnJvbSAndnVldGlmeS9saWIvY29tcG9uZW50cy9WR3JpZCc7XG5pbXBvcnQgeyBWSWNvbiB9IGZyb20gJ3Z1ZXRpZnkvbGliL2NvbXBvbmVudHMvVkljb24nO1xuaW1wb3J0IHsgVlJvdyB9IGZyb20gJ3Z1ZXRpZnkvbGliL2NvbXBvbmVudHMvVkdyaWQnO1xuaW1wb3J0IHsgVlNwYWNlciB9IGZyb20gJ3Z1ZXRpZnkvbGliL2NvbXBvbmVudHMvVkdyaWQnO1xuaW1wb3J0IHsgVlRleHRGaWVsZCB9IGZyb20gJ3Z1ZXRpZnkvbGliL2NvbXBvbmVudHMvVlRleHRGaWVsZCc7XG5pbXBvcnQgeyBWVG9vbGJhciB9IGZyb20gJ3Z1ZXRpZnkvbGliL2NvbXBvbmVudHMvVlRvb2xiYXInO1xuaW5zdGFsbENvbXBvbmVudHMoY29tcG9uZW50LCB7VkF2YXRhcixWQnRuLFZDYXJkLFZDYXJkQWN0aW9ucyxWQ2FyZFRleHQsVkNhcmRUaXRsZSxWRGlhbG9nLFZGbGV4LFZJY29uLFZSb3csVlNwYWNlcixWVGV4dEZpZWxkLFZUb29sYmFyfSlcblxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIi92YXIvbGliL2plbmtpbnMvd29ya3NwYWNlLzNib3RfZnJvbnRlbmRfc3RhZ2luZ19idWlsZC9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCc5ODNjYmUyZScpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCc5ODNjYmUyZScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCc5ODNjYmUyZScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vZnJlZWZsb3djb25uZWN0Lmh0bWw/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9OTgzY2JlMmUmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignOTgzY2JlMmUnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy92aWV3cy9mcmVlZmxvd2Nvbm5lY3QvaW5kZXgudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/views/freeflowconnect/index.vue\n");

/***/ })

}]);